<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0510.1702                -->
  <repository-location id='Extreme_Poverty' path='/workbooks' revision='1.2' />
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='Summary-Tableau (State of the Tropics_The Economy_GDP per Capita PPP.xlsx)' inline='true' name='excel.41814.658039594906' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\State of the Tropics_The Economy_GDP per Capita PPP.xlsx' header='yes' imex='1'>
        <relation name='&apos;Summary-Tableau$&apos;' table='[&apos;Summary-Tableau$&apos;]' type='table' />
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' name='[Year]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\Summary-Tableau (State of the Tropics_The Economy_GDP per Capita PPP.xlsx).tde' schema='Extract' tablename='Extract' update-time='6/24/2014 5:47:39 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='341' timestamp-start='2014-06-24 05:47:39.472000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;World (World Bank)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;South East Asia, including China&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Rest of World&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Central &amp; Southern Africa&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;The Tropics&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Northern Africa &amp; Middle East&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='World Indicators' inline='true' name='World Indicators new' version='8.2'>
      <connection class='dataengine' dbname='C:\Users\John\Documents\GitHub\First_Draft\Extreme_Poverty.twb Files\Data\Tableau Samples\World Indicators.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[World Indicators new].[avg:H: Life exp (years):qk]&quot;' value='Life Expectancy' />
          <alias key='&quot;[World Indicators new].[rank:avg:H: Life exp (years):qk]&quot;' value='Rank of Life Expectancy' />
          <alias key='&quot;[World Indicators new].[rank:sum:F: GDP (curr $):qk]&quot;' value='Rank GDP (curr $)' />
          <alias key='&quot;[World Indicators new].[rank:sum:F: GDP per capita (curr $):qk]&quot;' value='Rank of GDP per capita' />
          <alias key='&quot;[World Indicators new].[rank:sum:P: Population (count):qk]&quot;' value='Rank of Population' />
          <alias key='&quot;[World Indicators new].[sum:F: GDP (curr $):qk]&quot;' value='GDP (US $&apos;s)' />
          <alias key='&quot;[World Indicators new].[sum:F: GDP per capita (curr $):qk]&quot;' value='GDP per Capita' />
          <alias key='&quot;[World Indicators new].[sum:P: Population (count):qk]&quot;' value='Population' />
        </aliases>
      </column>
      <column caption='GDP % of Total' datatype='real' default-format='p0%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([F: GDP per capita (curr $)]) / TOTAL(AVG([F: GDP per capita (curr $)]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='GDP per capita (weighted)' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_1590906174513693]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([F: GDP (curr $)])&#13;&#10;/&#13;&#10;SUM([P: Population (count)])' scope-isolation='false' />
      </column>
      <column caption='Rate spread (difference)' datatype='real' name='[Calculation_8570907072742130]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([F: Lending interest rate (%)])-AVG([F: Deposit interest rate (%)])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Country / Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column caption='Date (year)' datatype='datetime' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' caption='Deposit interest rate (%)' datatype='real' name='[F: Deposit interest rate (%)]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='GDP (curr $)' datatype='real' default-format='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' name='[F: GDP (curr $)]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run bold='true'>Gross Domestic Product</run>
            <run> in current US Dollars</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='GDP per capita (curr $)' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[F: GDP per capita (curr $)]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run bold='true'>Gross Domestic Product</run>
            <run> per capita</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Lending interest rate (%)' datatype='real' name='[F: Lending interest rate (%)]' role='measure' type='quantitative'>
      </column>
      <column caption='Health exp (% GDP)' datatype='real' datatype-customized='true' name='[H: Health exp (% GDP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Health exp/cap (curr $)' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0,,,.0B;(&quot;$&quot;#,##0,,,.0B)' name='[H: Health exp/cap (curr $)]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Life exp (years)' datatype='real' default-format='n#,##0;-#,##0' name='[H: Life exp (years)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Population (count)' datatype='real' name='[P: Population (count)]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Subregion]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value=' ' />
        </aliases>
      </column>
      <column-instance column='[H: Life exp (years)]' derivation='Avg' name='[avg:H: Life exp (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country / Region]' derivation='None' name='[none:Country / Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[H: Life exp (years)]' derivation='Avg' name='[rank:avg:H: Life exp (years):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[F: GDP (curr $)]' derivation='Sum' name='[rank:sum:F: GDP (curr $):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[F: GDP per capita (curr $)]' derivation='Sum' name='[rank:sum:F: GDP per capita (curr $):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[P: Population (count)]' derivation='Sum' name='[rank:sum:P: Population (count):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[F: GDP (curr $)]' derivation='Sum' name='[sum:F: GDP (curr $):qk]' pivot='key' type='quantitative' />
      <column-instance column='[F: GDP per capita (curr $)]' derivation='Sum' name='[sum:F: GDP per capita (curr $):qk]' pivot='key' type='quantitative' />
      <column-instance column='[P: Population (count)]' derivation='Sum' name='[sum:P: Population (count):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Date (year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (YEAR(Date (year)))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[[Exclusions (Country Name,YEAR(Date (year)))]]]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country / Region:nk]' />
          <groupfilter function='level-members' level='[tyr:Date:qk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[Region]</field>
          <field>[Subregion]</field>
          <field>[Country / Region]</field>
        </drill-path>
      </drill-paths>
      <folder name='Financial' role='measures'>
        <folder-item name='[Calculation1]' type='field' />
        <folder-item name='[Calculation_1590906174513693]' type='field' />
        <folder-item name='[Calculation_8570907072742130]' type='field' />
        <folder-item name='[F: Deposit interest rate (%)]' type='field' />
        <folder-item name='[F: GDP (curr $)]' type='field' />
        <folder-item name='[F: GDP per capita (curr $)]' type='field' />
        <folder-item name='[F: Lending interest rate (%)]' type='field' />
      </folder>
      <folder name='Health' role='measures'>
        <folder-item name='[H: Health exp (% GDP)]' type='field' />
        <folder-item name='[H: Health exp/cap (curr $)]' type='field' />
        <folder-item name='[H: Life exp (years)]' type='field' />
      </folder>
      <folder name='Population' role='measures'>
        <folder-item name='[P: Population (count)]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;The Americas&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Middle East&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Region:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Europe&quot;</bucket>
            <bucket>&quot;Middle East&quot;</bucket>
            <bucket>&quot;The Americas&quot;</bucket>
            <bucket>&quot;Oceania&quot;</bucket>
            <bucket>&quot;Asia&quot;</bucket>
            <bucket>&quot;Africa&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='Tropics-Tableau (State of the Tropics_The Economy_GDP per Capita PPP.xlsx)' inline='true' name='excel.41812.991802928242' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\State of the Tropics_The Economy_GDP per Capita PPP.xlsx' header='yes' imex='1'>
        <relation name='&apos;Tropics-Tableau$&apos;' table='[&apos;Tropics-Tableau$&apos;]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column caption='Proper_Year' datatype='date' name='[Calculation_3750622235025831]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
      </column>
      <column caption='Year_Date' datatype='date' name='[Calculation_5320623000133821]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[SoT Region]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' name='[Year]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
      <column-instance column='[SoT Region]' derivation='None' name='[none:SoT Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_3750622235025831]' derivation='Year' name='[yr:Calculation_3750622235025831:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_5320623000133821]' derivation='Year' name='[yr:Calculation_5320623000133821:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Date (year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (YEAR(Date (year)))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Proper_Year),SoT Region)' hidden='true' name='[Action (YEAR(Proper_Year),SoT Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Calculation_3750622235025831:ok]' />
          <groupfilter function='level-members' level='[SoT Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Major area, region, country or area,SoT Region)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Major area, region, country or area:nk]' />
          <groupfilter function='level-members' level='[none:SoT Region:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Major area, region, country or area,SoT Region,YEAR(Year_Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Major area, region, country or area:nk]' />
          <groupfilter function='level-members' level='[none:SoT Region:nk]' />
          <groupfilter function='level-members' level='[yr:Calculation_5320623000133821:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Major area, region, country or area,SoT Region,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Major area, region, country or area:nk]' />
          <groupfilter function='level-members' level='[none:SoT Region:nk]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[[Exclusions (Country Name,YEAR(Date (year)))]]]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country / Region:nk]' />
          <groupfilter function='level-members' level='[tyr:Date:qk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\Tropics-Tableau (State of the Tropics_The Economy_GDP per Capita PPP.xlsx).tde' schema='Extract' tablename='Extract' update-time='6/22/2014 1:48:16 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_3750622235025831]' formula='DATE(&quot;01/01/&quot; + STR([Year]))' />
            <calculation column='[Calculation_5320623000133821]' formula='DATE(&quot;01/01/&quot; + STR([Year]))' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3131' timestamp-start='2014-06-22 13:48:16.344000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:SoT Region:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;South East Asia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Northern Africa &amp; Middle East&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Central &amp; Southern Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:SoT Region:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;South America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>&quot;South East Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;Central America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;Central &amp; Southern Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;Northern Africa &amp; Middle East&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' inline='true' name='excel.41812.931655914355' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\Society_Poverty_$1.25 per day.xlsx' header='yes' imex='1'>
        <relation name='&apos;Tropics-Tableau$&apos;' table='[&apos;Tropics-Tableau$&apos;]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
      </column>
      <column caption='Year_Date' datatype='date' name='[Calculation_5320623000133821]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_0660622222907366]' derivation='Year' name='[yr:Calculation_0660622222907366:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_5320623000133821]' derivation='Year' name='[yr:Calculation_5320623000133821:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Date (year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
        </groupfilter>
      </group>
      <group caption='Action (Major area, region, country or area,Year)' hidden='true' name='[Action (Major area, region, country or area,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Major area, region, country or area]' />
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (YEAR(Date (year)))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Proper_Year),Region)' hidden='true' name='[Action (YEAR(Proper_Year),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Calculation_0660622222907366:ok]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Proper_Year),SoT Region)' hidden='true' name='[Action (YEAR(Proper_Year),SoT Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Calculation_0660622222907366:ok]' />
          <groupfilter function='level-members' level='[SoT Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Major area, region, country or area,SoT Region)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Major area, region, country or area:nk]' />
          <groupfilter function='level-members' level='[none:SoT Region:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Major area, region, country or area,SoT Region,YEAR(Year_Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Major area, region, country or area:nk]' />
          <groupfilter function='level-members' level='[none:SoT Region:nk]' />
          <groupfilter function='level-members' level='[yr:Calculation_5320623000133821:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Major area, region, country or area,SoT Region,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Major area, region, country or area:nk]' />
          <groupfilter function='level-members' level='[none:SoT Region:nk]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[[Exclusions (Country Name,YEAR(Date (year)))]]]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country / Region:nk]' />
          <groupfilter function='level-members' level='[tyr:Date:qk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx).tde' schema='Extract' tablename='Extract' update-time='6/22/2014 12:21:39 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_0660622222907366]' formula='DATE(&quot;01/01/&quot; + STR([Year]))' />
            <calculation column='[Calculation_5320623000133821]' formula='DATE(&quot;01/01/&quot; + STR([Year]))' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='846' timestamp-start='2014-06-22 12:21:39.422000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[sum:Ratio of Population in Extreme Poverty:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>0.085900000000000004</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.16949999999999998</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.24640000000000001</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.32280000000000003</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.3795</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.40720000000000001</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.44750000000000001</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.47470000000000001</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.5171</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.56279999999999997</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.60599999999999998</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.63790000000000002</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.67610000000000003</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.72219999999999995</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.76659999999999995</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.82239999999999991</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.8649</bucket>
            </map>
            <map to='#17becf'>
              <bucket>6.4365000000000014</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.0154</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.087100000000000011</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.1779</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.25879999999999997</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.33409999999999995</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.38439999999999996</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.40899999999999997</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.44789999999999996</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.47770000000000001</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.52110000000000001</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.56359999999999999</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.62070000000000003</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.64319999999999988</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.67689999999999995</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.72750000000000004</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.78010000000000002</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.8236</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.8427</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.86569999999999991</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>6.6151999999999997</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.0046999999999999993</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.099900000000000003</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.20610000000000001</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.26419999999999999</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.34610000000000002</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.38799999999999996</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.4229</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.45150000000000001</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.4829</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.5363</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.57489999999999997</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.62340000000000007</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.65269999999999995</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.68510000000000004</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.7339</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.79799999999999993</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.8306</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.88659999999999994</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>1.0462</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2.4455999999999998</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>7.444799999999999</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.063099999999999989</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.14859999999999998</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.23860000000000001</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.30649999999999999</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.36759999999999998</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.40100000000000002</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.44409999999999994</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.46649999999999997</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.50319999999999998</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.55330000000000001</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.60150000000000003</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.63470000000000004</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.66760000000000008</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.71340000000000003</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.75280000000000002</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.81290000000000007</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.85489999999999999</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>1.4887000000000001</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>5.2378</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.029700000000000001</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.12369999999999999</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.23050000000000001</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.29820000000000002</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.36009999999999998</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.39810000000000001</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.43680000000000002</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.45929999999999999</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.49840000000000001</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.54289999999999994</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.5958</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.63090000000000002</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.66520000000000001</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.69709999999999994</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.74209999999999998</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.80540000000000012</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.84650000000000003</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.92290000000000005</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>1.3673999999999999</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>4.4786999999999999</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>8.4655000000000005</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.023599999999999999</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.1182</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.2223</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.2873</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.35600000000000004</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.39280000000000004</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.43140000000000001</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.4582</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.4914</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.54100000000000004</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.59209999999999996</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.62690000000000001</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.66269999999999996</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.68930000000000002</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.73959999999999992</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.80279999999999996</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.83760000000000001</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.9052</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>1.3311999999999997</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>4.1093999999999999</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>7.9171000000000005</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.0054000000000000003</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.1038</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.2072</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.26839999999999997</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.34990000000000004</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.3896</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.42320000000000002</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.4536</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.48409999999999997</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.53639999999999999</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.57869999999999999</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.62529999999999997</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.65359999999999996</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.68530000000000002</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.73680000000000012</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.79959999999999998</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.83069999999999988</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.88919999999999999</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2.9300999999999999</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>7.4597999999999995</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.086800000000000002</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.1772</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.24879999999999999</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.32329999999999998</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.38329999999999997</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.40770000000000001</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.44780000000000003</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.47720000000000001</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.51939999999999997</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.56289999999999996</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.61219999999999997</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.64060000000000006</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.67659999999999998</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.72489999999999999</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.77249999999999996</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.82319999999999993</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.86519999999999997</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>6.4406999999999996</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.0022000000000000001</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.092499999999999999</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.19879999999999998</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.25890000000000002</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.33610000000000001</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.38520000000000004</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.41060000000000002</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.43409999999999999</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.44829999999999998</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.47970000000000002</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.52459999999999996</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.56369999999999998</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.62119999999999997</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.64390000000000003</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.67810000000000004</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.72809999999999997</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.78220000000000001</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.82620000000000005</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.87150000000000005</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>6.9007000000000005</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.070900000000000005</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.159</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.24239999999999998</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.32119999999999999</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.37560000000000004</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.40579999999999999</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.44600000000000001</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.4703</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.50729999999999997</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.55899999999999994</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.60489999999999999</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.63739999999999997</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.6734</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.71889999999999998</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.75749999999999995</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.81930000000000003</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.86150000000000004</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>5.7900000000000009</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.039199999999999999</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.1336</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.2334</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.3019</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.36180000000000001</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.39939999999999998</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.442</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.4612</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.49930000000000002</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.54390000000000005</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.59999999999999998</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.63119999999999998</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.66590000000000005</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.69769999999999999</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.74450000000000005</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.80579999999999996</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.84909999999999997</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.96599999999999997</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>4.6518000000000006</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>8.7788000000000004</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.024900000000000002</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.1192</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.22649999999999998</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.29520000000000002</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.3599</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.39779999999999999</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.43369999999999997</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.4592</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.495</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.54249999999999998</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.59229999999999994</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.62829999999999997</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.66459999999999997</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.69370000000000009</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.74049999999999994</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.80519999999999992</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.84109999999999996</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.91870000000000007</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>4.1894000000000009</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>8.1682000000000006</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.065000000000000002</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.1532</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.2412</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.31480000000000002</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.36820000000000003</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.40259999999999996</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.44530000000000003</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.46679999999999999</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.50460000000000005</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.55549999999999999</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.60409999999999997</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.6361</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.67120000000000002</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.71620000000000006</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.75370000000000004</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.81299999999999994</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.85560000000000003</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>5.6956999999999995</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.011699999999999999</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.10550000000000001</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.2102</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.27649999999999997</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.35259999999999997</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.39169999999999999</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.42349999999999999</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.45520000000000005</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.48770000000000002</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.53659999999999997</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.5887</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.62580000000000002</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.65879999999999994</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.68540000000000001</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.7387999999999999</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.80040000000000011</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.83629999999999993</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.89029999999999998</bucket>
            </map>
            <map to='#d62728'>
              <bucket>1.3129</bucket>
            </map>
            <map to='#d62728'>
              <bucket>3.2309000000000005</bucket>
            </map>
            <map to='#d62728'>
              <bucket>7.8812000000000015</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.074700000000000003</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.16839999999999999</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.24460000000000001</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.32179999999999997</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.37840000000000001</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.40630000000000005</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.44740000000000002</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.4718</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.51700000000000002</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.56259999999999999</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.60509999999999997</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.63770000000000004</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.67430000000000012</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.71959999999999991</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.76200000000000001</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.82069999999999999</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.8619</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>5.8085999999999993</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.044999999999999998</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.13800000000000001</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.23699999999999999</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.3024</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.36479999999999996</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.3997</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.44209999999999999</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.4632</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.5</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.54830000000000001</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.60070000000000001</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.63170000000000004</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.66700000000000004</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.70040000000000002</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.748</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.80590000000000006</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.85010000000000008</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.98159999999999992</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>1.3718999999999997</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>4.7363999999999997</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>9.3323</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.048399999999999999</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.13880000000000001</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.23749999999999999</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.30469999999999997</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.36700000000000005</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.39979999999999999</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.44380000000000003</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.46509999999999996</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.50309999999999999</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.55169999999999997</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.60089999999999999</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.63219999999999998</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.6673</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.70599999999999996</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.74870000000000003</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.80689999999999995</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.8529000000000001</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>5.1676000000000002</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.0032000000000000002</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.093100000000000002</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.2036</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.25920000000000004</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.33990000000000004</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.38740000000000002</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.41999999999999998</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.44909999999999994</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.48109999999999997</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.53369999999999995</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.56430000000000002</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.62149999999999994</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.64410000000000001</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.67830000000000001</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.72930000000000006</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.78659999999999997</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.82629999999999992</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.87260000000000004</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.89159999999999995</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>1.4351</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>6.9998000000000005</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.0178</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.11689999999999999</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.2198</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.2828</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.35320000000000001</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.39250000000000002</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.42380000000000001</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.45659999999999995</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.48899999999999999</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.53759999999999997</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.59119999999999995</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.62609999999999999</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.65989999999999993</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.68659999999999999</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.73950000000000005</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.80120000000000002</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.83709999999999996</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.9012</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>3.9104000000000001</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>7.8877999999999995</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.0045999999999999999</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.096000000000000002</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.20399999999999999</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.2606</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.34210000000000002</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.38750000000000001</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.42119999999999996</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.4506</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.48200000000000004</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.53620000000000001</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.57369999999999999</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.62209999999999999</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.6520999999999999</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.67980000000000007</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.73319999999999996</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.79379999999999995</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.82840000000000003</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.88190000000000002</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2.0067000000000004</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>7.0269999999999992</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Major area, region, country or area:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Micronesia (Fed. States of)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;South East Asia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Northern Africa &amp; Middle East&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Central &amp; Southern Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='World - Tableau (Society_Poverty_$1.25 per day.xlsx)' inline='true' name='excel.41814.922289062502' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\Society_Poverty_$1.25 per day.xlsx' header='yes' imex='1'>
        <relation name='&apos;World - Tableau$&apos;' table='[&apos;World - Tableau$&apos;]' type='table' />
      </connection>
      <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Year]' role='dimension' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\World - Tableau (Society_Poverty_$1.25 per day.xlsx).tde' schema='Extract' tablename='Extract' update-time='6/24/2014 12:08:12 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='22' timestamp-start='2014-06-24 12:08:12.157000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Summary (2)-Tableau (Society_Poverty_$1.25 per day.xlsx)' inline='true' name='excel.41814.925321527779' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='C:\Users\John\Desktop\Society_Poverty_$1.25 per day.xlsx' header='yes' imex='1'>
        <relation name='&apos;Summary (2)-Tableau$&apos;' table='[&apos;Summary (2)-Tableau$&apos;]' type='table' />
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' name='[Year]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\Summary (2)-Tableau (Society_Poverty_$1.25 per day.xlsx).tde' schema='Extract' tablename='Extract' update-time='6/24/2014 12:12:37 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='121' timestamp-start='2014-06-24 12:12:37.460000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;South East Asia&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Rest of World&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Central &amp; Southern Africa&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;The Tropics&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Northern Africa &amp; Middle East&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Online' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Extreme Poverty in Tropical Countries ($1.25 a day)' type='sheet' worksheet='Gradient Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Extreme Poverty in Tropical Countries ($1.25 a day)' />
      </command>
    </action>
    <action caption='Filter 1 (generated) 1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' worksheet='Gradient Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Filter 1 (generated) 2' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Extreme Poverty' type='sheet' worksheet='Trend Lines' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sheet 14' />
        <param name='special-fields' value='all' />
        <param name='target' value='Extreme Poverty' />
      </command>
    </action>
    <action caption='Highlight Subregion 1' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source type='sheet' worksheet='Map Matching Regions' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region,Subregion' />
        <param name='target' value='Map Matching Regions' />
      </command>
    </action>
    <action caption='Filter 1 (generated) 2 1' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 5' type='sheet' worksheet='Trend Lines' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 5' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country Trend Lines'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Avg' name='[avg:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0660622222907366]' derivation='Year-Trunc' name='[tyr:Calculation_0660622222907366:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Major area, region, country or area]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='Ratio in Extreme Poverty' />
            <format attr='subtitle' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' value='Century Gothic' />
            <format attr='font-size' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' value='9' />
            <format attr='color' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' value='#000000' />
            <format attr='font-weight' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' value='normal' />
            <format attr='font-weight' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='normal' />
            <format attr='font-family' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='Century Gothic' />
            <format attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='#000000' />
            <format attr='font-size' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='9' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Select a year :'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='16'>Select a year :</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' />
              <text column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Major area, region, country or area:&#9;</run>
                <run bold='true'>&lt;[excel.41812.931655914355].[none:Major area, region, country or area:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[excel.41812.931655914355].[none:Year:ok]&gt;&#10;</run>
                <run fontcolor='#787878'>Ratio of Population in Extreme Poverty:&#9;</run>
                <run bold='true'>&lt;[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]</cols>
        <pages>
          <column>[excel.41812.931655914355].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' line-pattern='line-pattern-dotted' line-stroke-width='1' lines='true' mark-type='all' marks='false' />
      </table>
    </worksheet>
    <worksheet name='Gradient Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>&lt;</run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>Page Name</run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Avg' name='[avg:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel.41812.931655914355].[Latitude (generated)]' included-values='in-range'>
            <min>-22.125999999999998</min>
            <max>35.175300000000007</max>
          </filter>
          <filter class='quantitative' column='[excel.41812.931655914355].[Longitude (generated)]' included-values='in-range'>
            <min>-101.67999999999999</min>
            <max>177.18599999999998</max>
          </filter>
          <filter class='quantitative' column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>0.98159999999999992</max>
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</column>
            <column>[excel.41812.931655914355].[Longitude (generated)]</column>
            <column>[excel.41812.931655914355].[Latitude (generated)]</column>
            <column>[excel.41812.931655914355].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='font-family' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='Century Gothic' />
            <format attr='font-size' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='9' />
            <format attr='color' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' palette='area-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='Ratio in Extreme Poverty'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='12'>Ratio in Extreme Poverty</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[excel.41812.931655914355].[Longitude (generated)]' value=' Longitude'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'> Longitude</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[Latitude (generated)]' value='Latitude'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'>Latitude</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[none:Region:nk]' value='Select a region of interest :'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='16'>Select a region of interest :</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value=' Ratio of Population'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'> Ratio of Population</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Year'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='16'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' />
              <color column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' />
              <geometry column='[excel.41812.931655914355].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[Latitude (generated)]</rows>
        <cols>[excel.41812.931655914355].[Longitude (generated)]</cols>
        <pages>
          <column>[excel.41812.931655914355].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Map Matching Regions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='10'>Currently filtered to :</run>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='12'>Æ </run>
            <run fontcolor='#d8504c' fontname='Century Gothic' fontsize='12'>&lt;[excel.41812.931655914355].[none:SoT Region:nk]&gt; - &lt;[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
            </column>
            <column caption='Year_Date' datatype='date' name='[Calculation_5320623000133821]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0660622222907366]' derivation='Year' name='[yr:Calculation_0660622222907366:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_5320623000133821]' derivation='Year' name='[yr:Calculation_5320623000133821:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_0660622222907366:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[yr:Calculation_5320623000133821:ok]'>
            <groupfilter function='level-members' level='[yr:Calculation_5320623000133821:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[yr:Calculation_5320623000133821:ok]</column>
            <column>[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-family' value='Century Gothic' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-family' value='Century Gothic' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' />
              <lod column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Æ&#10;</run>
                <run fontcolor='#787878'>Region:</run>
                <run bold='true'>&lt;[excel.41812.931655914355].[none:SoT Region:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Country : </run>
                <run bold='true'>&lt;[excel.41812.931655914355].[none:Major area, region, country or area:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GDP : </run>
                <run bold='true'>&#9;&lt;[excel.41812.931655914355].[sum:Estimated GDP per capita, PPP (constant 2005 international $):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.383216381072998' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-halo' value='false' />
                <format attr='mark-transparency' value='188' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[Latitude (generated)]</rows>
        <cols>[excel.41812.931655914355].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Trends'>
      <layout-options>
        <title>
          <formatted-text>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0660622222907366]' derivation='Year-Trunc' name='[tyr:Calculation_0660622222907366:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Major area, region, country or area]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='Ratio in Extreme Poverty' />
            <format attr='subtitle' class='0' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' value='Century Gothic' />
            <format attr='color' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Region:nk]' />
              <text column='[excel.41812.931655914355].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0660622222907366]' derivation='Year' name='[yr:Calculation_0660622222907366:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]'>
            <groupfilter from='&quot;Caribbean&quot;' function='range' level='[none:Region:nk]' to='&quot;South East Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_0660622222907366:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]</column>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]' value='Century Gothic' />
            <format attr='color' field='[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]' value='#000000' />
            <format attr='font-weight' field='[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]' value='normal' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Century Gothic' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#353535' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Region:nk]' />
              <text column='[excel.41812.931655914355].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-line-last' value='false' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='97'>
            <formatted-text>
              <run fontsize='12'>Forecast</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.25'>
                  <node-reference>
                    <fields>
                      <field>[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>2010</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='228148.46623235152'>
                  <node-reference>
                    <axis>[excel.41812.931655914355].[fVal:sum:Estimated GDP per capita, PPP (constant 2005 international $):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </point>
            <body x='-129' y='-34' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='World - Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41814.922289062502' />
          </datasources>
          <datasource-dependencies datasource='excel.41814.922289062502'>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41814.922289062502].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;The Tropics&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel.41814.922289062502].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41814.922289062502].[none:Region:nk]' />
              <text column='[excel.41814.922289062502].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41814.922289062502].[sum:Ratio of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41814.922289062502].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 14'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'>Global Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Summary (2)-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41814.925321527779' />
          </datasources>
          <datasource-dependencies datasource='excel.41814.925321527779'>
            <column datatype='real' name='[% of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% of Population in Extreme Poverty]' derivation='Sum' name='[sum:% of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41814.925321527779].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41814.925321527779].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Rest of World&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;The Tropics&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel.41814.925321527779].[none:Region:nk]</column>
            <column>[excel.41814.925321527779].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[excel.41814.925321527779].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.41814.925321527779].[none:Year:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[excel.41814.925321527779].[none:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[excel.41814.925321527779].[sum:% of Population in Extreme Poverty:qk]' scope='rows' value='% in Extreme Poverty' />
            <format attr='subtitle' class='0' field='[excel.41814.925321527779].[sum:% of Population in Extreme Poverty:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.41814.925321527779].[sum:% of Population in Extreme Poverty:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41814.925321527779].[none:Year:qk]' value='Century Gothic' />
            <format attr='font-size' field='[excel.41814.925321527779].[none:Year:qk]' value='9' />
            <format attr='color' field='[excel.41814.925321527779].[none:Year:qk]' value='#000000' />
            <format attr='font-family' field='[excel.41814.925321527779].[sum:% of Population in Extreme Poverty:qk]' value='Century Gothic' />
            <format attr='font-size' field='[excel.41814.925321527779].[sum:% of Population in Extreme Poverty:qk]' value='9' />
            <format attr='color' field='[excel.41814.925321527779].[sum:% of Population in Extreme Poverty:qk]' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41814.925321527779].[none:Region:nk]' />
              <text column='[excel.41814.925321527779].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41814.925321527779].[sum:% of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41814.925321527779].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 15'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>Population in Extreme Poverty - </run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>&lt;</run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>Page Name</run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Avg' name='[avg:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (YEAR(Proper_Year),Region)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Calculation_0660622222907366:ok]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel.41812.931655914355].[Latitude (generated)]' included-values='in-range'>
            <min>-22.125999999999998</min>
            <max>35.175300000000007</max>
          </filter>
          <filter class='quantitative' column='[excel.41812.931655914355].[Longitude (generated)]' included-values='in-range'>
            <min>-101.67999999999999</min>
            <max>177.18599999999998</max>
          </filter>
          <filter class='quantitative' column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>0.98159999999999992</max>
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</column>
            <column>[excel.41812.931655914355].[Longitude (generated)]</column>
            <column>[excel.41812.931655914355].[Latitude (generated)]</column>
            <column>[excel.41812.931655914355].[none:Year:ok]</column>
            <column>[excel.41812.931655914355].[Action (YEAR(Proper_Year),Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='font-family' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='Century Gothic' />
            <format attr='font-size' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='9' />
            <format attr='color' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' palette='area-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[excel.41812.931655914355].[Longitude (generated)]' value=' Longitude'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'> Longitude</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[Latitude (generated)]' value='Latitude'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'>Latitude</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[none:Region:nk]' value='Select a region of interest :'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='16'>Select a region of interest :</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value=' Ratio of Population'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'> Ratio of Population</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Year'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='16'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' />
              <lod column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' />
              <color column='[excel.41812.931655914355].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[Latitude (generated)]</rows>
        <cols>[excel.41812.931655914355].[Longitude (generated)]</cols>
        <pages>
          <column>[excel.41812.931655914355].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='None' name='[none:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Major area, region, country or area]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' direction='DESC' using='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]'>
          </sort>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[none:Year:ok]</column>
            <column>[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='124' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='Century Gothic' />
            <format attr='font-weight' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='normal' />
            <format attr='color' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='#000000' />
            <format attr='font-size' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Avg' name='[avg:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Major area, region, country or area]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' direction='DESC' using='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]'>
          </sort>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='Century Gothic' />
            <format attr='color' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='#000000' />
            <format attr='font-weight' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='normal' />
            <format attr='font-size' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='9' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' num-steps='10' palette='area-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' />
              <text column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='None' name='[none:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='Century Gothic' />
            <format attr='font-weight' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='normal' />
            <format attr='color' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='#000000' />
            <format attr='font-size' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</rows>
        <cols>[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Avg' name='[avg:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0660622222907366]' derivation='Year-Trunc' name='[tyr:Calculation_0660622222907366:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Major area, region, country or area]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='Ratio in Extreme Poverty' />
            <format attr='subtitle' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='Century Gothic' />
            <format attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Region:nk]' />
              <text column='[excel.41812.931655914355].[none:Region:nk]' />
              <text column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[excel.41812.931655914355].[none:Region:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</run>
                <run fontcolor='#000000'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Symbol Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>Population in Extreme Poverty - </run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>&lt;</run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>Page Name</run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Avg' name='[avg:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (YEAR(Proper_Year),Region)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Calculation_0660622222907366:ok]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel.41812.931655914355].[Latitude (generated)]' included-values='in-range'>
            <min>-22.125999999999998</min>
            <max>35.175300000000007</max>
          </filter>
          <filter class='quantitative' column='[excel.41812.931655914355].[Longitude (generated)]' included-values='in-range'>
            <min>-101.67999999999999</min>
            <max>177.18599999999998</max>
          </filter>
          <filter class='quantitative' column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>0.98159999999999992</max>
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</column>
            <column>[excel.41812.931655914355].[Longitude (generated)]</column>
            <column>[excel.41812.931655914355].[Latitude (generated)]</column>
            <column>[excel.41812.931655914355].[none:Year:ok]</column>
            <column>[excel.41812.931655914355].[Action (YEAR(Proper_Year),Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='font-family' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='Century Gothic' />
            <format attr='font-size' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='9' />
            <format attr='color' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' palette='area-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[excel.41812.931655914355].[Longitude (generated)]' value=' Longitude'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'> Longitude</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[Latitude (generated)]' value='Latitude'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'>Latitude</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[none:Region:nk]' value='Select a region of interest :'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='16'>Select a region of interest :</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value=' Ratio of Population'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'> Ratio of Population</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Year'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='16'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' />
              <color column='[excel.41812.931655914355].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[Latitude (generated)]</rows>
        <cols>[excel.41812.931655914355].[Longitude (generated)]</cols>
        <pages>
          <column>[excel.41812.931655914355].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Trend Lines'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0660622222907366]' derivation='Year' name='[yr:Calculation_0660622222907366:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_0660622222907366:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]' value='Century Gothic' />
            <format attr='color' field='[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]' value='#000000' />
            <format attr='font-weight' field='[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]' value='normal' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Century Gothic' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#353535' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Region:nk]' />
              <text column='[excel.41812.931655914355].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='97'>
            <formatted-text>
              <run fontsize='12'>Forecast</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.25'>
                  <node-reference>
                    <fields>
                      <field>[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>2010</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='228148.46623235152'>
                  <node-reference>
                    <axis>[excel.41812.931655914355].[fVal:sum:Estimated GDP per capita, PPP (constant 2005 international $):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </point>
            <body x='-129' y='-34' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Trends Trop vs World'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Global Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Century Gothic' />
            <format attr='font-size' value='9' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Region:nk]' />
              <text column='[excel.41812.931655914355].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-line-last' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41812.931655914355].[none:Year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 3'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Symbol Map' show-title='true' w='84000' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='25875' id='6' name='Symbol Map' param='[excel.41812.931655914355].[none:Region:nk]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='22875' id='7' name='Symbol Map' param='[excel.41812.931655914355].[none:Region:nk]' type='color' w='16000' x='84000' y='25875'>
              </zone>
              <zone h='15000' id='8' name='Symbol Map' type='currpage' w='16000' x='84000' y='48750'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>&lt;</run>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>Sheet Name</run>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f7f7f7' />
        </style-rule>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='21' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='7472' id='20' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone fixed-size='61' h='8764' id='22' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='7472'>
              <zone h='8764' id='23' type='empty' w='5301' x='0' y='7472'>
              </zone>
              <zone fixed-size='387' h='8764' id='26' is-fixed='true' name='Country Trend Lines' type='currpage' w='45663' x='5301' y='7472'>
              </zone>
              <zone fixed-size='355' h='8764' id='13' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[none:Region:nk]' type='filter' w='43735' x='50964' y='7472'>
              </zone>
              <zone h='8764' id='24' type='empty' w='5301' x='94699' y='7472'>
              </zone>
            </zone>
            <zone h='83189' id='19' type='layout-basic' w='100000' x='0' y='16236'>
              <zone h='83189' id='5' param='horz' type='layout-flow' w='100000' x='0' y='16236'>
                <zone h='83189' id='3' type='layout-basic' w='74578' x='0' y='16236'>
                  <zone h='53546' id='1' name='Gradient Map' show-title='true' w='74578' x='0' y='16236'>
                  </zone>
                  <zone h='29643' id='10' name='Country Trend Lines' w='54920' x='19658' y='69782'>
                  </zone>
                  <zone h='29643' id='27' name='Sheet 3' w='19658' x='0' y='69782'>
                  </zone>
                </zone>
                <zone fixed-size='211' h='83189' id='17' is-fixed='true' type='layout-basic' w='25422' x='74578' y='16236'>
                  <zone h='42599' id='4' param='vert' type='layout-flow' w='25422' x='74578' y='16236'>
                    <zone fixed-size='53' h='8765' id='6' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' w='25422' x='74578' y='16236'>
                    </zone>
                    <zone fixed-size='77' h='9362' id='14' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' type='filter' w='25422' x='74578' y='25001'>
                    </zone>
                    <zone fixed-size='97' h='9362' id='15' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[Longitude (generated)]' type='filter' w='25422' x='74578' y='34363'>
                    </zone>
                    <zone fixed-size='170' h='9362' id='16' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[Latitude (generated)]' type='filter' w='25422' x='74578' y='43725'>
                    </zone>
                    <zone h='5748' id='28' name='Sheet 3' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' w='25422' x='74578' y='53087'>
                    </zone>
                  </zone>
                  <zone h='40590' id='18' param='vert' type='layout-flow' w='25422' x='74578' y='58835'>
                    <zone fixed-size='456' h='40590' id='11' is-fixed='true' name='Region Trends' show-title='true' w='25422' x='74578' y='58835'>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontalignment='0' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>&lt;Sheet Name&gt;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Century Gothic' fontsize='14' italic='true'>Click a point</run>
            <run bold='false' fontalignment='0' fontcolor='#000000' fontname='Century Gothic' fontsize='14' italic='true'>Æ </run>
            <run fontalignment='0' fontcolor='#000000' fontname='Century Gothic' fontsize='14' italic='true'>on the graph</run>
            <run bold='false' fontalignment='0' fontcolor='#000000' fontname='Century Gothic' fontsize='14' italic='true'> to filter the map to a certain year or region</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d7d7d7' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='21' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='16' param='horz' type='layout-flow' w='99500' x='0' y='0'>
              <zone fixed-size='443' h='100000' id='13' is-fixed='true' param='vert' type='layout-flow' w='55375' x='0' y='0'>
                <zone h='16334' id='12' type='title' w='55375' x='0' y='0'>
                </zone>
                <zone h='24334' id='18' type='text' w='55375' x='0' y='16334'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Century Gothic' fontsize='10'>The concept of poverty is central to any discussion about progress, human development and wellbeing. Extreme poverty is defined as average</run>
                    <run bold='true' fontcolor='#000000' fontname='Century Gothic' fontsize='12'> daily consumption of $1.25</run>
                    <run fontcolor='#000000' fontname='Century Gothic' fontsize='10'> per day and, in reality, means</run>
                    <run bold='true' fontcolor='#000000' fontname='Century Gothic' fontsize='12'> living on the edge of subsistence</run>
                    <run fontcolor='#000000' fontname='Century Gothic' fontsize='10'>. Values are for developing nations only. Values for Brazil, Mexico, China, India, Bangladesh and Saudi Arabia represent only the tropical region of those nations.</run>
                    <run fontname='Calibri' fontsize='11'>Æ &#10;</run>
                    <run fontcolor='#000000' fontname='Century Gothic'>Æ </run>
                    <run fontname='Calibri' fontsize='11'>Æ&#10;</run>
                  </formatted-text>
                </zone>
                <zone h='58665' id='19' name='Symbol Map' show-title='true' w='55375' x='0' y='40668'>
                  <layout-cache minheight='237' type-h='scalable' type-w='fixed' />
                </zone>
              </zone>
              <zone h='100000' id='17' param='vert' type='layout-flow' w='44124' x='55375' y='0'>
                <zone fixed-size='360' h='62001' id='1' is-fixed='true' name='Trend Lines' show-title='true' w='44124' x='55375' y='0'>
                  <layout-cache type-h='fixed' type-w='cell' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 6'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='7' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='80723' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='80723' x='0' y='0'>
                <zone h='100000' id='1' name='Symbol Map' show-title='true' w='80723' x='0' y='0'>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='6' is-fixed='true' param='vert' type='layout-flow' w='19277' x='80723' y='0'>
              <zone h='17817' id='8' name='Symbol Map' type='currpage' w='19277' x='80723' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Extreme Poverty'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontalignment='0' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>&lt;Sheet Name&gt;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Century Gothic' fontsize='14' italic='true'>Click a point</run>
            <run bold='false' fontalignment='0' fontcolor='#000000' fontname='Century Gothic' fontsize='14' italic='true'>Æ </run>
            <run fontalignment='0' fontcolor='#000000' fontname='Century Gothic' fontsize='14' italic='true'>on the graph</run>
            <run bold='false' fontalignment='0' fontcolor='#000000' fontname='Century Gothic' fontsize='14' italic='true'> to filter the map to year or region.</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d7d7d7' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='24' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='21' param='horz' type='layout-flow' w='99500' x='0' y='0'>
              <zone h='100000' id='16' param='horz' type='layout-flow' w='99500' x='0' y='0'>
                <zone fixed-size='481' h='100000' id='13' is-fixed='true' param='vert' type='layout-flow' w='60125' x='0' y='0'>
                  <zone h='16334' id='12' type='title' w='60125' x='0' y='0'>
                  </zone>
                  <zone fixed-size='148' h='26001' id='18' is-fixed='true' type='text' w='60125' x='0' y='16334'>
                    <formatted-text>
                      <run fontcolor='#000000' fontname='Century Gothic' fontsize='10'>The concept of poverty is central to any discussion about progress, human development and wellbeing. Extreme poverty is defined as average</run>
                      <run bold='true' fontcolor='#000000' fontname='Century Gothic' fontsize='12'> daily consumption of $1.25</run>
                      <run fontcolor='#000000' fontname='Century Gothic' fontsize='10'> per day and, in reality, means living</run>
                      <run bold='true' fontcolor='#000000' fontname='Century Gothic' fontsize='12'> on the edge of subsistence</run>
                      <run fontcolor='#000000' fontname='Century Gothic' fontsize='10'>. Values are for developing nations only. Values for Brazil, Mexico, China, India, Bangladesh and Saudi Arabia represent only the tropical region of those nations.</run>
                      <run fontname='Calibri' fontsize='11'>Æ &#10;</run>
                      <run fontcolor='#000000' fontname='Century Gothic'>Æ </run>
                      <run fontname='Calibri' fontsize='11'>Æ&#10;</run>
                    </formatted-text>
                  </zone>
                  <zone h='56998' id='19' name='Symbol Map' show-title='true' w='60125' x='0' y='42335'>
                    <layout-cache minheight='237' minwidth='202' type-h='scalable' type-w='scalable' />
                  </zone>
                </zone>
                <zone h='100000' id='17' param='vert' type='layout-flow' w='39372' x='60125' y='0'>
                  <zone fixed-size='360' h='62001' id='1' is-fixed='true' name='Trend Lines' show-title='true' w='39372' x='60125' y='0'>
                    <layout-cache minheight='142' type-h='scalable' type-w='cell' />
                  </zone>
                  <zone h='37332' id='22' name='Sheet 14' show-title='true' w='39372' x='60125' y='62001'>
                    <layout-cache minheight='158' minwidth='143' type-h='scalable' type-w='scalable' />
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Extreme Poverty in Tropical Countries ($1.25 a day)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>&lt;</run>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>Sheet Name</run>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f7f7f7' />
        </style-rule>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='21' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='7472' id='20' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone fixed-size='61' h='8764' id='22' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='7472'>
              <zone h='8764' id='23' type='empty' w='5301' x='0' y='7472'>
              </zone>
              <zone fixed-size='387' h='8764' id='26' is-fixed='true' name='Country Trend Lines' type='currpage' w='45663' x='5301' y='7472'>
              </zone>
              <zone fixed-size='355' h='8764' id='13' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[none:Region:nk]' type='filter' w='43735' x='50964' y='7472'>
              </zone>
              <zone h='8764' id='24' type='empty' w='5301' x='94699' y='7472'>
              </zone>
            </zone>
            <zone h='83189' id='19' type='layout-basic' w='100000' x='0' y='16236'>
              <zone h='83189' id='5' param='horz' type='layout-flow' w='100000' x='0' y='16236'>
                <zone h='83189' id='3' type='layout-basic' w='74578' x='0' y='16236'>
                  <zone h='53546' id='1' name='Gradient Map' show-title='true' w='74578' x='0' y='16236'>
                  </zone>
                  <zone h='29643' id='10' name='Country Trend Lines' w='54920' x='19658' y='69782'>
                  </zone>
                  <zone h='29643' id='27' name='Sheet 3' w='19658' x='0' y='69782'>
                  </zone>
                </zone>
                <zone fixed-size='211' h='83189' id='17' is-fixed='true' type='layout-basic' w='25422' x='74578' y='16236'>
                  <zone h='42599' id='4' param='vert' type='layout-flow' w='25422' x='74578' y='16236'>
                    <zone fixed-size='53' h='8765' id='6' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' w='25422' x='74578' y='16236'>
                    </zone>
                    <zone fixed-size='77' h='9362' id='14' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' type='filter' w='25422' x='74578' y='25001'>
                    </zone>
                    <zone fixed-size='97' h='9362' id='15' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[Longitude (generated)]' type='filter' w='25422' x='74578' y='34363'>
                    </zone>
                    <zone fixed-size='170' h='9362' id='16' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[Latitude (generated)]' type='filter' w='25422' x='74578' y='43725'>
                    </zone>
                    <zone h='5748' id='28' name='Sheet 3' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' w='25422' x='74578' y='53087'>
                    </zone>
                  </zone>
                  <zone h='40590' id='18' param='vert' type='layout-flow' w='25422' x='74578' y='58835'>
                    <zone fixed-size='456' h='40590' id='11' is-fixed='true' name='Region Trends' show-title='true' w='25422' x='74578' y='58835'>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Gradient Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41812.931655914355].[none:Region:nk]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.929562673613].[avg:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Symbol Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41812.931655914355].[none:Region:nk]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[excel.41812.929562673613].[avg:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41812.931655914355].[none:Region:nk]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2010.0</bucket>
          </multibucket>
        </current-page>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[excel.41812.929562673613].[avg:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41812.931655914355].[none:Year:ok]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:ok]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41812.931655914355].[none:Year:ok]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:ok]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
          <field>[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Country Trend Lines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2008.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Region Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Extreme Poverty in Tropical Countries ($1.25 a day)'>
      <active id='23' />
      <zones>
        <zone count='1' dropdown='0' name='Country Trend Lines' name1='Gradient Map' playctrls='0' trailctrls='0' type='currpage' />
        <zone mode='dropdown' name='Gradient Map' param='[excel.41812.931655914355].[none:Region:nk]' type='filter' />
        <zone name='Gradient Map'>
          <viewpoint>
            <current-page>
              <multibucket>
                <bucket>1996.0</bucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Country Trend Lines'>
          <viewpoint>
            <current-page>
              <multibucket>
                <bucket>1996.0</bucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 3'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='Gradient Map' pane-specification-id='0' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' />
        <zone name='Gradient Map' param='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Gradient Map' param='[excel.41812.931655914355].[Longitude (generated)]' show-null-ctrls='false' type='filter' />
        <zone name='Gradient Map' param='[excel.41812.931655914355].[Latitude (generated)]' show-null-ctrls='false' type='filter' />
        <zone name='Sheet 3' pane-specification-id='0' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' />
        <zone name='Region Trends'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel.41812.931655914355].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 4'>
      <zones>
        <zone count='1' dropdown='0' name='Country Trend Lines' name1='Gradient Map' playctrls='0' trailctrls='0' type='currpage' />
        <zone mode='dropdown' name='Gradient Map' param='[excel.41812.931655914355].[none:Region:nk]' type='filter' />
        <zone name='Gradient Map'>
          <viewpoint>
            <current-page>
              <multibucket>
                <bucket>1996.0</bucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Country Trend Lines'>
          <viewpoint>
            <current-page>
              <multibucket>
                <bucket>1996.0</bucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 3'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='Gradient Map' pane-specification-id='0' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' />
        <zone name='Gradient Map' param='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Gradient Map' param='[excel.41812.931655914355].[Longitude (generated)]' show-null-ctrls='false' type='filter' />
        <zone name='Gradient Map' param='[excel.41812.931655914355].[Latitude (generated)]' show-null-ctrls='false' type='filter' />
        <zone name='Sheet 3' pane-specification-id='0' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' />
        <zone name='Region Trends'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel.41812.931655914355].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 3'>
      <zones>
        <zone name='Symbol Map'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel.41812.931655914355].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Symbol Map' pane-specification-id='0' param='[excel.41812.931655914355].[none:Region:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Trend Lines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.991802928242].[yr:Calculation_3750622235025831:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.991802928242].[yr:Calculation_3750622235025831:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Map Matching Regions'>
      <cards>
        <edge name='left'>
          <strip size='150'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[excel.41812.991802928242].[none:Estimated GDP per capita, PPP (constant 2005 international $):qk]</field>
          <field>[excel.41812.991802928242].[none:Major area, region, country or area:nk]</field>
          <field>[excel.41812.991802928242].[none:SoT Region:nk]</field>
          <field>[excel.41812.991802928242].[yr:Calculation_5320623000133821:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Extreme Poverty'>
      <active id='19' />
      <zones>
        <zone forceUpdate='true' name='' type='text' />
        <zone name='Symbol Map'>
          <viewpoint>
            <zoom type='entire-view' />
            <floating-toolbar-visibility value='2' />
          </viewpoint>
        </zone>
        <zone name='Trend Lines'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel.41812.991802928242].[none:Forecast Indicator:nk]</field>
              <field>[excel.41812.991802928242].[none:SoT Region:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Sheet 14'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel.41814.925321527779].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 5'>
      <zones>
        <zone forceUpdate='true' name='' type='text' />
        <zone name='Symbol Map'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Trend Lines'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel.41812.991802928242].[none:Forecast Indicator:nk]</field>
              <field>[excel.41812.991802928242].[none:SoT Region:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Trends Trop vs World'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[excel.41812.931655914355].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41812.931655914355].[none:Region:nk]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41814.922289062502].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41814.922289062502].[none:Region:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41814.925321527779].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41814.925321527779].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41814.925321527779].[none:Region:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 6'>
      <active id='1' />
      <zones>
        <zone name='Symbol Map'>
          <viewpoint>
            <current-page>
              <multibucket>
                <bucket>1981.0</bucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
            <floating-toolbar-visibility value='2' />
          </viewpoint>
        </zone>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 15' width='191'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Extreme Poverty in Tropical Countries ($1.25 a day)' width='192'>
      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
      w9+/5ZHLvvBmHfa//51vc6B28ccu/sIXr2ty5cQERKLw7g98YGwLO/Pcs7749ss/esV148vM
      m7OAEJ9ctWLtE70f//jj6Y89YQAAy49fBgBNhcKC/GJEyOab6sGOJ1euWbMm+vj6+9KSR4T1
      saqOWHbG5668Kv08tPGhrpnLPIsAYO6ys8s/vNjJvXFeIVj1zKb7NodX/WP3D3695smnRz62
      9p60/OJKuXXarPaMNVabsLPnLGz97WMbH7jriQ996nV7dG3pCSfkXAkAPlMpUXsTULZr2rSC
      Gw0/netcnJacseik4Ds/BzjphNPPytgCAGYuPj74zh0AHQCw6olnXnPJ+xABAI9ddjzoejHO
      z+tqAgDbL5xy8tI96m9td7bsHG6duZuAsOKxzRdc+k4EALLOXD5/9YbtgADAAMjGIBEAnHLq
      SZIQwKZoNxli7pHzx3j5E6vXrxr4xh0/Tr95sd3yr2995Qfe/8/v/NdLTziqQbX1WmlKLgsA
      ZLkvffnL1454j//iWzPmzD1m2sQ7YBKUL7/44rdedFlX3oH8tFM6pgHApkfufnLLyClHtB94
      C0/qw1/69s9//J/XXXPN9YnZtZiICABOOPm0ufOPveKzV332ys+cdsJxC+dPA4BxIuEusj7x
      1LPnHXXclVdd/dkrPn3SCcctnNM94eOaphzR98x9A+W6Mfq+X/142rHnAODfveHCT33g3Se+
      9G8R4KRTTpp/9EmfverqKz/zqeVLli6c35O2ZDzOvOANN33hX1sWnpGx9lxXuworrXfnDeMK
      oFOYUe9/fNtQhY159M6fd8w/CQDuvu2XO4YqbMz9t/+ic+GSRr9OW3LDDTfHSqs4/PlPf1o3
      zszW+PdPPGOYh7ZvuOU39+1R/2vf8KZvfeGKrf1FZo7D+n995Zr712w77Zxjb7zxlkSbOCjf
      8oc1xy+a1VnIrXl2Bxvz+GOPz5g/GwAIGy03seI9G9zAGaccf+or3nj1Ndd88tKPHr98WbNM
      2uYs+9wl77rxF7eOlclkm4rlqlHhzTf/LIgVAE3paK7tKTvyEw/fXwm1iqpXffLSc9/8weMX
      TGWjPvmJi0dqURLVH1q7c1ZnDva1hfXMyF/1sY8JAGqees683GveddFRR89+xfrVD6zaNKW5
      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
      1ioHTmQUKC8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOy9ebhl11UfuNbae5/pDu++eaq5SvNYkq2yZVvy
      hHEbGzAmYWiTTjp0BwiQkJA42AZ/8CWxISYQ6HZDPsJgsMMQY7BlSbawbDRZs1ySalCpVPPw
      5nfnM+29Vv9x7nv1aq5XVbJlXD99n+rde/c5Zw9rr73mg3EcwxVcwcWCvt0duILvbFwhoCu4
      JFwhoCu4JFwhIACAv/ofv/OhD33oI7/8sT/+7Oca3fS87f/zJ35t5cc//a8f3zPbvfRuJAt7
      /9Mn/+SULznv7Nj1yqXf/FXCFQICANix/fBHf/3XP/bR/3DjmtIv/KtfXIztudvPz8+t/NhY
      mMucXHo3xGVz842Tv5K/+P8+/sVHdl76zV8l6G93B15D8PzwdXe9+xdc/U8+/7Wf/8d3/fGn
      fuvFQ/MKxFfuxnf/85uCQ7/z6fvHN1zz4X/3L5Pm7G//xn88PrtYGr/2w//6JwHk3r/8o88e
      PxrH3Vvvet9PvP+daXPmk7/xyVYOaZb/yP/5s3fevPnY3u2/9ak/VsYTHc23Fv7gP33oh3/y
      325Yt+5nP/Qrex/+3Jce3h6Gwbq1w6ds6SO7Hvvbh168413bvl1zcl5cIaBTceNtd/zBf7n3
      0XsOJKN3/ObPvR2Af/dXfirN3bPPfP19/+xfv/3GMUNw5MDhj/z6/5ioRb/za7/08nQLIOlf
      v/Xf/fzPAtvf+dUPPX3zzU/9xW++6yf+1bZrJ7Pu4r/5hV++5VO/9V8++f986BO/M1YLG9P7
      PvDPPwTCXah+4tc/Mfvy4/dtr3/yNz+pEB6/5w+fO9hZ7olNmp/47T/5pV/8lw8+n3wbJ+Tc
      uHKEnYr540dr4yM7du28++47EQGR7r77bQTwYz/z4Rfu+b1P/v5nncCmG2+dqEUAMFIpLzS7
      ALW3vmUrAiDpu9900669h45O5zdfPQEAXtR/w1p9ZHqG/fVjtRAA+kY33nbTBgDYdM21mvDA
      S89vffNbFSIA3vqWtw2c6Ij80X/91Y3bvndh+uj08SPtOP+2zMZ5cYWATkCEW4szv/67n/6x
      93/vnW9881/9+V9l1mVJ+y/+8n8xwMxC69997ON07KljTUu0PG/OWgZY/Oyf35NbzuLW5+57
      atvNV123pf+BR55nkcXpAy8e1xvGxit4+Pl9x0Vk/4vfePjpvQBQ3OTa29782D1/1UoyZ/N7
      /udnFpY7Y5PhLa8bNp3nd+45cmhfs5t9O6bk/LhyhAEADI+YX/vQh1CEtP/DP/1L10z0wfj7
      Z+qf/eWPfJiU2bT17tH+0r4XH//t331q4uq3TVb1po2bexdOru+LvIkNN5b8+GO//BFBevcH
      f+7aib6rfurffvoPfu/D9/5PHVT+zUc+7BP9h1/52Kc+9XufbafV4bXve/ebQHmb108CQP+a
      G37ug+/8zx/7qKC6+rotN23sK+6MOvzBf/xjADC377nxHd2JwdK3a3LODbziyriCS8GVI+wK
      LglXCOgKLglXCOgKLgmXU4hO05SZL7y9iCDiqh7xHXeJ53lKqVXd6jsLF09ASbueUVSNzPSx
      I6WBsXJgmDkMwwu/AzMj4qqW6uIuWaF1v4Yu+YeB1Y155uiBPfuPsAgAKG7s3DfLtrtz9/7t
      z21nZmaWVQIAVtt+tZecjrlWvuNI3Ipd4/i+PQfnjhx+6amnduV53mp1ut3O4aOHW82Gdase
      y9lw7ikVzr7+wP1fuO+rjk+0PPziEwcXz2z46czsffbl46taNQAQm9z3wNcusPGLzz72zV37
      AGDnk187OH9CSe9M7312z/QpjVfHgYjom08+uli/cdvWG4znEYqAi0r9zLG1tiCgVd3wVW0v
      AgJgnYhlFinYVmblmwfi3EkncWvt3FSXFg8/vnfn/JfvbXV1aaAcbVjXd/SF7bf/0M/eef2a
      S+/beZklx41dhxo/8SPfhwg7nnvi2Hxz3ebr06P7XO2m1v7nphaaazffcPX6kacff6zRicfW
      X5cdeuL+vd5Nm/+RITiyb9eOvUcMZOtveNPmydqeF545Ote+/fabn37yaSFv25vebBvHn3xu
      h2eob2LL2MBA3Jx/5PFnQId3v/XNzz/xaKOTVIcnX3/LdQCQtBcefuxp0MFb3vyGv/7iPe//
      0X8BAFF50JPWAw8+Cpav2/qGqecef+Bg6Zqxux5/8lnQwZ3bbn/i0YfURz/60QucoPbi9Gc/
      94XJycnrbrq15GtAE4Vhq9VB25jcfH21FDCz53l4wSjml4gu+yW5k9zBsoPcaPI0GU1GUWCo
      0XXdlCf6vf6Itz//Ym141ADesvXm2uDINVuuWjtWza2/4eprh2vlVXXsbL0696ySFw16nf91
      /xMbatln73tmcrT/kb9/aHywtNhufe0bOyZGao889BB2Zr11t915240uj4fL0InW37B+GLL6
      5+598ofe/30zux45jhNbJmqP3vc3Y7fc/dDffIbKA5LUt788veP5Z973/g+Y9sHHX27MHti3
      75Vd73jPD6yp8Re+tv3F5576wI/++AsPPTB69c2Bgs//1V+87T0/sKbm7v36jjCi73nb3Yj4
      /CMP2nL1uZ2HfuT97/niF/52240b2uHGZ7/y56ZvxLamdu6ffeb53avgQOX+0bdtu+3gbLP3
      WQX9VYBqMDoycuE3uRAUW5mtZZsDYO/IYi5+KJZEmLUfaN8//fLMMgCEXu90Zmaik1bx2iGv
      2k7XDxqt1733PWOeH6g3n9Tguhu2iYhz7lsg/zanD9m+Tdf0vXK0ba+56bZ3vOP2/v5Bb35P
      U+Cam29/x9tv7e8fkMXDS+ztpH66k1UWHZYnRwZeCspveds7THf6UJ2efuQwISilAYqWiIiC
      RAjjkxsDTQRpZgE8AEFEBKTTCX7dpo1EOk96R6pX7rv7rW/nxUMziW61OqvgQACQp91GvVEd
      WdcXmdN/tdYac4bvzwZnmZb2qIjYNHFparOUk7ZrzULWVmAVOhKrINeYa2KlQGvUGrUCdjZP
      MuV5K3d57gQAPH1CtpPT9KMv/e6Lu/7+eNzMA3/vr33y9xfmEuPnO3a+dHRmsd2YevrRR+ud
      9LNfvCd0amLt+AWO5fSnXCC8MNrxzOPUP7ntda+3Cweff3HH+IZrB6rR8Jbb/NaB7Tt2Tmy8
      7sZbbj2865lde/aY0uDwQFUFfcO1EqhgpEKPP/NNi8HmzVcPVAMRHhwdv+HaTY8+9NChqcbW
      rTdVDG9/YdfszHF/dNOWyaE733Dbo48+dngmfve77iKQ0dERYR4cmfAUbNqw5tFHHjsy2/2e
      d75FAYyPjSOiiPQNj5SjaKhWZebxsTEV9r3xtmsffeTRowvJ1huvQaLVuTL27frmI48/fdd7
      f2zD8BlcM3Ecn6KFuTTJmh3ryDkR8khhMdk2t8KiNAgzICFg3mlqY4yHxlPkeYhKWi1ki0GA
      SgEREKEiISSlAAlRQCxknSxlpZVSCkxgmWzOnkYQEADRns3Z5g4YRcQ5AYCgpL/42y80Z5MN
      twzeeGfjK9unj73wdG3dSBvG1vd1G+3GcBg++Hx98/VDV/dNfO/3f88FzsxrUwt7+cVnD0wt
      sKi733p3YF6V7q2OgGaOHthzaHbbHbcbdYbenE5AaRxn9XnDHZIcgZFzJBIVgNLoRVmaK8/j
      JOFmE3LOLOqoRNrHqOyUzw4EEIHBOc5zTjIQQaNIKQBxSYZIAqACj0E4z4HAOvIhJ0lBQFCB
      FVLkb1hjfL2SPTz83PRn7tn7i//0pg0j6uVXDk6uXbswN1/u61cuTpjKgUky20qy4b6+SrV8
      gTNzDgI6tPfFUm10z75Dt2y9/UyM+zsbq9PCPM/Lu/X5djrWd0H2HoWUOarPxZBZo7XyIs83
      CiCZP1zt872oDC2rAKhWwbBkRDv0nGPrnMubvWNZaVCAhtEHAEQCJEAgjDwAdEkGmBOCY0k7
      sUFh44OJAAFtTpSgdnZqL3oepymWwpgCCvs+8tWXZlzOf7/3v3/wtuuuvx4AqpUKAAD0POEl
      5uHLxU6Ed+/e46lXXppqXXPTdz0Bxe1WZtk3F3oVKV2rDtbK/c1uG41Wwlk3Ea39DbfHLMxs
      QgMiLs9ctwuupYm1IqPIsxnljBRRdRCUAVBCAgCAgAoFQJhBIZUVGZUz+AKDHtosFXYmjJCI
      RfKM64tx3M01KraxnWqH8dTARn0zthIoX4XN83X/MsDGzcmrbpHW8Twc8P4hWqRXR0D1ZstX
      +cxi3H9hWykHmItzm3GFc81OaS/0oiAMgAgMCQAqQkLAEtAAEkpP32LnnHVMNnFZB7KM8xQ4
      1742YRXDPjARYI9D5E4EpTjgTRiyc3ncbTtqN1KdZ30GRyoalUAQcR5JNoK++lgnRIhUexVe
      l4uGjmo3XFMD2Hzjt+Bh3w6sgoCybmOhbV//5ndF/oUyYmXzWtZia9l4i6kbKymjME3beRxX
      S2WbsmMAAAQhQ6gRPQ+1IqU0EXgeYAjQX2jvLndJO240m2rxuOIEXBJEJe0ZUYFPguzAOhAi
      58UpGCUTGiEINeZMjFoBCpEFL3cmCEqiZFHCvouYrys4BasgoCP7d+/dvf3QfOudb33LcDW4
      kEvQI2+spChixsBKYl09Z0YdVaJjnY6vwqjmA6CIiBW2DloO0wQdI1vwkBCQiC2jZeNhyahS
      GIFXFQCxLml28mZcilCUQXYAnDrIPK9aAZIM8tTlNus0VbkKEgKqNGdCbYwZnJilLHYj8hoN
      M/6OwioIaNMN2zbdsLr8EnEqbWonDTSsiTzne8rLgKfqSai0V04ajXZEoU4RNKlAY2Cw6gOB
      tTEAoPKM0cQOrM27uUtyYOCcHFLWdRmEPoRAmgyBwsZCEitcF0ZMyAigRFiUN5YYyfNMEXgl
      EuOlgHFX+jXUY3mNRol+R2F1MtDs0f0vvXL4qlu2jfadwQR8hruTlAMHbJhd7rLUJE7YMZSC
      PNRBves7oq40YmclIZ1jX19kM0xTZztOcgHFYeRVPQ0qIO1zObAigASIjKrskwu0Fcgt15uZ
      jbwqwVSz4wfK940yXUcUZwF2c8rZJtISq20cDvoPHposQ4Jjw2+/qCm7LDh3WMHpBpHXLFZH
      QPPzs3t2vTC6ZesFEpBVkoTCwgiksVIi31poNdJakDuTjXg5Kq11lUm1O1k9b/mVcEBFCCQs
      wIIAViDnLE077Q6HXqUUqZIPwNwOLCibZTmz106z/nLiYZ6zxEbquWrOcb0FgdNjpUb/gDJl
      obIrAfteGT2ovt5vBVet0ccuasau4CRczqD6czuPnEjKglZ8BPIULPm8lnehcy53OWjxMTix
      NYWBHYhNHaKLU46MZx2xQvIoYJY4tcCW2RljCDu+PwBIrdhGAXaybG4+robhYF8IAJbFOtAK
      ml0rgJqkv+ydsasX4ZdY7SWnjP0UfGvccJcFV7IyruCS8Jpz37yquP9zf/L3z+0BgPlj+37z
      Nz7+pa8/JSLPPvzlj3/iky8fKeolyFPfeKiTfStMRK8pPPH1Bx74ylfm28tRbPblPXueeebZ
      lSFOTz/zzMpLHn7wvgceeOi7i4DeeNcde17YB8B/+Ed/9sGf/Om57V997vlnvvT0sZ/6vz74
      mT/+QxE4vvfZh7cfjczF+NW/o3H82PzkiL9rx8G//+pX7vvrzzz4xAt/e+9XE7YvffPJ+++7
      b++RWQDIrf3rz/zpfffee2S2CQD1dnfTlg3fXQRkjIcAABgq+9WvPrjr8Ozg0HD9yO4HH/xa
      jgFnrV/69788dfzAVP277li3SfPR7dM3jLXN2PXvePOtKZZvumbj/ML8vmOL3/u979i7/XkA
      mJ2fp2DgnW953Uv7TtQr+u4ioCXgz/zih/NjO6668/vXT67/lV/6+Ue+9uD/8c/+ye4nvvre
      n/v4R37mR/7005/9dvfwW401W26866bJZri+vv+5+x/8Rqnk9/X11fr6xgeCL9//wOQ11wBA
      ra9vZGSYlAkCHwA4T/YdOPxdmhufdRaPZv3//gfvAoB9zz/5ph/6v6+eqM1lm/7sD/5m7sVw
      cuNrtx7Pq4Q33HVn8cf6975v6bt1p7S5601vKv540y39APADH/jf4btNC2OX1pvZQH8lTzop
      m3LkAUCjvljuqylEAFicnVqM3ca1ExcXXvgPD9bae5/4dDtvKeUReaoI3lOFxxLVaiMSr+Af
      JL755GNTrfztr9vy+fsfrwwMinDkFlKJ6s3s7e991yf++kem0mOeV/X8qudFge/7vg58Hfoq
      8HXvCFNKXdlz322wtlcKkkxQjtDZvL9/IENdKykfatli3F+rnTeNqkdAx2bnUufO1qgws4pI
      aKgSaABgERZhlm7GAOBp1ET1OA80lQPdTqyvydO02M2L9oSoCKwTRdiMbepEAFZmAAiAiBDI
      QMlTdH5SFhEWyCw3E0cX0P5SIAIKZaBkGrFNnSx3u5gQBMgcs4AIBIbKgUI4V38cCxFgL9sE
      iolNLQNAYBQAtBIb51x8LyIIgIi8ZLm+XPu8Evj9vThMuPrqLe2UJQxuvNEM1Poa3Vxzen21
      Vl+o17zzqFk9Aopz23Fntp6JCEsxHq5EvueBY0lSWwk0CwS+sizd1CkNjTSrRoHvgSCllmc6
      WTt1Q1XdTl1klFHYzq0BVFrqnRQRiQrBo5eVIcIKZVgbo86fjycCce6ApJHlimh1boQi5n6F
      /0FAEM66NsxusKS1gYXFTAB7yTEgzFwr+4FWB+fTwBASJs71KdLqrJ0RAQNQ+DCKzV3MgO+R
      ACCCiOSxXUxyQkQiZh4q6aGy6WZusZtnTlIriEX2zbmIaTnLcXmGV8KxMytcJUGpGpQAAKJw
      EgCCqPd9aWLM2vxNG76vlTcVeUp5ShmllFKkNWmFWtEJLUx6uZunPqyYraJqQmZZRLqZTa1U
      ChaCoIkAwNNkFB1rZBs0Fc2SnIuhRks8pS/UhOhYOpntZmKFaYkNISIAOXGOmfBca7CM0Kg0
      zwFOMNmVuaHnIimBYkuwMAIWZHS29sU9q4GG3gJDr6GIRggMWcflQAeaIk8BQjt11fBM6VW9
      XsHyDJ/0xJM/aEJfU+ZYEVQCrRWVAwyMUoQH5+NuzlJQoJx5pMWe1wSWgYAQZeWyLmVcX1CO
      r9bmA3f91LkaLN2UHTvqUTYArOSxAIjADIjTzTxz0k6sVjhQ0op6rQOjREQrjHM5MB8bhRsG
      o5xltpW1U1vyVcGrC4ajCCZqYSe1hxcTBqAlW5SIMMvRejpQMv2ROff2sizdzJV8rSk/ieaF
      EYEFAM7GlkSEl+ZQPIUA6ERcj5rPcAmLTDfTiVowEOmZVk5EiMAsEzVPITJC5ClNKACGyFNF
      +uM55vxcQMRqqIlgsOQBALMUe4kQPY0iMlnzj9YTRYgIccZOAJEAcJmtIoKA+Aoma8HRepI6
      R6BO+KZFmBlELtep3yOgwZIpM+UsrcRmhSyEBAAsjAIAQAhGY5rzQicnIrZyrJ56mvojs5zF
      N171jzfSbi6EAgB9oZ5rZXHOniZfUyG1WMe+UQQSemrjYHh4MXEgIkJIiAiIvqbAqBMb/Uwo
      1r+d2NwyiwD0poPZCQgCEZ715BYBEUEQBBismGpgEAQQpxppO3OKFJy2p4monfGhhdhTFBpK
      LAsQgLAAAmqCeuaGK95SY2BZygC4KHklNBSaXrbkKeIgInqaNg5Fxd9x5vbNxSyCy2wFe5OR
      Wtk3HwPg8lTI0n+KZKwaRPryJIgsaWGEA5EHAMMVj1naqZ3v5KkFQgk19ZeMpxARG10LAKl1
      zYSroS4YOxTHH4Cnseyr1LqypztpT46eaWXN2E7W/G7mACCxPFb1tSJNoDzVF+q5jgUAQAAE
      RAgNWSc5sU9njWcgRFI4XPEOLyRSUDoCMwuAInVu4aDo7WDZlDxV9jULL7Q6AugRVnzVSl2R
      4osnxBQmREBMrKSOfQXjVa+bcSNhxyIgAhB5qsjaBwBfFxsPWIQQCFdNRuduv/JXT1PFV1ph
      7iQwSlj6IpNaZpbZdpYznCQdChRy25p+vxrq/DLF855qiS7WpuSRr41jEpCSpwEACUFgpFos
      qsS5a3RtkrvhsudEspxTx4aok7nIU8MVf7qVjvcFgyVjWWZbmVJYDvT+2a5SWI/z/sgool7C
      OwsSCggKAuB0MzMKNwxFp3UV4ISgBrnjgwtJ5qBgXYVM02NjZ0cRnj9YNrVQt7qdOAGjVeQH
      zTgdq5UAMHM808qaiQMAQhCBkkeEmORMhLljTUormuz3hq2bamRVpzVhI84dS+Qpo3sdUAgk
      PdXp1YMiXNMfFEqoiMx3Mt9Q6CkAqIZ6upktxrbgqYWiolEGKl4l0Bd/xJ6Gs7oyEKAc6JPi
      nk6coxAaFfapmVZ6YD4mwGqoK4GeaaWpZYWQOQ40IUI1NLnjbuY8Rc3YWgFxQoD1bj5Q8hBg
      oGy6uUusQE8VAiCc7A/OJkSzQKNrC0XXCRT8WUQKzfmcgrMIALNTCIGGbhKXAj9OM1/rKPBY
      HAASYUBqTX8w28rm2nl/pENDxxvpYMkbr/mZZd8QAhaniqfVmv4AABAh9FQ50LllfdLJ++pS
      T4HlISPiYNlbtiAowrE+P/RoupkxIAGJQOjRQEmfMkdZmuTWhVFEiMzMzqHSK49OZ3PLoFCS
      LI/C6BSjyXl8YWdakhMy4lDZHyxJIc0ZjRO1wHHvV1UI5AgAWMiDka+K/elEGrGthqbQNTYM
      hkcWk3bqlFKC6BF4muBMcqiINOP8WCMrzhQp4l4LAxIinkvuEQBxzCLiKUThWilSSmmlrHOI
      qElZdhoUERDiSMVLckaAOOORqj8QGUQ8PZubCAEkzTl3QghGn9QAES9AlbxUnKS8nTxliNAf
      GUSYaWY5OyJqpsyL6Zp+f2VHH/jyfWMD5by8VrqLttPIvHDN5Jr6YvOmW27uzh09MNPoHt9t
      1m3zF/d0mTJdq2g72N93bHZxfHgQ1dkn/YxwzI3YHV5I26kDAEWoFSnCwFChZxV5pYqwkKyL
      pfU0xbmbbqYMaBmmW3kl0GnO7ZRzx4S4pj8IDBUM33HPvLbyuQLCLKnlmdYy9QiAaAJhJhBf
      w8rCZaf3nKUwn8BoxUOUIo9dEYH0tDJCTCy3E2cdWydGIQCOVP1z64OZlU7qBkoGEdXqrFGv
      Oop5KHl683A0VDLMTCBG4XQjPWmKmHe/fEjnzT27ts93gCD/xmNPV6Js75GF517Yobvzc4lM
      jo8BSMpGd6dVqfTY178upJ78xjf27n255wvrdBaD4AQx5dY65sA7NWTYsbQSN9exg5GqRbrg
      NqfbPJYPPseSO84tz3fydsaEhMCIsLY/CDQh4nQrNQoR8HgjBURCAnGbhiLfnFgNEYlz14xt
      I7ZWsFC/BSDQOFkLLEtglCY81kgaCRPS6VbBgtpEwCgZryjfaCIixHo3z6wbqQZxljuW0DeH
      F5I058hXk7WAThiozrNIZ7SffbtQ1A0EgHZqPUVGk4g0YzvVzNYNBJGnWIAQrFVBUAGAgwcP
      DvWFh6cW263G8Oh4p90eHOyfmlm47rpr48bs4ZnmUMWUhtYm9alS/6iH2a7de3VW39cOtt20
      8fCBg6sjIJHCEgoaQSkqvBnFebmshgCc2NMAwAILnWyg5E030/lOPlrxaiWDAqnjyFOOZbqR
      tlLHgMXaM/NI2QyWjVoqb+CY98/Fie2xjWUTDiKMVf1i94vIXDubaVsiYueITnLtCfQuWdPv
      s82qUUiELPLKTDfwaLIviLPMsVRC/3g99QyJyFDZe23xkwuGCFjmzPLxRpZYN171fU0H5mNA
      HIjUUNljAaOIXY+ALhGriwdCxMAgABTlNAuVjUUKno890wgAgGNgYMcw186Mwsyyr6nk0UIn
      n+/khLBhKEQAQqxFuh7bniIGSETNxA5VTqJdFlBEgASF8wF7GmkndaFHmnC+nS/GlpB6lYFA
      lgSCwuYqwjxU0gp6/hoRiTOnCMeqPgsYrWyaCcBQxbOOw1e5DELPFrV6Df9CgAiasJlz6kSR
      nmpmhFD2Kc5loesWul1f4YahEODyjPEiA8p65VUBQCRz4vfUV+lmHBp0DJ4mZp5qpvXYKoRG
      YkOjujl7CnMHjmWqkY5V/cxKYrmQaXrVykRSK+3EVkNTPKQR29wJFdI/niALRGxl3J5PirNS
      kSocdtAzqQkAikDh9h2teINlr5uk5TBAhE5qjzeydYOBJoxzRkDLXCxq6H0rAhMyx5al7F+G
      gD7HgniqZ7rsK91xLIBITtgJeBq7mQyVzFDF04T2MuUNnOQLK/5YKXycbY8QAgtMNbJKQOUT
      5Zuw7CsRIVWYJfJG4pRSIpI7duxCTSVfDZQ8x3yknu6d7dZC3c1YpDieeqo4Is538rKvi7u2
      E4enukuXVbxiumCFhoQn3ESFHVCkoB6AEz6h6VbuRDRhUVCxnVhFCgEXOvlQ2bzq2hOCUaTp
      UvR8yZ3kTgJDrSSvBqYYmIh0MzfTylLLLEREAEJIqQMR8TQMVzx9puJgF40eAbGIdWBZHEvJ
      VwDgHIs5V8h0khenkqalBXMsinrSa+54vp0jLi8nCWKcu5KvjEYjat1AMFVP67ErKGDZKw4C
      iNjN3EI3K/taEXZzxnN1ZKX0VZizsShavezYU4SFb0REHDsijT2vEChCZxnBNlMVeFwJehmP
      ryoTwp6P4uIfYVkOzseOoRqoYgUcCwLMd7LZtgVEPOH/QoSen6wIgLmQaJkLR4+AGt28v2Lm
      21kjcdVAKQSQPHcOAKrRqbYjAEDEkq9LPhT2FRZQiLS0TgCQ5M5J751qJ3zdiJnrkYivKPRU
      O3O1UHcyzlkEhHoOOAHEqWauKa/4yrIoOkON0rMBkQCFmY1Gy4SA3OuVuKVCdENlc7TujjWS
      0KhuZiuBHi5rT6FWxHwpjOFVwbJlQgQci1E4384SKyDiaxMYmm6m7dQhQmKF8ESQDPR2poAA
      i5R9tdi1lnBsOu0AACAASURBVKUSXLZY+N6NLMv++ZgBiaiVCYggkBOuhqbZjftK4Rl3ZKFt
      dTL2NSkEEVimNKMoNJjYZY26sNxAZenUF4CSrzqpGip7fmKnmhkphYA9MsIi6EIWY4e4is0q
      IiAcaCTETsZEIiBx5jgy8+1MBI0FX8t8J7cMirASqNCIIlwuC5w50QQXEk/yrYGIzLayxdhi
      IX2DVAPdzZyIDJZMLTIzrXSha5e0l5X/X0bBhlUzLcJsXOY4VP4FVeg5H3qzZhQJFsYRIiRE
      EsBmigJknWT2bK/BRkKs+MpTKAC54zjvve8gMDRS8QmZ2a007s11st4OR4w8tX4o9AxVQ6OW
      HDrY41eIiESklVryCF7YigqonnpfsHZExGbq9s12u5kj0pFHRSlgQvQUNbppJ05WSqCexlc7
      xPHCISLz7Wy2Y1nICjIQA9YTTh0MlcxY1QeAxLLjwkxKZ/MGFpNaMPjYylQz72RnDUBdFXoE
      lFouXNArnkcCMNPMQOlmN7XOwVIk64pu9WQXy0IImtA7IRli5KurRkoTNV+hsLAIawLHYlkA
      eoF9RQyHUVj2FTP39tjJY79A0lkmU8sCIIVpuwgZK7o51ud3M8sCndTGGWsCX3FgsBKFSZYV
      9VagcCefbIQ8m3VblkyUF9I9ALDFYX/inucfUT22U62clpYfEQkVAiqE4YpX7CzVEzQBzmX2
      LAIHinLiUPXV5TrFVgqnpw1IJHUSZ6yUSbIcoIgxO8NdFKIIKEKFJ04xQlSEtVBvGAwHS8pT
      IAKDJeOpQrsWWYrsAoDhilf2aPl1LRcxEgFx7JhdoKSTsSYs+ao4/1nEMrfjtOTrqWY63coQ
      ITBICKXAb3S6WqmZRuuMz3UC3cyt/KHooXWuEyfzzVY3yYpv3PmEJ1n6Hwt0LyD9vpu5hXZW
      TAfLSe8h0VRoBpI7aSZOE4ic64YiUMytQin7JCCd9LJyIEA8efQiIMU7KTqpa8TWN6Y4X06X
      4RELLbtwUUFq2fJKLoWeprFqUJDOQGSs6+1axwICqeXCbjTW55c8koIPCZ8yZedFwT6HysZX
      Nk7z+U4+VvVpOfBT0DNaE2qUNf3BlpFoqGRSa+cbrYFKqRT4WlGcnuEFOcLiazrBk0Tqne5s
      o9lJUq1Uf6XcipOZemNqsZFm53mxsiZMrYBIN3NFzNEymMW65fiiHnxNtciMVr1QA55MH46h
      COM/3kgA0ckZeKHA0j4teCWzT4AA7ZTbmVwuVaFHQEsTJLDiH0QUACcigMcamTvnghbnn4Bk
      VuqxPZ2fhUY5lnzJ9SEABQf2NWmFIOBrmqj5COKY3WpeXLcizFcU4fhAvxPsC7WvabhsEGQg
      pIFQKoHXF2lfcckjo6gUeOUgiHzPLOU2ddPs9BfmaYVqqXxs0e00y2vlUl8pCjyjiEb7q/3l
      0mitap072/v2RMS5In2FciciEK6oGy8iLzWfemD695+Y+0LqTgR6aUUDJTNU9saq3kkORyxq
      HfFcO2unTEiE6jQWAMzM7EBYmJ1zAJCxWEEitdo0hHNg+SAsCODETXEpOlIEix2TWhN555FI
      CDEwpGll8HnvCs9QLTJFmIdlVoS5E0WoCAAEETLH2ZJ9VBGdN7DwZAgLA0iS86GFWJZMnYoQ
      OIsTN1gpFczIOu4mWSUKEFFA2klqHVt2ABh4eqHVHqxWli1LxSG70Gpn1paCwFOKuYhXL7xy
      Rc/RMwYAosBvdLqeMZ7RSw0ks9Y3Js6yNLMAUolCJ1gJesZu6Zk6eSE7bCWdy/ZNJ/vXlq5Z
      HjciMkvuRCvMXG8qi+41EzvftdgzlIAqFE6UE0EdAggiiCwMS5oJrW5Wz48TktTK+yIg9DIQ
      sPA7MnNq2Shcyc7PCEVASLllo4ucKTGKClv7cMXDJdemAGrC3HEzdoowtdyM7WifrwiZwTGr
      s4e0noIl9zwAUjNxAlDxaaaVZZYrgR4pm2bXEpEALLY7LJzkWVxPK1HoHFejsBwGS/56AICF
      VtsoVYlCRLTOTS82Rmp9RqtWnBSqRa1UWp4rFljW9xVR4HmOudHuRr4nAHGasqBWmXNcLYWE
      2ElSRExSLgW+Y+4kqe+puj2+mB8pbnI8fnk83KJXcIg0d3Hmyr6a61jq0Qci4HQrI1LLxtKe
      vWcFEFGAEFGhXvoGLnvUQM8bf2B69vS8MFmKVRABx45Ahko6t1lf5Bd+eF0Y+AQAxLEU/nMB
      ya3LrVOKQs8kVojUyqgaZimcnZY5yRkApppZZrk/MhM1P83dgfnEwfnjU1f0c8ky0EsxYwTp
      j/RywH8nSZvdeKivwizTiw0i1IqSLBeBsf4+y84oHXiGl+xYc81Wf7mkleokKSEE3io88yyS
      Wz7c3RVgdaK8tpjAIjZhmSPnzsVp5mntG/PMwpen0z0CJ0Tashp63cAPajSe8hRiM7GtxDqG
      ZtqL+S8cyYXj+RwdW16+MxLNYOiP9dcucFDnwLl0uRWdkyLWopHw2v6Sb9Ryi+Jf55hOY425
      c0cXuolD6zJmHiz7uOzsAhCRhWa7EgUMlDtGgNS6Y/U08ijwqJuvxlPdMxMttycQBgCten0y
      WqV5fmhmHgAqYeCYfW3KQdDsxmluU5vHaXticEArZVkyawvjEwD4Rjc6XaW0ABZpBYUohCsn
      R3qKXsEMMpfVs4W9nUcYnNC7JktbcCmfqddZAE9rTxchcLCpfPuof9WO1v1WejJ42809t/gl
      BNo29H5EPd/JNWE7s0U62xL7RjyfserVdwm7Hc/vuVBjwLKvyjNncFYv++eWqB4BwCi1drCC
      CPMd2+jG7dQNV4PIUyKcWZdkuWdUN0n7yqW1/UE3c3PtvJtxPQZAJFxFsMHKUM6lswznOtYo
      Gix7ABCnGYtEvlcOg6PzdUOYW8ciI7Vq5Hu5dYeThcML8WhfkFmJc56oRcUQFJEDvX8uLvt6
      ouZned5JbeB5K1+dJCDdzPmanICAO9Z9eUfrgeKn+ezIeLj5jJy0kK5yzqfivYfjb7qTi563
      7Oz66DZDeqGTt1NX8no2eo0iAA5QkXo1zqPVIk3SCyKgHsvg4k0550JxlhD0DMpagXWc5DzR
      X9o32+p3XidxSZoFnkGEwARTjdhkrhnbIka2MD/jqdG9FwoRYWFDsBSW1FOdSoFf78R95YpR
      aLyyr6wh1FrV2x0EsOzCoLQQ81w7L9ycuWVFoIhYYLHrfE1jfb6IJFnuG5NkCYGHhGapIkVg
      qOjx4fYru1oPLvfnWLxjMTu6uXzH2tJVpxERPr/44Hx2MObG6QPZXHrDpvLWZmKnWxkCDJZM
      O7Wt1GGPel4jwbPYrh+7UA5UeGH06QfVySheBHfShQBGoaexFlCaZQqxVo4UoRN5ZaabMyaN
      rAhbWX7j6EUPSEA8krGK9j3DAout1lQWWyZGnbA/28omav5wJZhuJgmnIInRChAVUifLRaCT
      OQQUgHbarQVgSHxjqqGud20rznyNiNhNkkoUMEsSZ1HgKaJGp5tZq0g5ZqeYV0gzDvK2m93R
      /LucY1+VPAoH/HEQaeWL9XxmOt2TS3L6KCpqxIexZuzmOpYF+iLtaSqJbiSOBV47bhYAuutd
      7zmXEL0ShZnFkGwZjpbXuLCEevpc8SWFuI0I9U5aCT1PEwBm1tVjO9/OXe80LyJ1LlXDFGGN
      XNJ5XykqBb6ItFM71Ugzh4qg4qtO5iZqvghMNRIPU+olQaM2gVGqGmoEWOzmqZVQc27TNLO1
      clRPKLN2uGyczSpR2EnSShQoomY3bseJYx6t9YHiY92XX+k+nnHn7B3ESPUDSNctnvKDT+Wc
      E03+ltIb+/Xm4w0G6Uk5Fa+oJsCF4+dy8Z5ThOjH/+5voVTbvnPqDa/fMtWCbZsHvvTVp8ZG
      KnNdevfr1z/8/OzwUOW2rbc8/ZXPR1tu2/H4wzfcfP3eI40PvOuNq5GBRBzLSsUVAc4bfFWE
      vQLAYCWEpbP/eDNrJY6Wy3Nc9KF1EkQEIl8R2EJEZZGpRiq9lRBFkDk5OB+P9/mepjzHif7K
      sXo2UNI9by4iAIxWe/thejEXKBwUoknVSgFhAAC+0e04iXwfAa1jx3y0+8q+9JFzkk6vh123
      cPq3VT2+Kbh73r4y7l9X82sHFhIAJMIixMfXyrJ08nNVgLgUCLvdL+0eHRs/Xm8PjQz3j4wv
      dI+1Fxc9H44s2uFa6AXB9MEDSo3Mt/Px8fG8XL3qhlsGS2r4zmsteqvyqKFlWOxkg8sB50tU
      dY4YpdODs1pJ3k5s4RS8jDNSHLKphZLphbjFOecOGBgBHUi9KwphqOTFmWun7GlfK0UEmevF
      wZ3wcwJkuRWB4WpVKaoneeZkvtUhEK2oEoXlMFhodeIs840WAM8bheQiXQMIOGQ2M0hFbk5S
      3XRdQ5S7IsmSPYXVUB9eTPDkFLDLCCR13XU3pHF7jMzk8enJ4ZFauU+B21YaHqiV2xn4tfIP
      /tD/1knS0aqXXX0TK2+idjWJ9fwgTrMLPcIKMLMi2TwUakUihblv2Yp1tktk5bEtInPtbKqR
      ISKpwk9+uSIspfDna4Kxqt+I89xKNTRFgGWaZwgw02YBsCwsICJlj7oZE2FfqAkhNKoZZ6Hm
      wDNJlimlstyO1KoskFpnCLWi3Ln5ZivwPAIoDNBTi3XfeG21b2/nMQcXk3FOoCb820t8Y5bT
      puEwzvhYI/U1hYbG+3wA2DsbS8/bdNmI6FthBzodiGhZZlrZUNkUCYRwPnvDKdST5lzv5oiA
      vfDFy7itEBEL90XoKU1gnauEvaSfPBejtQDnDMUBwcztjH2FVnCha0Uk8thaO1DyC5ty6HvH
      5hdFRBFFS6zaKCUCRqko8AmxHSeBMSWfQjsk+rqX7QsXWHdnJQh1GTbnzhBxK3HtxPZHeqjs
      IUAjto3Yup6F87UjPp/AqgmIgBZj10xs5g4opC3DW4z2rMsVKXXOF9WKSL2bT7d6/q7CN3Mp
      XT8jQo1r+gNN6BCyPMeoF3ZHRCLSFwCDrneLWggUGVWP8171OIBu5sglra4owoFqhRAj32sn
      aTU66c1LpcAvBT4AZNbW253hWtVZG3dnIvA1eDmkq+2zlXRRnq/im5zgbDsPNQ1EZraVdTJn
      XRET8RrR28+Ai4kqIiQnfGjxuHXdL+/+m9CU5rszGweu/kdbP6iW1PFli23uGACNQhaZaWVO
      eru/52m75HlZGSHAIpVAa4I4y5Ms6y/33iiHiKXAn6k3Biplo1Q1UAudfKBkIk+FmgF17jgw
      KrU2SQwRVqIwSTOtVX+5NNdslYNgZU8dc5zlIrLYag9UK742sc1EHAn10UBD6rmsuvBtyx0f
      1tLJABET66ZbWTcr/OawSqfytxoXQ0ACEhq9efD1L88+NFZZ+/f77gWAI/X9lm2cd//pHf/C
      aLPYzZuxLfuqmdjcSXGce5ryjHsBgpdpUgrHkCJkAUMSGax3up7W/eXSynlHRN8YRQSIJV9H
      ngIABCCEcthLSwqZmuB8rX1jwEAnSdMsTywcb6QTNX/5BFFEzW6HUI3217RSjl2ncwBAFNJV
      3m0mGnu5/Y2p9CUBJiAFeohG67IYS+sco3CSCUix+1iwm8u5/VyvHayagIpRJdYhmJLfT0R3
      bviexw48ICCPHfg7ANiwd8stk2+b71giijtWRIionXKcc8lX3dQJw2l5XhePQpVjlpJHFQ+6
      WeKw2x+Mnn7/lZ/P+HQRcGBCv+f3LYeBiJTC4Fg9nW5m/ZEGBE9RKfDbcTI6WEHEOG632q8w
      91iOzRegY7eYmzcEW7Nk2vMH4+5+n0pbwnXPtu/puPmzDWLCuyPJCv8xEBG8Ouf7q4GL4UC9
      sSFOVLceWPjGHeu+Z6p1dN/8zuLXe3b+uabKeN/Wwv9atCXC2XZuFBhNLOKK4PnLMUeIUORw
      jFX9Z2Ye2Vt/oZssvk+9ZeK6O8n3Vj6hCGz1lktOnkZDipBZupmLlpJTEVEBDpfNkXrSzayn
      2NMes3Ng5jt5JdBaBwAnaa/WNq1tAtDQzuPOO8DrBsL+SdE65zMYnQvU9GSNrmrhchjfdwbp
      FLhIFbonEyBtGNjWThvvvf6nJvs2Fj/lLjMUYS+PRwSEhQnBKBAB68Q5AWFYCgS5RBSR7YMl
      A2QPNvfMxEfztBP82R8nn/qkPXpsWUASgYrS+SMPZy+86J5+2jVasrReIsACzOAYAo1TjaKK
      9fJQwSgajLAWSF9gEGGuy62cpprZ8Xraah9iPqPqzs5gdd9M4MphMKDJq5lxEooyb6RdWh63
      h6VR77oxemeg1cVFgn/bcSmh+QgAgrrkbxSAN6x/z+ee/3+LHzrZwhAIAOS2uWfmG5uHbi15
      w7mDQNNo1etmrp04WFGJ4ZL2nAAhTMV7djdmp7oHAcAptIEvL+9M/9t/1D/8T7zX3QGEdv/+
      /C8/DQf35kReuQpRyb3p7bTtzUrzzOLu3nhQsXCoJ7qpVwlOcAKlqK8UxWmqlZJe2UMChE7O
      PlWNts41RU7KfCKKuptel0yqko9KUaj8TeG2sXZpw/5Mtdq7t96wGLUiXBPwutypTGC2nb82
      tfTz4pJyO7DIJkEEkP5ofCAaWejOAMAj+++ZrF2nKXhp5pHHDtx/w9iduQBYSXPr2CrSayR/
      bs99dmTNZO12vuDEnbOBBQ60Xn6p/lTvI0E3xAoAtJv2M/9djh6BUsk98AXotACgqHitWw24
      //P89DfiH3p7Xjtp6xtdnW5GnqZAKwGx7OpxA4V8HRCpmVYMvbQfJKDFNAz12hLsFjhBQERR
      iusaosCDqqfXCByrH/2zx//bD4/elY6MmL5RE23xaLvON6S9MCoODLKok7M/vjNwqclBvW0q
      UPLGf/y2j+yde/Lpww/OdY7/yVO/ioDlUvnmyW1aVdxS1kknbRodEarBdW9wOrxo2kEAX1O6
      lP9RwsgTnaEFAAZohzRatMsz93dfAARYEe5ORD2X+fy0q09BbXTlnRWmnqLpZjYX785csm/x
      5V1zz98wfOv3X/ujB+eTzC2Fr/XGTqmTkg7A9cw/SlU7sraT98rrtlKXWmdZXpnf9ZdpyyPv
      pzf8eGglo5tyxqJ0KQLsaX1tMrqRYOQ7RXZexuXJLivISKvKNSNvu2bkzTOtVzwd7Jt/7lCy
      0y+7g/mXPOkb0duAPIGaFWgQgD+qAe0ZEgcvKA1eAIwiX1M9znyEt04FtyQ3PtvaEczVyXFf
      ywEABqEAAjNkJ4x7FJXR9qQWOzJoh/pOGUpJjwWEM2n+1f1fqifzCtVkZcPG2m0H5hNEwpNt
      eoUCKFQD1wAApQdbPJG4gkcV+VxyrJ6y1KpB/87F3YEJXui+tO2QtNfdZBERUICJIOck0rU0
      f9XrOlx2XLYk+6VhE4A/UrlOQG5fu/7q7PWLycH9sy8sNuMfvPaNRRYDABSRIY6hKOOzxJ6w
      9/OFCUWdzBY2ZAEBlAFn3nGsluw+DDYHIq82qAQsSJ7HQdjv2DEAIfG69XJoPzoHAPENG135
      pAxxZSHY/QI50SNr1vdt3tJ/02Tlmj5/TWELzVzRrZNIHBFiVwlRi1gBkzg8oWCKDJf8uU6K
      iHdseNfeueduvW6jC6D5ytFKfnVqCgM3Msum6o2ZzARmOM58uDyxCd8iXOY3Fi5pvwCAIlD2
      1pbMmuFw4+Pd+4piCQDgpLNv4Wnr4m7WuXbkDWWvlrlufzjQTHra3QVGdyxH0ueCMzfcMPDA
      56tpGqzdNNU4rrTRXtBeW2v36faAueErhz0xACAAuyqdkYpXrccCYPYfw9u2CBWEqyJvMpw+
      rLIMAOqzO9+45e2IfaEh39DRxSSz7KTXu5NVbYwdRmZI7JSDYAV1IRRBPUQosnXt3beve3/q
      fbNy9FgfDx/URb0iEZHIk8hsmk5eyuRwQFvc0lsLviNY0avyysuluOSCRUugR7cM3LJ/8YlK
      MICAe+dffGHqqcFw+EjjwNNHHwlU4MS9Yd07rh95m6A58baOC0MRQ1hPyuWr74apeznLH7pr
      9LifTJr+tdduTMVOPnFkWW3uhmrHGhzbz0LkROiVQ9WFUG+6hoW1ClQGpnOoaDluQ15swngF
      Q7+RWCcAS/m3p3QPEUQwkVqo0yPJnE8BgA+90nqwGOcISGifPfTgres+EOW3jarxV7aMJtAr
      ce0pUGQXu6RV2LJzgU6ZPYCiBLasaiouBXG3oz0/TbNSFII4y5ClWeCbzErga8eilQKRJIm1
      58fduFQpAzubW/XRj34UAOqdbn7Z7BC9jNrlcB9E6gsmBqMRhaaZLDx04F4Bzl0GgE5c5lLL
      9ljjQL17eOPg9YUtf1WhQkXLuFTBTmfvX3529x3D9QoGtepwuYqox49QNN0AdsdG/KevC/YN
      5Fftz7xmLFmKzqk9r5hrtwaDo0ZpyS0uzqPNoPBydBpQX3S14eNd56CoXUInWOSK5wNA7iiT
      6p6FZ0Mdeqq63HlDoBAE0LpWM56O/PGFoJIvbTBhTrIjiGXfeIDx7sUnR8LNzAaKV8Wccy8p
      RKPIXeyqRUaXw+Xj2+15/rntO185vP+V6sS6Q09/edeCPrr7qe0v7Ts21xz22g88/OLs/Nz4
      +NizD31p575jjzyx89at17/02N/ta+CrQUAAAEsu7uXZRgaNGGqCF6YfAwAnDhE1ahZWpD3l
      HWvsP9LZ7RveNLAxse7sr9s5ExAYqDWx3l+70czXR6+9e7K0ZSDYGPFNnfFbTLWf2H7xdbi/
      rxtmuPW5Ba080z8IWnvlql5cgOqgeL4Q7EoOeHGsUVmtcXBS1m9pKb0Yu3P7w32tnIATGY7W
      e6pvueeFL7kSZqiPDEZX/9njvzpSGeuL1kVGOwEQ6ST7v7zrUx7pNf1Xx1mwvnJdoCtJbqEX
      vrps5l1ONlkRGwNw0dQDKwhI2O3etXN2dn7dxvXzjWTz+okSdWdSL47TUEmcJv9/e28aJNl1
      nYmdc5e35l5r1977DjQaG4mFILhAFMnhIo5mxDElRdAjh8MR4xg5whOO0Q/PL0XYCkfYMT88
      CseE5JG12tpHC8UNJEGCAEgQQANoNND7Unvlnm+7y/GPzKqu6q6urqqu7gY0+H5lvnw3373v
      nXfvuWf5zoHdwy/9+E3u2srwpOdAdbG9K2eoPDHo6jovbS2gbJPoZkeQtV26XezlgREQXaj/
      +Ftn/7R7GkMuUUZZ23dDZbI0bVcKQ3sqBwtOeax4NOeO376AwU3XJSIGYFc0kV6OrZUM6+bs
      j2f/yhP+o/Wh43Y8uHIBiJCx7sPR2lDU/E/7G3OhKWDw1N4vHBw40kr1tUYKwDdWbH3BY21W
      m5K7fe72J+9yx51r6+mfnTudpPqTh7+eGWNt8sNz/9/rV7/5zz/2CwPiE1HqWYCS5wCQsWYl
      h3BZm+xRzXZFakciy9YElJGZnZkT0kkzVSyXfIlRoprNVqlUyAyUcl67HaWZ7usrN2pLXphv
      NtuFQk4yUMTuig7UDRuySA43hgQtr2rV+L2XrnzL4U5mMgBwuadM5kgv1QkBuW6uk3Zem34F
      AZ+YsA8MD1uQXYfHsgjd5q6tRA2vddAQZ9wVrN2KFhaio0MHDj/xT8X3nl+JCEBEsobVF5PB
      wY6sR5TGpAI330j0TCOFTcTixLqXk3RzfwChnZmKGBKsdmCqL6S9mdHa2iX17f7+5EsTn5WC
      B67NeaklMsYAkCMdZCLV1hJqY1fLIpDp3tsdVq+RD4+MrD6Ql14+nweAbkBMvlDoUkqXKv0A
      4A243dP4XVOiicgCEKIViKobQQbw9sKPI92xKtEqcd2Ctiqz1y00hq4nxLwx98ql+tn+cOSR
      0eckDy0xWn7xtr7FRUMUKX128c1Ux7GK+PyiXJhdfYaK47bWybFHh998uzqGVsBSFLXjFLeS
      37j+tQEJoBHb4eKBjp5VbC4vRqLE7w+nHM8AQMBHrHVbdKYk9wrwOUNLCO6s5rPDzvFqumB1
      IdWSCEJXAIFgrJWpnjP6fbDb33kBIuqyGVlATI1EoGVVmgQxFTerjauWTOgVS8XJ9f8BqJU2
      WmnjavPie0un8k6hLxj+6MQXOYYAt0ttXB9oiB4d+9yJ4YePFvaKU68xvcYDmsZR+8yb/L23
      nkyT0f2V8597ymdjN4Qhdwnz1NZ4Z3owREttXpDHq+aVtj3viyOJ2lsRfQZbHutXRiPDRKdJ
      4hcDQ6AFDEjWnM9ea5rLDJ0OQsHZg7AvUqYvZBXH1tp8hRtkG/3ZQey4APWoMm4OxESg87Ov
      VRtXLBlXhmF+JLW3j/7sZK1O1pptX7vcOPvR8eemyh/dnnkEAQUvjKVU+M9/yqwlvqYyoTO4
      S7gutRoIMPXu0u6PH5iDZQYWWLUb2JbO2p0qEm0R+/vlU8AaqWkShBwGjBpsGRLcloJDqaZY
      26SJiNJhdlfxcCtNGCvX7amqmp7Pzo77C7tyx9t2mmUDpZCakdDLnFL3UYx2knO6CwRkPb7O
      NaMyxL7w4H/vCg8AXDdvYWuvcittXG2e6/F/bKNXiAxZPSiwXIF19QljyfYWTamVOzq5Yv6D
      hbnrsfHLhTaUsdubfpY7ALHS9Y6nswHCNneupex0IWiVAusJE2eWgzPi45gvBsOgHIrpRlSL
      jMBywAY5ilH3REdXI524dkprtxExWKYzo+s0wPcBOy5AuJ6lpHuU5b3xhyc+BQCdaAlU4nLX
      FZ4v1y9OeAN8ERwdenIlAmR70Mh0WEAAbgwju0IsRO1W2Q9zB45CvggAeOFdYQ0uK3N0M/Pn
      dtC9L6yd8ige7nTGsuhQoxN2UiJgngTf4dq0FxM92+rMNpJYGWVsM/IxO7nf/VLePjbMnu3Y
      q67brgQeANe9crsrqWz3R4Z2fgbaCIiP7fmFnFs0Vi3WLyVxFRkwxiS/sSzQDeAont3zC2Vv
      6gYatS2DyKwqQcSspU7bdFqEgEDccdjwGLk+nT8jVNYfupyhb1QhjXfo8fRermUiZUgMxJrV
      Y5xrxL5TLgAAIABJREFU8rmWWsjCyBICDRXkZMUbyDkAlGpbcMpEqLQr1QNLLTdS2hV8xUqE
      gNaaFbrSVWMla62xxnSZlu+OhN07AeqqAr7Tf3L8WQAAIK1TAtKkOOe+s9E8NFqYnCidwDvL
      biGgUtrxL5+/fsRojDs8arM0USqLFmapWYckoizhOptvx2TN4CvfLb318g7ee1yZo6G7j0JE
      JIBEGcFgICdLgayETt4T3ZRIAAgd3h9KAgJAS9hKdaK7HJurXGY9h3Q3QrNL+NcL2ELqkiXu
      3BhW4Z7OQN3hPLX/Vz99+Jdzbqk/37M9EFgC8sQtqdM5E3TnLmqiXGPRMiJEWm3SRaaPPdx+
      6HFFZJs1YIwdPpG5QS5qTf7tHzg/+qYN83fp7vf0c0AACB02VvYG8043GxURA4cP5hyHg+Cs
      Lyd9yQCuZ8gjoLXW9swlKFl3ye2yWZjQsaGDAMgYA8Z7MQt3AXfFDnRrdM183qO7f+ng0Ecv
      NX726vzLyz8gF1xYqdcLMd6Vn7rO2nkHV6+OhNN9fWgs1+A39IJpJk75Qf64PHTc46inr2Y/
      /Lb52r+qHnk4Y7wyc4mfepmEaI3ugR5d8M5sd1bWGiKLwIiIAY0UPUesmWI5w76cLAWim7of
      OjxWmgEtmz+hW13PIAJAZrtuXUtErkAhOp24AMsx+sRWAlF2eL92jwXoethQ3p94ZmDk9YVX
      DWlfhF878S/baet3f/of1ukik5Olo3ee6YKICfVRWExtAwBqeX6mNU9AWXj1cTzGgdlWgz7/
      1aVjj/WKnLseINLQWJQrdpcFxtiyBe9O0Q2BspY8BwqeyLniBulZ6fNK1Y7+nMMQ5tuaQY8P
      B7vRlUScgabrnkdtKU4L5nps2l3c5t9rAVoBAhS9/KOjT/nSzzulscI4gX1i4tkfX/meXWWS
      LrrlgwMnit7YnW2/AAAQURkWyr0ZvAoALd3qzupXOm8Oe3uHa75+7SX0wh7ZjKXg1MtAlO4/
      pntZ991iPztT6K8bRjeUd/pzziY5ozjDvtBJlG2ltlt8HBEBmAXLGZDFVTMkartZqSGr682o
      XCrccLzVqDZa8eCuXQ5nVmdJqph0vbV0LlGndd8EiDFEsM9OPVcMA2upFccM8QtHvpyZ5CfX
      fgQABbf89NTnxorHgEQvef2OgYhkw26oV9KLYsZ9+cemCgdstpRwAfliN6iUAPXAsHDcztTB
      rteMsZ3LvOk6OAiKgdgS4xhjMFRwo6XYLq/oXddYZm+sM7x5LFx86/e/9dYvfvqRdpTGCpaq
      Cw899lRfzvnpD14oj1bOXV2kzgLoTiYqQ8P9zVrt2ImHyzn3epe2cckdAUMw1vqOg4jdvBlt
      rSV7Ytdj3fJyz+z+0mjhIQAXkO9gpqa1DkcHAEaDg/vzjz858M8eqDzFEBPhwFf/28WnP9fb
      HiPMn3hq/uv/pjE4DoDL1YN2Zi3okdogbl0g0RFsV8HpEtn0Di3XYdleZ15748x4Eaqx/ptv
      vVhbnEYdz80tZJYA6J0z54VpX716pR5pyeiN136Wy3vnri42qtVqvdqtDXK/ZiByBcuU9sIe
      8QUiBq6z2Gp8/+K3CCxHHjql5bo5O7mAZ4YFcjKx1wb8AyV3GBGspU6SOrlg8fAJe53PGTLh
      psX+tZVxd1SVwG4tYr7VR+9LzlbXAlhLjrtVHH/8mf5yWI/0V3/xC6p+7Zsvv73nEBDBsUc/
      8tFSODtXrZTLlf6+drN94uSJudm5fftHGgvzivWk/67EA90OZC2VffSFLeWClaeitPnbd/7z
      d8//HQI+MvrMyZHPA+54/VsiIsFgrCRd0Vs+qq12tdWuFEozTX1DvfC7Cks25+B42bv5ihtv
      lhJlzi/GyPj1srHU427ffLTCjhBMWWvv2wy0zGx/fbSZVh/f8ymOfLp19bHxzyq701EvAN3L
      ZdrGGflO79+LYSCFM9NUjPF7GR+BgO3UGEsr+yxLlCqbKGMJci7vspfeIF5E0EkNrce4bKxZ
      qTF6T0YAjN2dgLKN0XXbhK40Vl9PgyIigpznf2LfcxeWlpThNzvUdgTdf+1WUdSWiKCT6rmW
      sr2C9PfUrd0NfLZE2pC1NN/K2ssFHUVbTfV5BODJNa+ZtnaxrW54t3oWZwBrDOJKCYR7MZb7
      MQMRCARXoDZrNg6B6yy0VSc1iIU79FpsDIa42FatxKSGls2D7L7wL1uCK9UYEKNeAcpuyVEg
      Ak32ai3JudwpuKu71kmNpnVCErG3TzR5lzcSwxmH1ZV77hruxwxElPO5UlngXd8NdqddbShS
      lt9lRQQRCXhqaKVO2v0Jp0FAYJHuBjvzlb4BQPfZx9rGSnmSF3yB2Cvz2Er0ijfjxv9DIGLa
      UMFl7cwAsdvW07hz3I8ZaNk6ypY5Fa2lVqpTZZuJudvS07v2Tm/uttMJ2EjrRUDOOABNN7NE
      WyISDGuxzjTdypjZlTAp2K6iO9fM6vG92BXdawHqBq8IhpnSPOxVic+MvVZLabms8IdYkapu
      2OpiRyNZhmgJNpxUiCERQaxsLdI7ZTTfGPdnCeN4fdlIlFmRnvse4ft+Q1eSGDCGsGfAn29m
      jdTefJO6FOmW7EjByQxN1xNcLpkId7Yps8vlMm+F+/PGZ8YuB2JSt5Dqrdb19zOWQwHvPhA0
      wVI766R6/VLEREBmOO+4klU7SllEQEuWyCDcUbBiktySma+L+zADIUDoiDhNAUAZWmgrAPYB
      4qNYQc92d/eBAAxxKTJkaZ3ph8iSHS06BV+eX4hMdzpCYsgsGWMt47craLLBpRGllBuccE8F
      qDtUX7LAYZniCBBnJs4M3pPV+m7gzteIzQERkQFZts5s0k35NRYW21mqabnWLAEAQ3a3Zfze
      CVAvt5lIG0q1kbxH2ewKlpr7n9+0VRARWUtEnPN7s6HrOt7ppmwWRLQEs80UkDG2kq6EAEC9
      IJi72L37oAO5gkVJFrguES200tR0qUx60XT3K7tgGyCAciCI7DJB1r3AurVpEBFZt6L6Wt/v
      3dcs74MOlBobSMi0toDVSCOybi3ZLl/gzhXvuetAxHrcLeZO7J4kid7qEuwuhC1sEvdWgIgA
      wFrwHFebrNMlEGBERKFE3+G12K6+C9edzAAAO8NKsVNABLbNPOsd78n97MS9VaIBAEAZW491
      JXAAjcNVZgkRO4oibbrclDdIibEGiBhDIrw3xrHN4QOntt0V3I/1ArEZ68WOAoC+kLkCrLXY
      Cx670cnMsFekOJBMMLhHdpcPsWnc0xmIIYPlwpKt1KbKGmsNMc7YrYMPe7GkHWWJiH9gFKT/
      MkB07wRoJWEAABAJiDJru/7w24audnewgB+83f4/NhCxC8/z1/8fEh5wB5i4XxGJiADdiMQu
      FdVtF9N7FiH1IW4JIlx6l//gf9Wf+HcgfTAZmOz+5YVdn0vYcpTih/LxPgYRdObF3/xr/dxv
      0q6HVg5fF6DZi2dzxWKjYyqVXBKrXD5UnUYjoUrBm7k2U+7rs2S1IsdzOFrkjtImDAMiC2Q6
      7ZhLB03GpJumqSu5AZ7LeWmiyVpk3XhLRDLIsTpfD0JXayUcjyFao6UjAYXjOlkcWWQqiU0W
      VRc7I/umBKJRKTFpdUaWwmI5ixqAIlNKMNDG+vlip7bEhEBkjiMMoU4SLwwbCwt+qUBKpZpc
      RxYqlbsRYv1fELK2/NtfN4//dzR8YvXhZQGyWdTuqCxzC6WLZ6/09eVbpHXU8vL9blgolKKk
      02y3OqX+vkatreIlzy+kSplKmQxJTkmiXWvTdrXTNsX+fCNlUri5nDd3+bwVniBliUkBcUZD
      YyOOZPW5Oev6OV9bpTqJ8jxHJWmuXIo7MVkV5ApxRuWBvrix1G60pR+YLAtybqsREWCapow0
      l7yVkJTUrmmGkCUxkBNFzaQT5fLlpXPnCn39nWZDJTooBNWFmpcreu59yyBYrk12r2OutwEi
      UkpzBpm23krIqNXiW79hJ5+2Bz9/Q/hmL63n/NUrDStM3OxEWS4fxImWzAB3gShXyGdpkrTb
      TMosScNiMeu0gHFtgKPlru8IZgg4YtRuqigF33eYReHl8rkkiqgXatm1BxIyprNUpZlwXWMo
      CPx2s844dxyZxjEgMumpNMkXi2SMNpZxTkZpi77vRa2GcANSCQqplAmCABHSJPaC0FoDwFTa
      UVon7aw0UI7bkXQYMscapY0tliv8Pm3hVpyA76uAp1ul9ZBRr7z6BtSvNvJ7PvX4sTiOfd9n
      M6+xM3+tn/kNuMlP0BOghVo92zBuaJPYhiKzbG4GIuAMLd1pOef3oTK1HLv/PpqBQtct5XPr
      /vTOO6clmPeuLj379EfSNM3lctD1Ua7rhusK0If4ECtIkiRu1rTMDZTz3Rlog5Pv2y7sQ7yv
      YK1dtsaB53met2uTDXsClCTJ3fASGGOu/fvfso3a6oO7fu1flfbu394fttttzrfgDrPWruR+
      3L0mtMUqcdsIQ9tGk40HYq0Nw3Dl66mfvpjJ8kPHD4stRi/2BMjzPAD1/W8+v//k47v6bqSK
      6WJmbpqDHBwa2Py/K6Uaf/ln2KlaZcFo5nmqtjjw5V+CWwvQ6jv11ttvHz502KTNF3782mNP
      PhU6nHO+8Yx6A4wxWxK4bTTpclluVayhyw21lSZbDe4xxtxMtryCG1QXY60AtVBr7OrfWsL8
      6iUsu3zuEuTCeOKIrZ9+60L92InHWXb5tZcvHnr4+Pzlc1fq6VMnjwJsQYAAIPfUlwcfLKvE
      17WFYKzv/L/7jY3Pf+eNn1QT/ujJBx3J0yy1RBfffu/YwwdOv33lyIFBa63dCllz9+luqcNb
      bdINre826ZEGA7x9LW1E5uiod+X1HxT2nTz7yjeXsvyTjxxYrEdZ2kLOsyg7+djjntys2G1D
      gGgZt/p15fPC9Pk33zm/5/ADw31bpltYowO5QV4nndd//P1yEcZ3Hz318g/7dvmTex+qzbzd
      jijN0mp1aWr3ni1dwBkoZQttPtiHDVDVmt2QA8QYXa3XZViZW6yO7xpARFKJRvPSj36y99CT
      QRDEcbylF5eItrEebaaJsZTpblErsASI14nJY2Wnq4oAZhraZJlS6tKVs+iO/h//54/2793F
      nP48r1+7Njd26OTUwEbx6jdgGwK0QZPVxwdG9lRyP8qUXvfMjbFagIIv/PMvCulYrZkQCHh8
      /3j3A8C40RoY41t8GABQ/fP/a/7q5a4tCGBN9eSbce3ie2+eubDvSPHR4X4AePD4A4hw4MFH
      9hqzcW7AzmL127nuAzCWtCFX9pL8VrSN7sm+yyb6nUZkxirSHDn6xpl3n/70V5r1zuc/+4nF
      elws5NFGs/P1gfy9G9Ft4TCrcTv9WS1A6LoeAPBlKm52nZMbV33eGsjYjYVmNSb2Hn5oZqaq
      exap7lPhHLaqx9yyM13JILLG6DQBMssHsZtrDd3FApbJCoTgjnuDDFkipcmVvZf7ZvUWAZzZ
      Fp+OxNCuTCut9cjY1IF9EgAGh3vd2DUKV69dSsO+SmV9jfMeY/baVT/Yzs5mtQCRMZZzbozp
      ZhJZa3EVaQWRJdqa6rcNNJuNplqH6feWIALEZckAAiBDWltriAxZaxG1kAyZIavJWrQaVMSQ
      HM/H7qxGBNcjAogY9YbMuMlilbREWGJcdE34lijJrO/cqJx2meCtJZ3ZTj39wR+ds5qIgPlv
      nDk3fe783KED+bOXq6N9hVqjWmuovr7ytaXpZx//zPtEgJ7+9OffOL+4jYZrlOjf/Y9/+Ctf
      +8Lv/dnzX/ns04lh05evTEwMW+7lPFcbDaodQW6okt/SBZzx46Vnn8zqxnaa3ujQwp/+wcbn
      lwp5o9e3kK6LeKkaNTqoIvTywKW1QARMoHQFE4gApE2WWFIZcknAKI6tZRjkWCNmpoMIZEw3
      GIlJgUISZ0wIdCQTAoCjSePpqwwMd1wSbqdtPLAdpQEQcnkrHADWW8IQGGfCYUHBKQ0H9bm4
      bzSMYj+XK5osfve9Wmlof2Ph9FKMk6NTs0vV0Pe13gHr/45gbnZuYmL3NhquEiCd5KTzje+9
      PpzHH7/6VlxfKubDaqu1WK/2u3h5Mdpdpr5jn9yqAOWf/HR5j2OdPlNfcApy8a/+343PHxja
      NXtxYfP/r0wmTM1By1TKMoVJA6xBL2TWtSgVSdtoqtQ4hT4NTGcpMQaCcwQo+MRCwC6LOyIC
      IRKBNcYYS7FFyAAAmANevwbqRBH4gZcnnXaMjcBoR2VuK2KOh+U+kS8Csi5/pjL2J1P8NdIP
      DckT4z/3wNOr+/sJ2NY2/m5DEUuWZgH2bbXhKgEi8cgnn20szfdVxmuzc4tscO/eiekrF3Bw
      dLIodh/0Ef2gGN76r9ZH9MrfXfiLS6JvUNcWGAfVjDY+v9VqTU6sX4huXQSlgRb355tN3/c5
      4zZQNk1M3PFMLsi5DJXjO353hhESMEQmQLiGOcZYo63VqckUGUuWsFtVQlvq8nxJThbIWDCW
      EA1y11azzDhhTgYDXAqrrIIU0UCrky7MtTqRLpYNd6sJ/MVbs4bwr1+/dmL8TnkI7wEun3lj
      utp69uOPbsMBuUqAZLh3IoSJXQAwOdmTxInJLTzLdRGfO22uXYZz72zy/GarvTjfOXZgapPn
      dxLttGHEK8c2tVZBnLjouP39yFAprchLdc4CWUboMgQDRkNWBROjsWhIMuEIzoICBDl0XWCc
      gBhj3bSdrv+TCLJlrVlnmclS6QcGsBWpWHJKNaVckhOE5XyrI1hnAPSvC8VV/gGnvc27do/B
      0OH47nvnBh57aKsy9L7zheVzYbSVQeRdnGUJpTpkJpfLg+QqTh1M0Hcc5BaAcQZCAGPQXTLW
      /rkxxiiVdVqms2AaKWPEEFzP5V4evSIwbgkzDY7s0V4JIThRbb7aUdjvyQFG4DHre8yRhAxs
      hZTFdvLFtIlMuJ2tLff3CxP7jw+O7gEu72wGAnPq1Oljxw6/8eaZB44f6Vk4osU5XdxV2L7F
      ArkrB/ptZsEo5vtqaX6Dk99+/eXFVHzy6S3MpUmaho50g1I7MzPK5D0R5PONTptpHbp+1ta6
      3aFMCYcJl3fL2TOOXDB0JQjOEDkQeAF4ISEYZbIka7ba2KhxmpWCAxe+BDQalAYuiZzYOJKS
      MZd0wjLGBSkQDhgPkGsiTgZMXBqcE0yb0taMrvcR3//Gn9LgA889ceIOZiBKXvj77+V88bPX
      34mqcwutbGq0vHD5naT/hNO+Wuofri4tefmiyFqLLarkbP/g6LXp2cmJ0YuXrnJp0yz3meee
      uPnquad7rgxTX/BH+87/z/92g94kSVqbW/j2C/aTTz22Saur60shNHNMJXS7JeTmG0mcyr5A
      LCx03EC6/TlEJEMGkLSlzICyYAEBmSYES8razCAAcAbWcs7yuRJi2RqddjLH6DRDYChc13Bs
      xjrvcQ/zZI1wkTizYKwlYyxz3G6pT8dKN19HIOWm75dd1u3AEGcXl7bRcJUAZem+hx944aW3
      9436jVilUataF0jQqtVHcmL64gWnf7hRW/QYxe0sAnU+5sViUK/VXd+fn73w4EMPrfvAnXKY
      TNf4QI60ymbnrN7IqHjy8aePZ6khtvmYMJNgFgmSiskUrbWpDdAVguaqdb8sMx0tLM5VTOi4
      IQskc5AHXBmjdQpKM825EI4rHA8JwCIY4pmFDLjRkGl0fdk2IDhyyZNYRanuDzzyJLkSOZIm
      q0yqrRIkEpW1Ut39h8hiPRjw0+m6P7XpJ3F/YWXuyMTI7c+7CasEyCk9+8wTZC0iWqMNoSNY
      minHddMkEaCf//4Lh4+dnBwqG0IGJKRMksT3/SSOpfMY5+urU9W//r/11cvIGFmLAGRu43B5
      4bvfqKrwFz73iU3KkAwFd4zSypKx3No8om7Zpp7sc5g2LZTkBAlvX2u1XCZdCFxy4wwpc4R1
      AMFoMDb2GDnoB76DiBkRE0wI9ANkApEhIMw3E54TBeCx0o16WyvjOYCso2wgLaGNGOOuF/jS
      ZRZTUP/QGMrq3vHx952KeSvo5TroRiVvvPVe1lqgcOjxk0dv23DVCJEJDtB1GizniwVCAoAI
      QwD4uZ//3A2NuwElQbjR3l56koer6HzBxQ1jk/sr5aS1BcdFhlpLy2UoUFhiylLaTnM5tIFA
      ZkKr88zjbGBkWMRx3EoaUupSzvfQY8vUTECu1lkjarezDC1IRzCWxNa6KKyBJFYLTfKwlXMQ
      HZKu4X6hHtOVtkWUOo4dgr6cX8xxQJ2SBiQtUv8Tk8ADUboNP9z7B1nUuDKz+NAx4NLzXaF0
      wUWVJkmWZc6GXqw1rgyltJRSKSWkXPf1X459Yd0zN9Oz3HAfsGz1ES43ei8b7Y6Q5c38cxc6
      SzppqoFLsAKYSdDlHKVErS2AtaBUzGyTMeSMFQDa1faSngdf+JIzktaStsi9QHEUjiJr2s04
      rboZOcamhowBHKnkioFjIWG8YsGrRSoQdqBiiExWzhTp+cXm4pzQGYa5IAg8Dbl//9PTM83k
      f/zU/iObH8l9hStYslz6eGhoyJm/asMh1/OWGbRuiTWujP/0O3/4y//VP/n9v/j+l557QnM3
      bVWDUn+n0cgX8616w/V9BvDeuff2HzqWRW2OxLww5wcANo2amvl9pcLNiq8YPpR//FHdshS3
      5WBf4x/+cuORpEkKW/BkQOAWfbfrH9VxveP5mmRH6yzRloxQihtthBO6rssFB4Gug9JCnCTA
      HJDIkbkApDU3HACQoVvOJSZhTLZjj5HyeJbZuNZxEcL5Zt0Ym3e56/phMe87IseQIQwWMkVJ
      ZhJMmc7UfJzONNuZwWuNBsDYFgZz/5AZLPi9GaFcqZQrlU02XOPKyDvu3z//2lAeXnrttECt
      o7pxChNju1568flcfjJJl3KFXBQnnVd+6rKlWE51apdGhw+iqP3key/zwalf+9pXblZc/Ace
      D3YJciq2uShysvmdv9m4Q5zzZTWbGrUlN1f2BFtamAtK/b6zztSl044xismg04hZDtrWduqW
      G7+QL/ihh6gRiSzTOrWWrMm0aisVWZtkhquOYGgBU+4y6fqCBcoGtbZKtS27zf4AhPCIXKOw
      1u7MNltDRa8cOpnOOnE0Pz3NPK9cDCMltCVPSsl9IRjItN83//VHq9M19ulDW5hK7yOWZi4u
      NjNsNbfRdvU2Xj7yyY+3qkvl8u763FzmDtavRuOT4/Mzs/uPnhgb2Zulda2zC++9kxscGy7t
      vnT+cuaXPNESxamnPi4zp7Ku2pu+/cLCD2Z5oWJaNcbIdG6jFniem2gLADpu/eTV1/1c6SMn
      D//Jn/zJL/zyrzkcbw6xM5KlqW5dvRqU3WQJpAwGw5w1mc7iVtSy1qg0RUTOhZCSiKxlSIGL
      OSkkIqVJDDynUq4z26HI6LZj07zQHpRs5qRJuxnp+WZ9sJzb1x9YFAloznhBQdlzjWXt2Vpx
      oCjDnAYvUdjJrLF+Cp2+Iwu7kCKnf4NI860GoW8vaH0zrcpDE1Pjw3Z15YlNY7UrI9gzHsD4
      LgCYmNgDAPDAEQA4evjw8hkBAIyPT3W/jIztVkoJ0TVfTtzqAtnVczA/s/kOdVqNpUQDgDW6
      1L9Lx+243Xj2Ux+7fHG+dGjY2ptokiNWPdu2lEjGlO5oXu8speiIsOSJ0AGUzKAlYkxykUfk
      glGqYmWsYhJAphhGnSYk9YF+WfLLFnJZRibppIki7kQm9DznWGUPAthM61aS6Jg5ruaZlcaa
      WALUZ2soZ0TBel7oCglMxpnyll4XDgpRovI6z28borC9JpsU30atFpb7aVulm+5on3k3ogS5
      9AcLFQCQYcmjc5U9e1qZbdTiYyePua64OdNgrtGq51poXXQ99EMAyYQRGGnD44aoN3WjLRxP
      EEXgdjzOuQGliCxYyjizgZtnFAtRnr2SWhlbYT2XBbnAcmAIuwLH54JiTYYMgfJMuTQkXdcY
      q7ulfixRhdIkTZtt1TLkAXgRY4vDrR8hQP/grnVd7vcmqH7zIa1zl947f/lakNvOgrtGiX7+
      77/rD4w88tAxvokqLzPXZphgg4NDiAA2e/7bzw9MHjyyf/KGDiNzeKXSy8rwPV3dKGrpwrtv
      XpxdHJmsAAAiO3ri0e7x4aHBWzUZ21UcxxIih5Wqs0RAZaNTpVrlMuo044kGzR3fR2QoOEjJ
      GGOCA1gEDsaYKNKuAeF0GnU/EVxFKDiX1nZIAUmJBAaULebzGNcgBgHEAUgKEkJba2SblU2W
      OTptwpKR4UCY/rJLZaFv2e33FfY/+MiuPQeU3U54yWoBUvnK1LDX/N6PXrxy4fyhA/tnZudc
      1x0eHl6Ymx2ZGJ+7Ml0e6r96aboYiHpGanHpwMMPnnvnLV4cfuzYxLlLV8nPX37zRZUbLWM7
      BecjzzzrIngnnyvtyxvl21bVGSzM/Yf/fYPe7D5wrFlbvNbZwgCU6WSqzggBHYNCGcxsWxII
      7oHRwoLMtM4iSlTW4uQw7TOTRRKlDIpgDamUojaTHvMCJVx3iFJdj1uzQbjLDSoAoNKkY9rI
      rMzlEnMFARkPOPcRGNqERySCIncDzgQEYI0bdWIdJSeY47L5FtzeEPd+AOfi9Kmf+ZXxvq0X
      wVyzhF27eGYp7zBhgWxk8ZGHj6cqf/7t78rcrubC5RRzAmHf3olLF6eTND5y7Jhq1TqZHXQk
      AB44uL9UKb7xXifwVCuNgpCuzC5WXBJ5Ty21WCkkq/VSjW5XmTVf2TVZ2IpDLwEbgxZEFFGm
      eGby1OFWM/RN6FhgxiboIHgeSc8iRyISblMBQyejWHoOK4wLyxB41laSgNJQwL5sLtOeclzP
      UhCWxgyQkA73uLWptZG1EQGAEJoRi1tWCs0NMo6Cu24RHcBLLQSwprrV53FfkKXJu6ffDEfp
      gSMHttp2TVbGJz/7LBOuK1mUZL7XCyafmvhymiSuH6gkZtLhjO/du8cCd6QAAK0yQgFcPPHw
      w02JAAASA0lEQVTEE0R0YM9uYmJhZroyOOQKrrS+9v2/aM1Pd10ZAAAbUjicevOUUZnZSnoA
      Gu1GhpNlDmfCx74c+HlLLI07Oo0taYMuYwwZZ8xhjAEgc5jLOKHQSjPTUSYzmGrlF8MiWDKe
      JUtgDFMZB2lVWr142TL0ciFyzjm3jBkMkCxPEsnRGgMq5q5DvgeeBGEVmW9It1JgqNkjW30g
      9wNa66ee/TnDg220XZOVEeZ68Su5cPVxFoQ5AOBBz2XBV12Jc3/5AwcAIQQAjC+HoVHX+WUM
      bY76I++Jy9UauFuwJKY+j1EmEHMhOYDVNRvXVXvRCJc5nmSeBcvRCNCSEYAFsEQWgQA4c3hK
      ucyEGUpw7BJXeSGAHI9LnzGBAARElLeklc7iThrHRpP0nDAIASEJTRuMQ8ZkMWUJRQ2oZ8h5
      6tDcVDDL8aDwNj+Q+4ggzFUXZhNR2rf7lrvpW+G6oFijG41mrlCS4pbKVJZlUjp3j+Nmat9h
      z3UuzG9BCSIwRkduYgUzQvpu0MelS8449J4+ccE5Z709a6+WAgGQtVZrHTBBnumkypGAyDXp
      tmkvaauJu8ztku9ZIk2GXGKey63i2VLSmTGpBh72F4NMCMVEqVDhZHmiDZIxiX8FE1f7joD+
      u3KjdhxJmqV6OzwtqwUo+/Y/fOvjz32qUWv0VUrVRqOUCxabcV9OtlMshLydECMjUCvmjw71
      b3JLKUeP5p98QrdMz5Xxd3+28fmvvPJKcXQLK7E17lKHuBSFMPCFC1IwxlZywrup0DozUkpE
      RNYzRSqlGPJAugigNeWBHItABAQFkwOysYksI5AIAgGRgeAokGQ7MRHmBNc8zxwi1ehUo0Zi
      yBQL1vE7xqE0KxhY/IO3sdGY+9Ie2E6mw71GdWm+3WpgYTvxk9cFSDjBnj17z7z1RoD2Zz+a
      nTg6dWXBb1SbPkbNWuwU/cEwjLSxxObrtV/68hc3eQH30AlvEMntN80FGcrGhsaPpYXFwcGB
      6Vp98wMo+fni+GFDlGqd6HSmU1M2kxxDx/O45zLXFS4AKKUAQAihtSZtuULSVmMGiIkFX4A1
      iAyRdesDitApWCRIrY5skhrFsUokPZP3ZMkVKuokURsBONiJfGiNIZWYuO0mScwlI2vnqmCN
      nN9OiNa9B6n4hz/8YW78geee+ehW267ZhY2Mj3Ibv/nOxeMPPzqxZ/DNU2cS3xsp+Ny1+w9O
      hYzaKS3NXBDhFiLts3deXPzhLMuXbLuODEyUbnByua/y8EeeObkVo+tCrGaXYo+zksMdFH1U
      NoZUak1sG5iRiDs6dtAtuHlmQUWtmDLpBJYYCYaARoO2BMoyBJf3zEiK0BIIhr5kwMF63AHK
      xcpUW6m0kUYnn3PLQ71JjsBYaxHBUkDkGqWs8Z/7spm96j76sS2M5P6hb3jyS7/4LwxtRzVZ
      I0DDu4YB4NnR3rT76KOPdT+sWDMqABPjW4tby66d37wrgzH2+ssvzEb4mWef2mSTwUD2BzKx
      FFsbWcosAZAHwjeEmTaZpmYGWYxQyxxPIQKYLGrGacwC43AGVAZuyCcQjEkXkZElD9BJyFEg
      MhJCqCjqtBrc9RzPBxScEVSbabUFpZAJBwmQoe8J5jEASyBqUeeVyulaX7Wizm4j0+reI4ta
      1cUlv+8OIxLfH1BaG72FV0E151R1WimDyDyVOFGdsk4cawhysQyECEU7kh4h46GVhNbaTLer
      AYDJXApCa+fcxSYzOiqFxuQYuBlpwzBSBMWAonZmkya0jUCuud9iPnM9J0DGkHGvJrkCRiLL
      Mm0Yd4JUQMKzWVt9tfZ3Fum90i6Az9y9e7VTOPfOm9PzswNO8VYnKKWUUr7v36z4rgkoO3f6
      1OW52gMnH+sr9DbnRHZ6ZmZ0ZLT79er0tbGR0ekLZ9yBqblL7x44dKS6tDQ4uJHBHrnLBwco
      tWQ0C3y9OLvBydcuX16sLkVsC/bQpLqQLl3y80U334e832Yl3UEGAJ6UXCCi7ad2KzOckcuA
      MQFMB1lORwFpDuSHLuZHGbd5MMooE2c5YzmiSKrCAVbMUzCOwkMZEuMAYIzVxkQ6ik3SJo2A
      jPFU8UTFzLTTLAqc3OACfu1q5IfZAW7gsc0P5b5hfM9+DMpOcF2Jfuul52vuridPHOx+rdfr
      3/jGN4aHhx988MG+vr7VXrzVQfWNmTZ/5uknl2Yu/vYffPvkyeMXZ6qH90z97NUfBf1T/R7U
      tBwZKIyNjLzwg+8Eow80Fy6eeffM7r1Tp157fXB8sjl3ZbGhiyFZr/zxJx9bYfX2Tn66tDdn
      VGBbVWfgNq4MJMW9wtTAZgn6AMC6g3UmOzG5XACxTHPhSjefc8KQISMgC1gukYo1GWuNJlSQ
      c6VXNBIVQccwrRCittGR63iyEoJwGaIBIhM7OmKdCLMFUi308+BXHOE4jAeImnva6shEcdL2
      jO4Tgc8l4zkOQLn2/5AtMWXjse1E2Nx75Er9h0pr7A1+vu/K9FyaTHZDWiuVyle+8pXz589/
      97vf5Zzv2bOnv7+/UCgEQbAmM5VaMy+93PAFBvki6uTYI49nc4uHpwbF8P75i2fiqCNFpTlz
      buTIx3RzcdfhI2SBovnYSEY6ynQWxf7Y7tCxRLBUXQKAQqEgQlcttlgpJKP0UpU2pHoZmdz7
      8ssvnr+2+OiJzXqRnEK5zy8wl3dr0VtjLRmmMtNpamsZY0ZrAGAATAhiy5zNqYEYbWZBGWGM
      DPJOoV+6gnEkJC4wM0ZbYShviVJrIh0laTOLYgdToKRGoNAvyHLA+hzGtNZZZOqMYxgAY5ko
      +7nJieTa2+XDx7b6MN8f4JLt2bfPda+HtPq+f+TIkcOHD8/Pz1+8ePHUqVPtdjtJktVB9fKJ
      jz2TZMr3vINHH3RcF5HRcAVoPzBupnYRcsEZAjwxzLoRCd1J5ojKmHAO7NtjiEnBAYAhFItF
      ACCi9vf/sjU/DYyBtYC3cWUAwNTklN+zI5JSinOJCEqpriHn5vNnbetyXOWKe5wBaW0SrRNL
      5HKPI5dWxjZhhAKYjy4idcXMIhJDkoxxboiQmg41ZMJMqlWq0izjnAehxx2uEqNTawwgsdAt
      kwWm1T7bFG6GdsFaFjEmlJGCJcg91QwZy6z6lUP/NmHOr+bDD6gATe5f8wKTUtmFC/rylezC
      eXb23O4sPXTsuDiwn01MrFGiuZChkADgByvOil5ANXfXWuVX0b4vezP4ag9W16ehlCKrwRqw
      m3JlzFx6j8LBA4MOAJi0881vfqc4MLGvT75y9vz+I08enFgnUHeQYUW4LnMZ4wRkMWeYJrLE
      kACIQKHVRhmrJDAOiIRgjCVrkTRZQiAEFNICIpdMCEcIL/AsCmLCEmkRIdc+Ry4YF4SMAboK
      BhQiAkMEAWitJYaSoGnMtKE4jf715d8r6HaW+5XNjPr9j+z8+cbv/I4YHZO7d/uPPw6MqfPn
      kxd/rP/oj9co0Wmaua6bpqnjugigshSQyw2TKHYWp9898/Zbp/Pjx6cmJ3WWju4+lLUbzYZ+
      /MlHLp1rRv1eFEVdelGte/llIm1AVO0gWmAEwKArOWCJEYABlGAcIgIySWqIEIEhsS4DGXRr
      lRGoDAAsdRnHLGcAhIZxtDaEroz1Cgot81h1hRNoOTeoa0MJAQKAJZX++t6va8x91beHFq/H
      P62wAXet4d3PK9PqDUxnKxGDt2qyEnC4YnY3xkCPWo2tfL35BADgnEspN8936xw4MPCbv7m6
      gIB37FjunxBYu1o40t/9j7//9V/54u/92fe+8MlH2losXjk/dfiBwb5b7u42de2JB/Mf/7hu
      G4racqiv/pd/tMHJH//kZ5/5xM/3GuZKpn26f9eUK+DUT8489sRTgSsQ8aZhb7QHvC80vyPW
      /PYbf3ih/tpzE78Ultdxhr0PaX43BiLCTf+DiLAmnVSn/fncX33n1fEye/3dq0ltLvSDxXrt
      TgVo7xGnn+RYv2kuyJy8uR+rsfae8pOP98yJIyMfjOSYLpDxEye+duL2J/5jwOoZSD7yyWc7
      tWqx6NcX5qvu+NTIQFC608SU9MyL2Q9nWb5o2w1kYOLs9m1uDSLqvjor88TKh9Xv6MpBrXVX
      G1s9r9zcdvXysdJkdfz1yueNm6z+dYUueN2uwvLbsvpg98it2q5eiTbTZKVX6/Zhp7BKgEQw
      ORLAyCAAjI7dKa/UCtT0xS1lZWyMIAhg7f1auYkrArT615VaIeuK17rCd3OTdR/P6l+7HAFw
      CwG6WfiyLGOM3SBzG18uTVMhxK26vW6TOI49z7vVkHcKd11BLg0N4tqLcOdOczlWawMrk8TK
      h9W/ep53w68A10mDVz6s/vXmJqv/cOMmK7+u28OVX1dns9z8h+tebnWC+iabrPRq3SHvFNZk
      ZXznb7/dv+fg8YO719W85q5crYyNbpXFiklfDA9TZkBrDHy7NH8PambNXzmT+SPXTv+kODI5
      d/7s7mOPBqrtj42Ft8o2ITr1s9d3H5h45ZXXJsbHLlyaHhnuW2gkT37kEXGLJmTNG2+cGh2u
      vPHOpZHB0kIj/cijJ2ZmZibGx2/VKzLZ66feG6o471xaHC55jQQdikVh6PihPbe6IwvXzr9+
      5tpwJWgax9M1URw7OJqrqXC4cktCi6vnTr833SwH1jglXbuWH5yYu3bl4IOPjfTfFbq0NVkZ
      F89fI5d+Grc7aRZQUm/Hws81Zs5OHDzZWrg2O93ae3R05tzlh3/+yyO5zc4i4uhT4XhAJrCd
      mijnWn/8O3djGDcgn5Pnqp1mvbEUvdNcqDuVqxdffunT/83Xw1vJLiIzNo6iRm3+dJS0W20L
      dnG+lj12UrD1X1lknGzW6bTnZqaR9Nxi9YyP5xeaGwgQcmGzrN1Mpq9dYmZ4fn6pUsl1qtnx
      Q7ckMvPy/WODjavVzmghWkz7wlb1pe+/GB769AYCVBgY7a8vNdJ8LrqQ9j3QmHujWu9Mz1bv
      gQDhoSOHw11D7/z0hUIhCCaPUDvpdDp7Dh5TaSvOMmNNu9OhLMnMFgJ2mO/YegcLARht6g2w
      O19U6mYgE470x6cmK/2lH71yxsR1g7a61OwfvKWbVkiZ7xsenzxQ9PnZS9fGJydGx/b4GzLR
      CCGHRsYOHcV9o8XLVZ1VL7XqNWNpg6w6KeXoxPBxXh4tstq+w7w9n9u1d4MJuT5z9sU3Lk4O
      hhfnJTfnU69gUpsuLcLeWxovrp559c1r0YDfiqWnzr9aHJ7cO6WPHr6lWG8GaqYTfesqepwF
      0hSwU1TT+cVz6uK79XdXVyzs+qmu26+M1sh75aOILBEyhsZYIfgmDRJKqcb/9HVeXbj+5hPJ
      f/NbucMP3Ml4bovVebtkLa7SFTbTxFrqMvRvPMx1E4c3bLJ+qvFGvbLWri5Gtvxpgybd7O+e
      5Wal7ZYsSKvQ3VLEWfTK+R+/M3P6nbm35+1iWClMFCZ2q7Hx+uCaGahbMGTlu1iTuXyjrrpZ
      rISx30Osvl24ObVxdRO+uaJrW38oW26B7BYr6K2x5gHtUP7DxaWrf/7K81PenmfzXx2WIxJl
      wBynLNxRsWaDZHTWjpJ8Ls8YWqMtMHGfKh1/4NCpzS+2U0ti98QWYlE+KBiV4/+i9KuIViWt
      xuxZFSeMe5Yk2dV+Lpt9/7vfy5UKQyO7+/sKcW22njlx1Dq0d/zN0+eOHjt85s23hiYmB7aY
      /Somjgcfq9iOoSTifcXoG3++w4N7f8AvlH/2nT9/+JGT/9tv/S9HTn5E6Lhj0MaNz33xF11x
      13edO46XX/iODa5zJF5pLP32qZfq7SjWkKLUKADb3VVylQCZBP3KSJ//+s9+MnbwQO29Vy5V
      w8eOlv74r85Q2jz77nsPPv7oyy+/8rmf+/SWusJHJlkIrFyxrSUeynu8lt0zMC52Hzyc98TU
      3gOD5dz8bKSUPnLkuLPDZpd7BS/vs+t0qOMjQ//yq5/JOSLniZzLXdGzieNafqD8gbH8mUuz
      H3n6qbNvvb73+BMjSoz3i9wwnH333QcfOPrmG6f27d9y7rQ++9NOfYEFeRu3EIHSrZRy+iAB
      Hzh6DAC+/KUJ7JWf6r6iH7zpBwD6c64Nrm/0Cr78yO71Se/ubt14Y0zn7ddQrfF/OXsPu8UP
      QAmSD5EkSdcHt8E5d1eAPsQ/eny4yfoQd4T/H3ecACES0WD1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trend Lines' width='191'>
      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
      JAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='191'>
      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
      JAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map Matching Regions' width='192'>
      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
      RJeARgf2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Extreme Poverty' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOydd5wkZZ3/n8pVXZ1z90xPTrszs7M5R2BBgqcI
      ypm9837q74end6ZTDwRUFAExnOKpeIrhjgMEZBFZEHbZMLOTc+zJnXN3VXV15fr9McAuy0bY
      Obx13n/Ma7r66XqeqvrU9/k+6ftA4+PjYIUV3izw212AFf53syKgFd4SKwJa4S1xcQIKh0La
      MhVk2Six2VS++HaX4rIFPfXDLx64YyDEURgCAFh35Y3vv2bbaal/+L3v3/nAdw3LVZj8rX/7
      abrCjyCI0RG49db/Y6Wwt37S6Z7njxdrPnXD5rd+qhXeyOsExArgs1+9q85lfJsKo5HOxnvv
      vV3XtRMHfvnbZ9o//d49b1NJVrhQ0LN+o+tP//L+UuX+W65Y818P3kOvfbccfLFvcOCOr/7r
      x2+54Vs/ecRrIt710Vtb3dp3v/sjXkeArm+95r03XbU5Onrk+78+rEpZADT3ql1/02b9r2de
      zuXy1/ztJ2/Y2aoKzIM/+O58ikdgULFq6yc/ehP2hloUgmCDgZQ4GQCwMHbiRw89AiG4KCu3
      fPwz21sCD333nr0f+ac6Nw0A+Pn9d+37u3+ppPh/u/+BCCMiEKjbsPfv33ddrO+P33z4RRNF
      7r9q9+9/90RKMXowYaDj6Fdu/wqJwJpcuvee+2798u0mDFrGW/vXwesFJOW/+82vmQgUALDj
      ultu+NCn7vrqbQeYrROC7/btq9EdqzuH5u/81t1C8HhewH/+4+/gQLzji198/+e+vqrcpmvq
      r3/wzfZARaWmTi4kfv2rH1hI5IGv/N+noKvu+sY31VLmK7f94KodLY8+eH/lrvd/evsqSNc7
      nv31b59p/7u/2f5a/vGpri996UsoisGU9Z/++WYhF/reT5+47e7vOI2EXMx+5cu3+e964Npr
      d//3My/889+9W0gHFxR3rR1/6J47Wm745OfW1wCg//mRnzx5eGizUWVg10/u/SoMgB8rHC/W
      3HjNZjsz+ueeuRu21M4NHLI27FxRzyXh9QLCrZ+/7YunVmEf//A7P/SPD/zmqSfQ19/t1W0b
      CAQqxuf6g3OlH3576UuBTee8w5Ut6NadV1pIFADg85qtW3ZCAKAUbdJkQeGPHeunI6VjT0EA
      AE0RFFMOnCIgb8Pme++9/bWP48d6ardd7zQSAACMtt+4Z03nQPCWvVvUx++Os9cee+z3N9z8
      cU0Rj3R2u3P6nx8BAABNKkJ+YvNe5/oNa08zbTuvv/lf7/mP6zZ9/sk/dXzwn792CW7eCueq
      wgDQFOGpp154z7v3HHj2pVs/eB18ioZwAgcA4JSpad2ub935JQyGAABCiUcJKjF6GEPxkxmg
      p2aBl9U3ffpr33LQGABAlQVZP1cBTBZrri+i6zoEQbquR5MZe60FwPjf7N/w+9//PpbGb6xx
      wrpc3rD+X+++x4jBAABZFHQYi/U/g2OnO+CIwbXZrz998DnV3eozXQL3fAVwejNeU0IL8zMz
      MzMzM+k8c+zAb6HafZ/9zD9psy+3jy6+8ceYpWxPPfWjXzwyFZw+cfi5227/eoKVzpkddvPf
      7Hngez8aHp8a6jtx99du65tJnCN12ertztLELx/9Y3B6+tnHf9mXMe5aEwAANGy+aublJ3Ze
      +y4UhiAEe987tt73wIMjE1P9Xcfuuv22sXDubCe8/pZbfvHAj9594/XnLOQKFwHy6U9/+rUP
      sCaODA3Pzs7Ozs7CBjPLqTfd+A4cxVpbVk3PhmuqAgiC1NTWIBBE0NYqvxMAqL51gxni2ju6
      eGD4wEc+4rcZIAimTLZynwMAACOwu7zGZsAAADCCVdZU+yvrG8vMJ463RzP8tTd/oK3Of2rd
      iCBETV3Fax8hGF2/ZZuSC5/o7rcGVn/0/e+hMBgAAMFYU2tba1MtCkMAQN6qpmoX2dHekWTk
      d93yoaaAC4Jhg8VZ5rYBACAYMtk8PocJACAX0xMZ7H3X7lhxfy4V0F/VYOpjD95dfs2nttU6
      3u6CXD6cywW57NArN1y5sWZFPZeSvy4LtMIl53VOtKZKwz3tf/zT8/EsxyTmB4OLkiTquv5a
      gvmJ/nDmoseVdE2TJPnkZ4U/3tF73l/F58aDkfRob1eOl8+b+JzZKz0nOgXl5CBeMZ9IseLp
      qXRtuL97dno6Go8n0oVELFKS1TOfT2QWEoVkKCzoZ/z+okkshsRLP8SoxGMpVVv2ocuTAtKk
      4nfv+sqhwXkDqjx54ODo8YNHe8d/+/DDnKwXWSZfYDVd/+NvfxJh9UI+r2g6AEDXNbaQ5ziO
      44VXPjIsyxRKggQAUGUpl8vJisZn53/9+HNFjuVYtlgSC6GRn/znM0sPVNdUppDnBQkAnWVZ
      ji2URBkAoGvawcd+1T8de/gXP0vkciVRBrou8FyBYbVXBa1raiGf5/lisSSwDFPkS6os5XN5
      jmUlRWEYhmUKJVHShfxDv/httsBKigoA0HV1pP2FUFbQVKWQzwuvKruYWxgNZigMzixMzUbz
      7UdeYHlJVeRcLifJqqbIHMcKkgKAHh4/MTCX7OjuLBUZXhCXrjSfyy+dHwAgiyLPF4slURJL
      DFfUdV1XlXwuVxJFSZJFUShyDFcsLV2HqogvHD4kyJIii/l8XlZfeeSC+MqZZUUTS3y+wCxd
      eInnCgwniKIkCizLKmeVCAKk/IEnn+gaGCtJZ34T3iqabFp84aQPND90JG9Z+82PfwACYB8A
      //nD25zVFYc6ouVPPfTiYARR+Cve+4m5MKc9+9ODovXzt34MxaCnf/2jjmCmEB73bn3fHZ+6
      WS6m//5vP7R+z97ZxfzXb//Mv3//+xhtyGvOWzbSBc395U981N7QMpuQb1xr5tLRvAQcmPzw
      j++dzamZNPPVOz732Q/9w8Yda2c4x8+/83lFZA539a3zr4+EYo8/9IPpgvHrH9/9wM+fJGGp
      5ar3f+i6bboq/vT+b8VEPDrZU7f7hhNPPfWxf/rcyJE/qoSp+8iLX/63n33jU5+58rq90+HC
      7V/4WDQ69+B3bkMrd95x6y26pgyPpzbUZw6/cNxgd8ZC0X3XXW+lsOTsOIsaB3qHTW7C7sG7
      Qzk2F+s5OunyOBYWk2sqiRcm+Juuu8Jrp4f7Z/DmQDobm5kITo+PX3n9O3q6ep1260IsfeM7
      r0Ng6MXHf4fUrCnMjpjK6uTUQtOOd0z3HXd4/IuT3WT5ltDAyxt27srHF72tu1srnUqJSSXT
      meji8fGg02mPxvPX33A1BkPPPP2H99x884t/fMpVXZ/KsGZCL2h0nVWbzyk0Ij93bGidH8Eq
      Nu/ZuhYl3jilQitk4yNjC6vWbizzODVVAQC5lNLRNSo95Bz+GQD6KRZIVQAEvVZfRUJRMyIa
      rNYnXxq97a477r7n3is3lKUKmUMvjdz6yY/QOKKVMs+2z9125503XbOjoqIGACAUos5VV335
      X75SbxSeefr3xsar/vW2O/lgV/9svNxhEU3lX/zc/yU0yWi3Xv2eDzlJwOfmOyZLd37t9k1+
      qLd3xNS09fO3fkxgOQAARhBOV9U7t6/FK9d84TMfV3n+6Ud+nSkKkqL09PUBAJjwyEDBeMft
      X71qxzo7CgJbb2ixFUuODbfffvvquiY3yPi3X//FL3252sgMjk7Ubb7hkx94l8BzAAAYwa1V
      ZZVkCbbWbt28udlPRzIlAIAsSDt2buGBLGeKXq/LV12hhEZjRSWfLxAIFEkyN1x/ndduAgCG
      nd5tbfWY2btx44YyMznU2x4vCPkCAxBU03UAdA4zXLFto9dmXLNha0OZJzJxgqrevGnTxi1t
      zVaH2VrVvGnjxn07183ORAEAuMFSVlNfik3WbtizefMWGiuWJA0AsNpLH+vqkSy1wb5OWRZZ
      XoKB3j8euXL39i3btrXVVciU8+rdG2nizM0gvsjbXG4c1jUIoyniTYgEUkV3//cChz5ddvSL
      /uNf8bff7jtxl7frbk/3d8qPfMHTe3++7sbQ3n87KaDqtXvtzPA3vvWd+++952DHWCgp6Xyy
      sqlplZ984L7v3nnHXcFgEPJv+8LHdt/3g/+QNQCTlkY3/L3vfu/hR58JVJYDADKRhdm5ofvv
      vSdDVVy9Z8d05zP3f/sbZduu5VMxmwnGzG61kCLs7kx00V8RAAAQJo8DSd13/33DrLnKpHrL
      yrOROVdVFQBAFXhGpdRSyuEtZxNhe6B83eZtPo/H5a/+7P/5MADA6K4ysjPf+/4PHjlwCFZL
      lfU17qqm7MTLP/jefX0JQYhF4sG+795/T55ssGi5srr6WCTk81dDAOiaigDKaHOnw+PDw4NT
      Wa3GawQAhNNwmV1HIJrRETNcQDGXv67eYqCcVtpT0yBImNv6Sue1qug0KlK4EQA9q6PNDfU2
      k9FuJqprmjAE1jUVQY0IAFkethnRKMvXrmpJTPWODA8+ceBFOw3Njg31Dw29eHRk0/o6AICq
      cBRJu8sqx/s6B/u7NdJrJBAAQP2GzS8888IVu9Y11tcaLXZEU1rWtPpseFf/YPuhF2JFAUdM
      6Fm7s2BfIMBmE+lMRpCUN6EeWGJ8J+7C2HC26UO5upsL1TcwFVdx/p28Z2PJ2VKovnbxyn9n
      K/YDGH1dK0xT5Uw6o8GY02HPZzMUiWsIQWFQOp3BSKPVSORYwW6l06mM3eVGICCLpUyOwVHY
      aHXgKHz00R+Pos03bl9ldToJFGYLuaKouV0ONpclaJovSRaaYHgJ1WWMtpAYAgAQS8VsgbXZ
      nYgm8bJuwKGiBKwmg64p2TxjpqmiqBoJhBM1i4nKpVMqTDjtFgiC5GL64d896bCbnvjjke99
      /zsEhpsMeJHJ87IO6aD/4K9Dxq3Xbam2O12ayMkQgemiAhFGA6HrOl8SaAMl8GyO4R1OF47C
      AACe5ymKLAkS0DWKxHlRpSmiyOQ4QXW6HKJQoijD0vPiizxlIISSQhlwni8ZDBRXyPEScDpt
      MATpul4qCQYDVeR5g8EglnicpCSey7G8kaaZ0Ohk0d4cMJqsDgOJAwB0TREElaJwlsnxku5y
      2mEIAgDM9B2K4bU7Wyp0XcumUzBOW81GANR0MoWSNIEhAMAGA3kOEXD5NC8jdqft7Do7M2gx
      7u/4mmBvSrXdqiPnsV6Xshk/O9YP2aqqfbZLdcJzoGvKSG/HZCi7fc8VfofptG9nRroQ96oq
      9+nH33byybBEOt3mcz34JaaDUzV1DfCb7zIXhzo7NdqN45bVDb4L/xmRm/K335avuzFX/z4A
      n99zWukHulzRp4Y6Q2ll/datNsOFdhcbYid83Xcn1n+eK9sDoAsS71uaVK9wqRePn79HZ4W3
      A1WDKIfTRl3gtCdds04/6e25J7zzPq587wWqB5w6lKGpYlf7caYkW9yVHi12Iizv2bnDa4H/
      +3ePV7WsI5VCslBEDY69W9d0HT/CiirHcPVNNV5/2cRg52KCARi9b3vb0wcOmC1WhPbs275u
      ZcDybQUxm+hiKptnBa+dPk9aTXEN/9SQ6A7te1A2+i8qm5MWKDjQbqpce/XV1yQXRoaCsb37
      r/TZaYVndKun0sC+3DcDAWik/cRw78t4YN3+/VcboWI2lmYz8/OcYf/V+6vITN9sWIbs+/e/
      IxedezOu/wqXEq0kiAhpclgMAACgawNdnbwK5sYHuocmNP11negYH0dL6dCeH1ysesCpApJl
      SZIVqcQqgJAQzEshAAAun/S5KzUFatuyfe+urde/9124KMMwJJXYxYQkQyWHkRAlWVeVxaRg
      lvPeutUAKAiKFLOZpd7qFd4mZE5AVtfYgkszriCYJjFVB4IoCaXiaU9GNpbHtt6hEZY3kc1J
      Aa3euEdNTrZ3D+29cn9b67qlgyjlqG8o96/eaNdSR9p7abOlbPUGITLS0TMIW0x1FQ0V9W2r
      nfqhl482bLnS63atqnYDTV3V1Do/ExSV/3VryC4ncBzmB0bmPT77yWOaKOk4qqunWaC3wkW3
      wnLR2eMDkxgMVa9e31DhvlTlWOHSkoktLGaEtuYG+FV3WJYkBMMlnlUgjDaQl8pDvej5QDZ/
      zQ3+mkuU+wrLRTrLmw24omg49kpfDobjAACSvsR9Yytr4y9PzEYsk84MDvQnc8u7rHulI3GF
      t8Rf1ZTWvyr06ZFuTjN5K6q8Vmr5slmpwi5XJKbAshzH5rllzWZFQJcrRHllNYFjPs+b6d25
      cFYEdLkiRmKFcr97uQeUThdQkWPfegeyKpaWpja/ih5dnLvAibmaJhW5kzPec9nUeXu0Syz7
      +pETmWUFAHSOvTjrXShk0+nUudPk0in1HP2jMs8KZ75OjmUvqjBvhL24y8FKXDoSiRaFt7Yk
      4XycXJkamuz57ZMvYxCfSGVMdheXXJyOZN1OGwRAPhkeCYbcbtfcxBAjY4giTk1NECa7ymf7
      R4Iutzu5MBXNS2ZcnZwKMiJg5ocH4sXaMrfIZvqGpxwO+sCTzze1tUlcZnxsTMdNNKr29A5Y
      HC6O5TBI40qlydFh1Ggv5aJj4wP9w0m/z6kIDMAooZhncxlWQU0GQmCzfYNjNpcnG51bTLIW
      Ep6emSpp2NCLzwlmaz6ZhVRufHaRJNTpyYLXhT3+6FM1DfUjg4O0zUlgiCaXenv7NJRSS/mJ
      yRnaaFB0mGcKOEnpMt/TOzA1P+12OpKRCGaypRanFlMcjsIkgWVz+UR4AWD47NwigaMYovf1
      DzvcnmRkbiac8bgdEACRuclQLEWp2ZfHU7IouOzm4NggrxOIJiE4mc/F/vTU0xVNayCZm5yY
      LIg6DkmhWFosJEIZ3mk1To4MpNkipKqJbIFJLmZ4nYbFmWhOKiQk2GAgMABAf39XIpF3eaw8
      p4gsgxioc1YfUragrVvfaqTwc6W6hAKyWAy8RCBC3FuzanK07/kDzxeyEchS7aLEztHQqipP
      ZCbIUx52dmR+YcFWUzM/FgzF0q2rqth0+DdPvpieG9VRwOJ+PTuD0Xba7nRZjMc7OpobqgYm
      F5w2d1WVf6zrsLGydW58ILwYaWpZPdA3XEhFs/n01Gj/ZCgzNj4dW1xYv7VNE/BwfD4eTVRW
      VUyOdEZjWZ2gPTbjsc6e1pbGQjry2FN/Si4GNV1MAVcxPu2xOCCEmc8oqVS+wU8OBJMkYvQH
      nHxRSCdClfUNg4Mj1ZWB3o6O6tWtXcePx8KzNdWVC4sL0UQ2EktVVZR3HT/e0NoyNTElFhPR
      WBbW5IxEeC3E1Pxihc/T2dWbiEd0oM8tJvh8ejYab21u7OkdnJidr7RDBcSNc5FgWjYWp9Oq
      Mc5jFURmeGSGcFVlFkZS2YLLVz7Q1+FweasrK9PzQwuyHeTmxydGKZpczCMONT4SjFDeytDA
      4fnFJEWqf3qpd250CDcZU2wpH5lHTE6HhQYADPb2N9eaBxYKpbyemZmKcbGiTCx9dUbS0cVQ
      NIZSFno5NXSqiCEEgS0Ov9vlgYG0fuMaf1Vjld8KoaTKpXoGRimzeWFiMMZpNqev0u8Ako6p
      XFfPgIKb1jc3VK3a6DMj4dmJSIY30iSOoQAAEtE6ewZNFhtJkjAEIAhMjvTxCmIz412dXZjB
      srrBP5uSW5tbAl7nho3rqpuazBRBGkwIFyW8VQgEwTBMm+h4IgEgiIKVzu5eCaLWtqwONKwt
      dzjragMQrOA4SdCmxoZ6RMwNjE4BCIZhCIIgkiQtRqK3uwchaQCAxUz2dncVZeALVDusNCDN
      udm+8vomCAJmGu/u6mZKEgShRlxnJD0dDo5MLZSb0AMHXyDNdiMBZ1he5AuiCplxuLOzmzJb
      q2tqaYNBkGScNuZjc1PzcRiC4vOTk/Npb7l3bqw/y+tWGnnx4LNGRz1JkUulisxNRDK8y1dW
      U1XNxYITC1m/3z43PpxhFbursqamtqWpunHDZo+VTicTRiMRj8eCMyEAgKei0ul0agK6ONMR
      1rT1bVvrA65zPFpVyAkKwhZPXwF3abmUHYmZuT7esT5gPmuC6ZE+X9N6+vx9T3pfZ8fqjdtI
      ZFldQK2zvXPjtm3Lm8nryYTGOLqu0v46k1DKx9t7R2WAX3nFrjdO/9JkkVeA8aJXVigD7YdD
      ebBh81a/cxljFl60gISSQFJnmtKr66IsE/hFWEtJFHHibPdFF0oSeaa7psiiogIAQSRxMi9N
      lUVZo8jz32VRlAji0ph0TZVVHcHQV6w4zxcpij5lKp8mlORXL0HP5fI4QdCGM0QoFYQSSV7y
      vj5pdGja43fTJit1lqU/l4STPpAsleKxhA70bJ4z0lQ8sijIAAFaMplACAOGwqoshMKx4d7R
      8nJnJJamDaQgq5oiaaoSjsRoIz0wPGE1oOk8T+FoJp3gBJVE9EQyqekgky2YjFQqHpEhDKhS
      IhbHKPLwC88HaupRCKTiUVZQYFjPJGMQbgByKZKIDvfOVtX4irwgiQKC4UKJZ3OZogwyoZHR
      iXQ0G4UVlaBNulwKx1I0iebynFAsCCpEYiC0GFIhZElP8dnB548N6DBqNBrlUuHPLxz1+l0l
      QWayKRXCIEWIxVIQUBhepnA4HI4QFI0isFDkYvEYStCoroTCUYo2CJIMa4qsKrFIhKBNPJNZ
      mBmeiikeh0kWBQTFMqmkIgsqjOMoIvJsLBkd6VlwOclUoUgiwh8OHHF77JpcynOS0YDHI2GA
      UTisLoYigyO9NVV1uqZEQyFFRxSBE1SYxFGpxEXiSQRFZUWFNUXS1Fg4QhhMPJOTdITAzi0L
      rchwkiITlJHAl1FAJ08dmeqfKuC50HGXzZl0mwBhmT7WW+ElZWs5FMpu37qmp+uEze1P5fIH
      //CEiODOQCOsSCQkpZNRXkOpGZ+N0rv7hiwGLDyjp0TYDhVTNDwvu7j59ppKWyxqGRqdxgjC
      b0Vt5fUL8aGlfJOhiemkEg9POw0U6gwoCzFILno8znyJB0Dv6e6Ws3OOxnVspjA6OWum0Obm
      WgCQfDJetFiD7V1sbEpFSZPDA4RsUbdYSdxkgCmr8/CB5z7yofcCACSxJKs6ANrhZ5+qatsC
      ADj8/B98/sDIdIIg8HI7ZnS52zsZsx1zwMW5jIibXDdes7v7yIuW6qbJE50WVDU5XV09A7qs
      mCiQTiYyJY2gF9jk9Pp1TWqp0Dc0JvPsjl075memGTZX2bytqcJxoqvH57EWipnHHh80EEjT
      9t12i3V0ciyfLVS4rJE5fHw2gRJUncdsdvtSaQYAMDHQq1DW6ROH7HbUEmhe21De2dXldtte
      Hl+0UDpNQtl0MsNrGBkUM7F127Yazc4yz9kWwCgTQ/3zUc7pNNNWt5l+MwsLL5CTTjRG0c3N
      bXV1VQGaFiGYYwqSolEG95q2VarAAgAgoBfyOUnVLHY7hpEer89NcCzicDsdGIp6PA4IglVJ
      ZIslBEFUWSiKCgIbWte11NXVlfscvAqbjZTT6bG5PS1NTZJYdPs8BAojCFoqMoIk6ybH+pYm
      TRKApuYLeUXVAYQ4aVF3r+l56Xhba43NYjTbPBQOAQBUWSoUCjCCWh12FCPdDisAZMuaNTSm
      6jDMFTkMw8aHhkUAIAi2WG04UA02u1CS/T5PoHpVbcBrog0Ol9fm8Da3NtRW1KE4SpssJIF5
      XW4AAALDHMtoAEZgkM8XIJSqciMhDvO7nSSOuj2uxta2gN/jLqtmFgesZbVLjpTTYUsk4wAA
      oCr5QkHVILvdihusXrfd47ABABpXNbtslAaTNEW4XB4UBvl8XpJVAACKwAxTkDXd5rQnkkkA
      AAw0huF0CK1yEyEW8bmdJIa6PZ6alja/23HOthXatGZ9TcBrNtEXPDv+TXLSB1JVBUCIrioQ
      ABCKFtkCjJIEhiAYqkgKhmOaqjAsR1IGDAFsUTCZTJCuagCGgcawnNFk1nVNVyRBAVIymsUo
      v8NhwBEdQTVFhWGgA1jkOQgjcRRCEExWJBhAKIYBXS9yrA5jBI6iKCrLCgLpHF8iSQNBYJoi
      qQDRFIUg8BLPqRBG4YiqAQDUEi/QJjOkK2yxZDIaVVVFEFTTlFR4ZmB8lrJ4d2xswQhCk8UC
      W8RxgjRQuqoCAEFAR1C0yLEIRmIohCCIoug60DAEZhiWMppwFBnu6i5rrDfSJhTSGbZoNJsR
      oKkaQGCwlAYCGgLDmg51HjuyceceAoFkWVIkCSEoHEUUWSyWRJKgIF0pyarZSKuKqukaDMMQ
      0AGM8ByLkQYChQsMS5AURRK6rrEMgxEUpCsAIUgcVWWJ4wXKYMAQSNEAejJrHUPPWysp4wPD
      rKzWNKx2WpYtNPwyTefQNU2HIHi5xX/23EVJwnACeQvL8jRVhZALaZ/pqqohyCUNXXApiEUi
      GgQ8HlcimisLeJYvo4sbCxMKsYn52GsfZydGZmYmZ6LZ05ItdcS8lWKFpsbCsdjIxOx5U04O
      nJiNZoCuR2eGfvrQ71hBnhrqGp6JIDAEgJ5PLD7/4stFSUksTj799NMz4dOLejbgC1IPAAD6
      C1QPACARmuvr6+3p7UkVSsua0euCbJ4DXVO6jvx5bPBE16JSQQuHO/pTGSY9H1xYGOsNZs1m
      Ky4mZ1OCy2YSuOyfDx7kdNJtNRx/6WCU0Vwm6MjhjrHgXFmZ9/hLzwPaOTHS53eZuwdmErMT
      o+NjRUnt7ep2lnl7j7QPjQxSNs/TP39gPCMLglRuxw7++WWzy5+cH+kfGktxapnHAQE9FBx5
      +cSQ32//4qc/U7VhX42H+ubX7q5orLO4yvjF3v88OnvN9rVAlX9w//1AZXpm5XDnH/Okp6mu
      xkyfe1mxNNI37fY5L+SeKAI7ObfgcjgAAOFIxGQ2n0NzipwbHZjTYS3PimbTm61TCotd02mr
      zY6fT7Te8orGhsbysoDXbX2TeV0YJwVUzMVePnKib2TUTMAdXT0d/aMOQunoGZQh0mUzT3U8
      89iJsFlJsqj54GOPtbTUPvzfz9NiXqZwhLYdPnQsOd5Ztn6f24T87L5vEOUtIsdEB5/rz9CL
      nU8LOP3wb4xk0pAAACAASURBVJ81SbPBVPEPvz9Q1tD69OO/vGJr809+81Kw/VnaX/bvP/9d
      lU3rDbEHfvnItj0bf/rwYwEzitqdc/MLJw4erGtrfehXj6C5iSmOPvzEE7uuu1bPh771w1+1
      VpsfOTgiMNn3vP+9FoPBaYYPH+2saGxrLjceHktcvW0tgJEde/bODhy31W1gIqPDA4Oexs1V
      bvqZp5+YXwjBBvNE34mJmUWxkO4YmW+sKR/tPzE8NhGJl2Q2Mjw2mkjmMwUpHZm3eX2F2OyR
      jp6R4WkmPT88MaljtunB9ompIKvitQE/AGBybm6k50hwasFVVQdK8cf++wVZzA2PTRAm21jP
      8bHJ4RwPMdF4upCbD4dEFcnEFkwONwpD6Zm+Z48PzASn5+bnbVbTsaNHY9kiIuZO9AyMBOfz
      semR8SkIRY8fOe4qr6LEePdEhuNyFqthKhjyuOzneLSlIltgWAjBX+upWg5OnjoZWWjatLPC
      bZoNx3btvcpqgEZHhzRNDYXCAABVVUjaZDHRAGg6hNlsVhR55beYOVCNJ4YE+2qfEQBdknSH
      02G3WiRRNFqsNIHKslrTsHbjmhqEdu3fvupQew+mqoMj47TTRtHufXt3Bxqbdm5olXkeQQmb
      zaKpmtVqc7tcQNcUDbJZrZqqABjdvPuKMhMpa0BTZQglrFazokAWu81pM6oSPzKT2L999ctH
      u5dKpalSOps//OR/HF0A6yqM7rpN+zbUR+IZoGuoybV318bQ1NjobFgoJBfixe07NgFdTXHa
      7p3bTQaFkai9uzcpEl5ITmY4CYPA4nx86569LgOuIfS+q/Ym50dE1bpj81oCRUolAQCQZxiz
      q3xPq3M6Iaqq0rJ2w8zYpCaXwjOToiGwe2szx4pyiTG6KxobVxfCY3FGAYqk6boiCJv3Xem0
      uBorHYPDIylGDIVDc+HE3n37TISm4uZrdm+cS+TtJlJSNACAwBbcfsfzB57DcPhIR+/Zl06J
      46NTLMvKyvKEJ3uVkxbIZLFNDnbLiLGh0jfQP5Djpf17dqcy2YZVLRYj6SirkRJTJcze0rp+
      78ba7tGFdevWNdVX+yur/L5yMTLW9o4PVbuMAMCrW5q6jx81uCp277syNt5la9y+d2MjaTBV
      VfiMVkc+k7viqv27NzSdGArf8r53WYxURU0NRVK1VQGDhR7tGUEI5Kb3f9htM7nKAi6n97qr
      thxr733vBz7ispk8/gqbkQzUVBuMtgob2juV+cgH32OiiOraGgRGETH1mwPd//j//t5owDHK
      VOkkB8fmUqk4RWAw7XLhpZhsvfEdOzBYD06NxpNc26YtPjMmwubmxhqLxYQiMAmJ/SNTbl+t
      zw4Nji+WV1ao+UigbYeFRGx2U19nF2Z2Vgb8JrMRBqQRL43NJ8t9zhzDO+1WCIJcDrvJZEYI
      o5lEMZyuqnTmWGn1uo0YH50IZasqq+xWi93lMtGUlI+56tdmo/N2hwuGUdJoMhC40UR7yqoR
      seApr2mpC3R0dpsdZRVlXrPRpOuA44qBigoCRWDC6C8PGEmiob6uKuA/eztBHxscUiHYaHHQ
      FA50dXx4wup2zI0PJxnJYbNcqhbOGVphJSbT3TdU3tBa478gVwAAcPzo0a07d73lQSXhyKHB
      3fu2vMlf6xpXLBmN510HrsYzWa/rXMOQrxEJhcsC5W+yPOc4bSTi85e9hTbieVGTyVQ6GuMV
      taJ2ldtGAwDGe/orGv0LGQCKybrGZvwS1WsrqzL+Whjv6a9cHZgOl0Aps6plDYZcGgGdPEsu
      HSuKF1Ff/uDb/9J74tAPf37gvCn53PR37//P8yY79OgP7/7pH954fKb9wEOPHzv1yHNP//6V
      2L+Zic/d+/CFlvgsFPLZi56EqQqjYzNn/CaRTp/xuK6p+ULhtIPJcPTce4ssoYnFAstEopmL
      KaKWz78uO391JUE5HLhgcZej8CVzq092aCIImktEh8KLTW2bpMzCVDTfUFvncdnG2p998L8O
      EibP+69ouPeXzxGQfPePHvLhXH9vD2KtPH6os/fwI1/6xrd/96N7WRl+54dvvXpz49zA4Qce
      ehzCTV/60q333XEnYaYw+8b/+vG3uuaY+Wjs7i98/Me/eBTGjV/82p0VNuKlJ/7jqSMjtvIm
      LNYJNdcAoD/64NdfDGrvv6p+Qm+gh/9I1dS+cOBA/59/c+Pf/+PzD3/HteYGMTlQZOJPvjj2
      nms3DB0/9vyz1B+ePWp0Vlyz1vazP/QiKnzfdz5/3933A4z+xD9//rlff38uwW1+x99+8Pqd
      EADB/nZD7SZmutta1RqaGDA6y8Ri2ldW57ZTmazMpGeLsLXORwfDhTWr63SldKKjy1JWbcdl
      XiO4VMjkq6/2O5OTJ4bjLis1Hsnrq2rcs6FMS3Mjn432T4Q5WdjaWDEeyq1dXStpqCZxMFCH
      JhY2b1w7Oz9nI6C8RjcEnMGJCdjs9VsNmWR0cXq2oW2TlFmciWQqGlaXO8wLweFwTtu6oXmk
      vwtQNqOcGsjhu5oa5yeHsrJhVYVlZGLOXVEHmCjmqHxjgDYAAADy7PTC6tZGDMUQBAYAWBx2
      AEBZVf2lks4rsnnNiV4MDvQPz7Rt3TA1NJRISWvrzb3j2doq72OP/PamT30FDx9NybS3aVeb
      i9G8a6u99umJgR3btklU9VUt1Mhc5OXuiSq/y2D1r2msfO53DwULutWAkHqRs6353Iev6Oub
      i8ayt99z11TfMT61MJuHbDRaWdfqd5L/9atH/+nr3xk69AeHy7ThyluqnAagSqNTCzUBR0a1
      IslZo8thr93x2ZvW/ealyc21tgSHamJ687a9C9OTe/fuWiyRpbHDRcKJA2C3YIGt7ylnptIc
      a2685ku3fpCQYg/+5JGyigBCWDeuWwUDYHXaBrp6BA0D+bi/ZcPcYDdK09lUwevGeo8OtveN
      5lMhHScLRTFQ7u/rOt68cftAb2cqHjFAQudYdGF2alVzixUtsYQ9E83XuJDu3n7EWVvhMp3o
      6t62uW10Yqa/uwNIPKNTychiOpXrOXEIgvX5BIcqKR54HQgzOxeGrZVkYX5oNhFLhdvWrhse
      HsgUtZYysmuBbyh3vtzescaH90xEHDWt3EKvvazOYDUsdnQXTIEKLDU8vQi7mvLhCaGYhQib
      03bm1cqLE4PHekf8FdU0uYx7W50ymIoTLnfAaqExBMf0XNfgFIZjAIDr33H1w9//5hjvWVvr
      sZgMtNlGYjAAwGyx4QRpNRspo7lqza6dq8pEBWzY2AoA2H3Du2wEwK0V+97xTnXmyHd+9BvS
      7tq1qfzOr942upjb9Y6bHYSGmbyr63wA4Fdfs+3er/0LWb6mwuMmURgAPRYJS5Lkb1i/eOTR
      CdlY53MMHHnyzh///qZrtkdjcUkUzBZrLhUTRElSILvFdN3N70WVkqe6sdrvMRlIk9Xeuuvq
      8IlHv3Lb1zPAdc2Vm0qivH7juuGeblUDCEbTOuOvW+302Ps7jqWLCoHjBMS/eKi3Yl3rmuaq
      8tpGr83E5DOaDnxuR8fRI4ygllVWV9U01Pjtq5rXECgMYIwkaIWP9k8u+iuqqv1OAICJgI4c
      6VARYsO6dUabt7G2xo6ULBX169dtIA3m1sZ62uxiE1MToYzVQi9ODs1kRafZ4PQFHDQJEwak
      lOsdnsRxDABQU11F0pTR7pzu6wglOQRBMQQ1OP2l2PjgXK7c5yj3uVEcwVE8mz29WnwVlbBV
      3nz99kzqrU7mPzdndKK1/hPHUoXi6g27y53na9RcILp65NnHnj3SG2je+akPv+t/chLgXyDJ
      0Bwwety2k/3RuqYMdJ9IZriWrbvKzhtQ7ILQxgb6OFGublrvsizjdI6VVthlyRma8cvEWb1x
      TZFGxsdOPbI4NyOreiY0kxNfabSMDYycLZTd/NTg6HTs9cekIwcP9gwH39jiSUbDA30jSy1A
      Ibs4OJvQVamnr/91iXQ9Go6cJTc9tjD10ot/7hsJBicGeBkAoIejZ06slDKRFH/qkZ6jXYvh
      6GnJgoNdL7x0XDj7GrDhgZHXfRbTJ/peN/Q7MPz6BG9grK+vIClyMfPnF17KnGWnx66uI5HI
      KxcyNjQgXHDMLoHN8zJkMpkwdHnHek+2wnKx2RMDQYSkSTld1El/eW1mcXiMsOcSoe3bNkEA
      2EhlaDpWjIerhVLXXCyd4RtrA/1Dg5sqTIcXFWZukqKNfjuxwBLX7NkQmp+nHOqzzw5pADIg
      Euqs3b2hMpvhUsIsM99DOCtzWVZiwlWtu3vbX26or0fJVzzBXGRmJGoI4Ex/cNFOaFORrNNb
      CYoJAaJQVQgvBJmSUltfFxwflxSwe//VZgJRRX46ktuz74pMMj4XnJlaeN7hrpDY2cN/et7q
      rVzT5B2dieSzzHveexOBAFVi5oLTf/5T2FNZVmNHFhJMLJQrwVp8fixfFBXKe93uDQCATCqd
      SzIM1/ji0U5FYtyVTTMj086K8oAVhJNMglFWV7iPH3quyAuoqwpmEqrCCWT1c88cQHDS5zTO
      5hBKjD0fnvM2bl5T4+449BwraqjRGl2Ysdmczc1N4+PB6GLsxuY1QFMoqxPX2Oef7eSyTM3q
      OktlYyLYa8GJcI6PpzOappWVlalCLhqNMLqRW+gg3XVMhuG49K5r3+czn9FBhp0eL0pKJjNF
      LKcHDU61QEwu3bB2qxGVMbPnqv3XFJJTFk/VxIk/WTwVsWhUB8Dka8iOHSScdelsfuP2nQ4T
      oQNQZBimwGAyM58o5JIJ3F6OllgNAGegxkNB3oa2KhvMG3y71jcBAHyV9W4rgplrGl1Uecum
      +nIHYSDWbttnxnRdf6U/JptFWsrQQ0PRFpd9en5OkKR4MoXBqgKhslhiZXTXji2wyFnKGhp9
      dL7I5QoChCAllpEUNR5LEEbb3n37xWJCluWW9dtr7MhCLL9u6w6XmSixhZKiAQB0CN606woT
      UGK54tYd2y1GQpblogzt3rYJ6GoulwMAUEbHnl2rx/tH6fKW1vpyWYc379hrV5REUd6zdzeF
      6Lqmyohh+6Y1msBqBufGtlWYzE6HUkwmqZn8hMRSzrL9V2zPJTIAaIJG7dy6TpelupYNTTWe
      2YVQ3ZrNVT47BEA+y3jsxMDQuK2sqbm2HIa1TJaVRD2T43fs3G6iCFmWAQDjQ4Oijs5Njpr8
      DY1usrx5Y22ZIzo/2T0SPNNjhQxGQ39Xe3/n4fHFs+4ge0k46QPpmjLU22UNNFlJYLLYs+kY
      ipN9nb279l+VikV9fj8EQC6TNTvskCr1dnZafTVOC42C0mAwvm3T2sWpwYJuqfcaZhN8a1M1
      yxZIyjQ/3qfQPo+NttusACj97R2wvbzSbbXYbcGhbhExmkg0OBuua2gwGWmmkK2uqcml0iar
      MZlmjDhE0Ia+7r6GtnVAkhGgyjowIHLf2MKmzZsSsyMMZKkw6qqj0kHCIl/o7u6vaVlvQhXK
      ZM9lU7qmEIQJUkqE2TLc22X2VOKQUhaogjU+x0oEaZSKBZOZ7Onq95TXmo24AVX6xhYaGmuL
      nFBTVR6ZHZuKsDu2b47NDGdEpKq8HMdJiWOLXGo0OA9I+5Y1jUBmxueSDauadDYxG89XVTco
      hXCEhVqrHZPhQoXPabdQqZzocpiZVHhwOrG6qQqCcRxWAE7PDfeppH31qjoUKH09gy0bNsRn
      RjIltGlV3cJYn8HbUG5FO3qGyqqrzSTqdHpS6bTL6RSZdKIEBdy2yaFeGbfW1dUubSJ7JsS+
      nqnqCjrOGlfVLmMkwnM50bqmZgucw7a84R3+dyGw2cGxmZa16862Tc5fBsrE0Eg8EYvkSvv3
      X/M/5ERz+RQnqgCAWCyiajoAAIKRN60ekcnmS2dwDLPp+MmNADUlnsy8Mgv9VDQlnjxTt72u
      RSOne7tqMZPizuzKc7lE/ly7HarDAwOyCrhUqqgWE3Hm7ClPQprsW7Zsogm0mIln87lknj//
      b94G0KY1LW6Xd1V9ncm4jNGlwKk90cnFia7hGaYoUAQC5FJHZ0+el31ux+zkcDTNLgZHU0VN
      LeWHBwcKIswkZhI5YXZiqCAhSj46nypJufDA2JzDZunvbo9lxWJoZCIPav3OyOx433DQarUM
      9LTHsqJUTOaKqg2XYgyESanfP9uhiqnFxbjD450a7J5PcmVel5CP/v7Z45CY42UwNtgvQGQh
      PjswNAobrEAWuFysb2jc4nAGh3qC00EMBQnFYlJSHQPTajE5MhX2el2jPR2T00HUYAYQNNTT
      WdJxNrEwMDxmcfspDI7OT/YOTxpp+OiRkZa21UOHnkuh+vix0awsO2m4o6NTx83J+TFGxROz
      w1OhrN/vUUpMV0dHilUshNZ+ojOZL6XGOmLAZMHxiaGeTElX2UTvwDBpcY33dVB2P3XeKYPL
      Duzy+lxWKDjHuJ3LuOnMSQHlEmFD2WooHwpG4tlkfueenZMjw9U11UODwxZS7Z2IJGNRTRSa
      t+5KTYwuMnkHwg/MZdPxsNVCCwp64sizKAIzRVHBKKOatTrLzd4yu4EYHBnd0tbYNzioEmaj
      muUBxqQyC+F4bWO9gSQUAEul4oam8sHRsZ6xRSk976hbZ6NxBYB8KofrfM3areHJwUQqt/uK
      faOD3flULCviO7asZUJB3lxZBkVSqhkibTg7V8TMHUfaMY3N5HKYr9mrhYIJdn4mvnbnjuT4
      cCxV2La7eaQnUV5uHpiY3dJaMxpK+ez+QMAJCYqt1p2LQyalMJvLbNqydXx4GIYUSGEOHhlD
      pTTmrjfI2UQJQ4upxXh6w7Ydc+PDdQEfYjKM9A5Urd0pJscXYql123YHR7oVoWhyBkyG5Y2J
      cQEoYwODkRRX21iDX6KB9zNyUkACm+4fHFdhwuO0uK10/9CopOP1tZUlWampqiyyBau7jIDF
      0Py8TJgqfK7KiqpiIe/wVphwLcPKDZVeQcMa6hpoE40BgaKsMGU0k3g2Nj82E66ubbRYzRgQ
      YNxU7zf2zosbVlUAoDFF0WI2uG1mDjbbUBUx+ZobAjDQmGLJZrb5PJaurl7c7NHZ5Hw4YnJW
      GAgC07ixyVl7oDoyMRyOJbwVtThlNmMSZS+34bKok2vXt80P94dCC9byeq/HOTnYh5icfrfD
      7bXnkoKnzJ6PzY8Gw7WNjZAKnC6ryHGYlcZ0moJkq9fc1zNgcpahEiOiNr8FA4StZXUdrMgo
      ScOqYHNaBvoHORmu8Ts1iiYJ0+LkoISYKv1ul9tbyEZ4hkdxLJHi3a632XeMR0KiLBhMHiO1
      jC35i+uJngxON9bXvcUsU/OTir3KZ76I/vXpyWBd44UOI2sSd+x4V0lF916x+wzbif61IA4O
      zDbUWMNZtL7qgmbPvTlWhjIuV5Th3oGSqkEQXL2cawv/et/Qyx1IUSSgS77KVcu6MnVFQJcr
      KkDp6oC3xAvLms1fcm/YCm8eRdZ9PjurIHVVjmXNaMUCXZ7MTk7Mx9IVZd7/6TC/K1weKJJY
      zGV6enpXNltZYdnRdV3XdfhNLdVY8YEuS6RoJAVBBp//9BBmbDaxmOJWNdScGj6FZdkjR444
      nc6ysjKPx4NfTKDLC43OscL/KuBkZDo4F8pm06fFiR7ubofNHo/dAp0iIBzHKyoqdF0PhUKD
      g4OpVEpVVYqi0POHsVqpwi5b1P7OThlo/up15e5Xp3NoUjRZyMRD9S1rybMsbVYUJRaLRSKR
      eDxuNBodDofhFHAch15lKf1KFXa5ogKUrvbReV4A4FUBwSiXDmu4CT/7shgURQOBQCAQUFU1
      nU4zDMPzfDab5Xme53lN0wiCIEnS5/OVlZXRNL1igS5bikwmkRerK/wX15LXdV2WgSiCUglE
      osBkBE4noCgIx3UAFEURRZFl2Wg0Go/HKYpasUCXLSiK04YLaljpPA+OHgPJJEinQCoF+BLQ
      VKADgGFA14EsAxTRaRp4fajPh/p8tNPhpQyqy52OhFcEdLkij40GbTZ8TgA15WcLJ/0qggBi
      MWCzgtoa4HIBsxnQNERRAEGAruuiCFgW5HIgFgOxGOjqAuk0QFGEIj0keRkK6I//+aNh1vvl
      T96sCMx//OTBmXiuumX7P3zwb44c+M0LHWOE0fGJf/xHHw0evPcOx5b3/+2Va9/u8i4TENCV
      Ykkz0uefGwnZ7eBjHz3LdxBEkoAkgcsFGhre+P1l2BN9/Qc+QAkiAGC650Xnhnd++9vfcgiL
      s5ls91D4K3d+4/r17u7RMISS77vlJu1Ms7YvC9RMJkcRGFPUjIbltRGXoQV6DXeg+lc/e4ri
      2npmUlcZzbVu+Mv/8qVSUf76fe99u4u23OjxxdlwgjO+Gllx+bicBWSvXPuF/2f+2YP/tuud
      nyAKU1G8+cff/7KQX/zZo0999pMfeLtLt6ygzevWe9NFo4lC0eVdmXo5CwgAIHJJumrHtdtX
      aUwoHwtGk6nIcCdlX8bI7X8xaF3tx+xWjPSvb6tbximtl6WAyHXrmgAAAOjJnPrRD70bgQBi
      CXz4XTv/+ze/dFU2f/jdVwAAKIunsfrtLeeyAnl8ZW4XwS+zm7vSkXh5IoulZCqtI4THacOw
      ZazFLksLtAKYC04VRJlCcaPZYl1OL+gVAVksFqfzQqNCr/AXCMuyyWTytY+qIrPZDG8wuyUF
      LOeGc69UYYVC4Yc//OFrRwmCkGXZ4XCYzeZYLMbzvN1uBwDY7fZUKsUwDI7jkiQtDcnqur40
      ugadKfq5qqqRSERRFF2/oFi6JpPJ7V7GaBKvwfN8PB43m82nvTmCIESjUZqmcRzXNI3jOBzH
      EQRh2bcUbJCmaa/Xq6oqgiAQBL32vDEMUxSFpukLv2oIgt54Mz/5yU++xRK+OV6xQIIgPP30
      06XS67YG8ng8tbW1xWIxk8lomlYoFFpbW+Px+MLCAkEQgiAAAHRdhyAIwzCapgOBgMl0+jJs
      SZJCoVA2m12Kc3M2lmbEYRim6/ratWtPq7Y1Tbuo+XJLpTp3Gp7np6enVVVta2t77eSapk1P
      T6dSKZfLVSgUzGZzLpfTNM1oNBaLxQt8B84IQRCtra1TU1NGo1HTNJ7nGYYBr6qBIIj6+nqL
      xaJp2rlLzvN8OByurq4+7RZ94hOfeNNleyuc9IFwHEdRtFQqybK8dFUcx0mSRNM0TdOjo6PF
      YrFUKhmNRgiCRFEErz51XddlWS4UCgAAr9e7ZKtOPa3D4QAAJBKJc5UDRSEIqq6unpmZkSTp
      1Luj67ogCIYz7Xf8RlRVzefzyWQSx/Gl1/psyqMoKhAIhMPhZDL5WjJZlnO5HARBHMcZjcZM
      JrN0gUvF0zQNAHBeaZ4RURRHR0dLpVKhUDj1DEuiFEVxcnKSJElBEFAUraure+OruIQkSQ6H
      4xJvUiZo2JQAcEgnIJ2AdQLWCUjHIQBDAAIAAjoENKCpusopXEyIpcU0AiEojKLQq1POUBT1
      +XzJZFKSJEV5JVoKx3HDw8OrVq3CMAxFUV3X8/m83++vr69Pp9PFYhGCIJqmeZ4vFosAgEKh
      IIoiSZKnPexkMsnzPAzDSw/gjCzZ9lAoFAgETvs5BEEXoh5d19PpdKlUSqVSsiyjKMrzPEVR
      JpPpjBqCIMhms9lsNk3T5ufn/X7/0isEw7Cqqrqua5q29HfpVui6jiDI0vTh8xbmjCwZ+LPp
      T5blJSMtSVIymVwyVDAMsyyrKAoEQTiOYxhmtS7D/l8QABCAWBVOa5CgK4Ikl4SCwsQM6Sid
      iRrSMUMmB+ULQgGRIJ/kdCk2AIACqQpQXxHQks3XNE2SpKX/DQaDIAhmsxnH8YmJCbvdLklS
      KpUym81Wq1VRlEKhUFVVhaKoqqqzs7NLspMk6bSqStd1q9Vqt9tnZ2fPISBd1xVFsVqtLpfr
      TbziiqJks9nFxcUl64hh2NLlTExMuN1uq9VqtVqXzOrS30gk4vV6IWhpb0XI7XYPDAxQFFVZ
      WWm325eMJYqiBEEsuXqvvVRLGlLV5d1DKZVK8Ty/dCEoitI0vRRqE8OwQCDg8XhOeyXeSt0K
      ABBRuad8LCbE4kI8LsRZhS1pJRzCPaTHS3g9ZGUrsdmp250ls1EggaRDig4QSEchgL5ahUmS
      NDMzYzab3W63qqoQBAmCUFFRYTAYYBimKEoURRzHM5nM3Nyc1+stlUpLfrHFYpFl2efzxWKx
      pdv62r1eAoIgh8MRiUTOcdNhGCYIwmKxVFZWvjnjnEwms9kseGXwmFyyZ6IoqqoajUZjsVhV
      VZXP55NlOZ1Ou1wus9nMcVwymbTZbIVCQVVVTdOKxeLExMSSgmVZNplMxWJxqbmwlMuSyjEM
      W1YBLUl/ySNeyrpUKi29VIqizM/P5/P56upqkjy59WI0enrcrYuCkZmXw8fsqLMMr1pPb7Gi
      dhNkwnVSEXQYhjAYRnQIRgBkgUp2CEYgCAFAB7oGdF0/6QOJoiiKotPpLBaLNE1nMhlRFG02
      myAIHMdhGLbk5XAcpyhKJpNZMu8IgsTj8VKpZLPZUqmU8v/b+84oSa7rvPde5erqON0znaYn
      9aQN2MWC4oIEITAAIEFSAk1RNGmKysG2LNE6x7ZkSYeydXzMo2PLIi3REkXpyDq0GE0YTCIR
      RAQCJLBIG2d2J+fQPR2rq7orPv+4O7W9k0MPEvH9AHZ7q6tev7rvvnu/G55tT01NmaYJ6xvu
      XKvV8vn8dqPneX5gYEBRlIOVlTSP37IsSim8ctjF0PqWMTs76zhOMplcXl6WJKlYLIITBP6B
      N1TXdUH9EEIg+25zicLO3sBRwJNghBCltFQqaZo2NDSkKAp8CFbmgeGrh++89DHqUoSRg3AB
      oxJjEtaiLsIYuQ51HUQpRRRRihBFFKHr84WbjGiMcbVaBddAkiRKqWmaKyvX+88JggB6EnL3
      YXuGhRiJRNrb2/P5PFjZlmXNzMyYpplOp0GdeDvjlqNPpVKBQOAwv980zUKh4DEF3j4FP4rj
      ODD5agUZnAAAIABJREFUi8ViOp3mOK5arTZb9Jt3TIZhEokELBL47qsNhmHMzMwEAoF4PM7z
      fLM2OgCkEHPy/bLdqNtG3aprpl4ztJpZU+uVMsZEkAXC8oThCMMThsMMhwnj2pZtGo7ZuC5A
      DMPwPA+TBfsXfO5NrrcIGIZxHCeRSCiKAgyKJEmmac7NzcFfA4FAoVAAQQRsSaWDqohGox0d
      N0KbruvOz89HIhHDMCqVCuw1u/7+tbU1GDAof69sABgXjuNSqRRwV5cvXzYMY2FhYWczixBS
      LBY3kBqvHsCbqtVqkPEOPs2evkmd0YsXbCF0YrC3eQJW8pW/ePDZhktMF5uIWJiziWBhn006
      XUQQRrAY6braoQix1OFcgaXr2UagJMAW8aTnxnPX3XWEEMMwPp/PMAx4tWCQgt2jqmqj0Uil
      UoSQ9vZ2z5qRJEmWZfDUPGQymWg0Kopi87t0HKfRaFy9ehU2o2q1esstt+xsFbmum8/nXdcF
      dSjL8rFjx+bn50HHYIxN0wyHw5FIZHR0FMawq5FumqZHk76qACsklUrZtr24uCjLcjKZdF3X
      2yh2hq3mcTjDaauW4zafWBgIBd75rrdyBAssFlkisli4/l/MQgEiuPNNM2I61LBdw6Y3vDCE
      kOu6sOyAHkVN5j14W67r2ratKEq5XB4bG+vv7w+Hw6qqSpKkKIppmq7rTk5ODg0NNTveDMOE
      w+F6ve55YRjjWCy2WfGyLBsMBmHvIIREIpFdDaOZmZlGo8EwDAxYFEVKabFYlCTJcRwYc6FQ
      KBaLnn7ddaIPLDp7ITAPA5Zl0+k02JeiKNq2Dcu4p2dPeQWE4+q1CjY2rg0fT97Vt79GnBKH
      EGKQRySCwod34G0EHoFm2zZQESzLDgwMSJJkWVZ3d7emaY7jZLNZjuN0Xb906RLLsizLFovF
      cPimRO5wOOyd+YAQYhhmy6pHjHEwGOzr6yuXy/F4PBjcqc0gpXR5eblQKMDIMcaCIMTj8bGx
      Mdu2XdeFWATLsgsLC2DyH7VSgbo7wzAO/yDPhmv+EFg6+DAWi9m2PTs7G41G92hEEqktHarZ
      fC/XuuOSiDdcx3EUReE4LhAIeEYo7FxgU7uu29HREQwGBUHIZrMQLIPlDj7n8PCw3+/3+/3N
      Zg1AURRPpCil6XR6u7JZSZI6OjoGBwc3SM8Gz9l13dnZ2dnZWcuygPfjeX54eLhWq9VqNVmW
      Q6EQvE4IFBw1c+ONyvOMDgzgKjHGzbeC1xEMBhuNRvO2kE6nPf9mL4gluxLRVnb/vPEWWZbt
      6uoqlUorKyveYgWXtV6vU0oDgUA6nYbPMcZgMhuGsbS0VK/XBUEYHBwcGhrSdX2zcGCMU6lU
      uVyGOx9gljesRQiFelJu2zYw4KCQYMOVJInjOFVVOzo6pqen9z03+4fruhAJOfAdCCGJRELT
      NKBIwGiDNZzJZDbv6WAgbrAvX07c9Kbn5uYgZAhTAKFNCI0hhJLJpGfPetXRgiBAlKPRaIyM
      jAwMDAQCgS0ZZ0VRstksFMluF+jZATBxQM4CfbzhAsuyDMMAZek4DsRYent7r1y5Am7XIena
      veDAj/DmPJ1Op9NpVVU1TZudnWVZVpZlSml/f/92vjrQmwce89rC2HNXZlmC4l0DJwe6vM8X
      xy/88OJUrVZ57/3/vCN0vd29rZcfevzp3oETA70ZhmDULEC2bUPERxAEv99frVabGTOMsSRt
      0TS/mXHx7O6rV68ODAxsoOBAaYXD4cOYCOCZI4QIIRBc43meEMIwjGmaqqpGIpHe3l5VVQVB
      KJVKV65cAX4I9uJXlWMFaTDwi2RZVlXVdV1I6gDGubOzMxKJALG+c6OMw3Cw4Xj3vcmBzb3I
      E73Hb2k411aqnvQghDBGA8dPBVn73Avnf+LMaZbBG4dFCOF5HnIYILLoMUATExPHjx/f4FTb
      tt3Mky4sLIiiWK1W8/l8KpXaPFyGYfYYV28GuPSFQqGnp8fTfIqiMAzT0dExPz9vGAYkAliW
      BVeKomiaJowW7OtXFa9DKY1Go/39/Z5JAOwJxIAnJiZ8Pp+iKLBod5YejPEBNLqH8srM4z98
      ySJCT//Q2VND3ucLk6NTCyuMy5TrVmi9VTkjKOWF82NlLRhLYYLR5sJCSqmqqiDyjuNA7Bf2
      MlVVl5eXa7Va8/Ucx6XTae+vHsmby+VaaLdijPP5/NramhcSIYQMDw/H43EvgiEIQrVaBXPe
      Y8m9zfTopOcA8XlKaTgczmazsBeDDImiCEJ/6dIl0zTr9brPd4Sn7HhwHMu2Hceltn1TiGa5
      qDKmcWo4OZ27kafmGKojKg2D+Ei9brlou5xoSZIggFcoFBBCnhk0Ozs7NzfX3t6eyWR4ngep
      YhjGoxk9QARtZz98XwB+qHlbxBjPz8/7fD7YCNra2nien5mZgagqiBTIFtqK2tmLVbTdd5sv
      kGXZy8SAXXXnjRLckYGBgS0J0uXlZbAEWJbdIXmhhWhL9vb0qkOnzgSkm0yOod70tC+4WDBv
      u+0GI8NIoTaRCQymkRj28QRtWdoM6hSYoQ1aBKZmdXX18uXLV69ehf1renq62bwA6ohSOjk5
      6TlKh4HrurlcTtM0URQhDOf9E/Af4XB4aGgIkto8BQks4pbd2iilfr9/c4AFiC6e5wVBgLe7
      HV/VDMMwYEiEkL3klbMs29HRQdex4V89Ki4Wi/E8/zK4V4tTVyKxyIMPfntmudj8+fjk5OzE
      COXk5tXgmtr0wsqFyyOKIiOK0M618V5wYEOwFySsWCxqmqaqKpCHIEOQLiPLMmRELC0tgQ47
      DCDRh+O4np4eTdOAtocwp2EYxWJxZWVlYmLi4sWLIyMjmqaBRgR+yDO6N4wfQjfNH8qyDIse
      4hgsy4qiCFTkDmsAbgWWSigUgoXX/K8Mw2y2GpeWlkZGRnK53OYYFsR2IpEIWJB72cUopZAo
      cTC0p3rnpufue+998fBNtqnEC1jwd8bkatOZa5gwHEHt6T5sqA5wKHsZXygU2nIhlkolyPcA
      TwdjDKED8OYgMLK8vLz5i/uFbds8z8/NzUF+j67rhULh2rVr+XzeMIx6vQ5xEi/Vy7Ztz9Xf
      cqeAdErUxNo5jmNZFugSYCUAoFC3Gxi4P5qmQeRkQ1o7x3EwKtju4UOMsa7rtVptYWFhs4JR
      FEUQhK6urh0cKxhzo9HwlPFh0hm0atF06PlzT43P3ZRzHO/sPj7Y32iYHNv08wmXHRjqjodt
      dJ3M3r0uzDCM5eVlhmG8XGm0bkAUCgUv8gpmkyzLuq57PzISiRw+e1eSpBMnToiimM/nBUEA
      xb62tuZNHyGEZVnP3EHrTj5EUiEgD//qJSWC1kQIQfZccx4I3MH7g2VZgiBAENAL9cPjQLuA
      o+q6brVabZ4cT0CBEtwshRAf3Pxju7q6dk7PgLmFrEu0o4m2FwSj6XvuyW5241W1itDGXZ46
      lqrVBeFGndDuAuRl80CiFpgFwOUYhuFtBKD26/U6bN6O4wQCAY7j5ubmdF0/gOvuAdR4o9Fo
      a2vLZDKqqk5PTwOdCBeIogi52BCTB2LNI6nRerKKbdugn8AwAi8B7DzY8rwnbrCvQQpFUYQl
      BN+Cm4PSAo8VfjVaT3uFJeept+bMRnhEJBIZHx+3bbtZuwuCIAjCrtkmB57MzWD5rYW1u29o
      84eEk44dO3bT1+F/sEyb7VPPoYApgAuAskulUisrK6qqNhvO8OYkSYL8+a6uLpZlx8bGVFW9
      du3ayZMn99IzdgcAkZPL5SDTCDY1QRAgbxXCXgghj3YDahG+CzsayApc5mVrNHv73s/ZYPSA
      NICgIIQajQbQBM1aCq3XBYAQwxr1rnFdFzQZ2Mi2bYP2isfjG571qqI694IbwVSwOgGgJCEI
      D8aBaZqQINzT0+P3+6EuyfMjYMUD8Viv1+H9Qa700NCQ3+/fnGN0ALS1tTUrbYZhOI4Df8pT
      PBCvhlfusXAcx4FLD/cBgfP7/Z5Me2RMM0DXejsRJFlDydEGX937evPUIYSaTR+QIYwx6A/I
      ZoGxoQORSa8SbK0MYcv33panhKrV6uXLl8fHx2u1Wl9f39DQEMwR8NewtUEMYWRkpFAoBAKB
      tra2vr6+w3NiwLd61iW8CcdxdF1nGEYURUj+B+sERF9RlJMnT0IXbYiRwW9hGGZgYMCLLjEM
      E41GNwtQMBiE3Y3jOI7jIEoIorOZ9wJ4rijov83bImhBWZahsTdMi2EYzTH21xZ23009Yw2t
      L/1IJAJ53SAu4KM5jmOaZjAYzGQyoKLi8bj3rcNoZvA4dF3f4CiBiCCEoIAQhB7C8qAdY7GY
      z+dLp9OBQMCjdhBCwWDQ7/dPTU0BCwpuI5jDzbtYsVgEt45l2Wb/HBTJducBgEYBs7rZKgcN
      7boux3GDg4Msy1ar1fn5+Wq16rouLIADT9EriI12yWbuFcyF5vUB5jP4XBzHNRoNsLJDodDA
      wAA4Xy2cDkrptWvXwOZlWVaSJEJId3c3uDaiKC4sLGSz2e7u7pWVFSCFgZuBCFEgEIDrZVmG
      zLJKpWKaZiqVAgIC0i9B43Ic5zkK8BM210OCVIEo0PVMTrp+WAk4axuuhzuHQiFJkkKhkCzL
      pmmurq7CvG0ZpX41g7r2uad/UK5btk1vEiBKKXg0G79ws3ZdWFgAG9YwDC/9IxgMQiS55SsJ
      xBckFd53JpMJBoMQykgkEizLzszMpFKpUCiUy+UYhlEUBVr2a5pWKpVEUezo6KjX6+AfYYyn
      pqYGBgbi8TjQVI7jgOjA7wLJMAwDlNaWhRngnHrWGLhamy8DDQeOVSqV8rxRQogoikNDQy0u
      Un5ZMH/1JS4+9O7+hFVXbxIgvF70vgPwetoGMLYIIbAShoeHj2gumolKSmkikQiHw557jBCC
      EpF8Pg9WNlgYly5dgt0BYwxpigghUGBg2SCE6vU67E1g3LAsC/4aWq91bOYpNs+D9+ctRYfj
      uEQiUavVRFFcXl4eHBxs1jS2bVer1dfotlXV9ECnD5m1J596YmOFLBh6+7odz/NeCdhRwFMJ
      YEZAtTVCyHXdZDKJMV5bW1tbW4PU4EAgAJrDYyW8Tdnr/gFJ+AghyLbx7u84Dtgi4DGhHZ0j
      j83b0qCmlAqCwHFcPB5vb2/3+/3NPRVM01xcXAQlekSTdqQYOnFq9JnHnz0/Si3nJg0E/vCu
      QeDNPNvhE4F3ACFkaGhocXFRkiTIM5ybmwN+geM4RVF6e3vhLBmEUCqVAgHKZrPQW8MwDJZl
      V1dXQXeCRZ/L5eCNgsYFP45S6u1KEGOHZOrNZg2gu7v7gx/8YL1e/8IXvlCr1TY49rVajRAC
      5eE+n29tba27uxuqXScnJzVN6+zsPLpJO1KwUuh977+vqtaEU6duEqA9ZkY2Sw+ltL29/TBE
      864AC1RV1WKxyLKsFz/yHGPc1L4DfEbgvn0+n+M4tVoNqkcgoAGMouu6Xi0iQgh2OnCd4CZg
      Snvc4JYC1NnZCb1vIpHIhjQpQCQSgSgVhLd0XZ+amgLXtaen5zXdEo6wXCgcRp4XxvM8zEJz
      RInumAMKG0omk9ncLKK1sG376tWrsMQ3MwKlUokQEgwGoTvT6uqqKIre7kAIURRleXkZ+myA
      8w9hjQ1P8QgC2OlABOFx2+1ily5dAitny4AxxnhlZaW9vZ1l2WQy6TjO5cuXoWipmVN4reMG
      FRuPx5eWliiluq579KtHhXnCBCvYa82RSCSOeojQzAve64bGBhA3mJ+fX1paSiaTPp9vZmaG
      Uur3+30+HyEEwg7AIaH1kAtEEpplCDQZuHgQ0QMTB7Y/z0JqJnUwxuVy+Stf+QraiujyCPp6
      vQ5sAsMwyWRyS8bylQJuKgY8MG5sYYFAoFgsQhcOmCAoi4FtW5blVCoFVF4qldJ1vVQqFYvF
      /Taf2yO8ILbjOMvLyx47t/kyeK9QVO/Jfb1e9xrIAS8MIRqI20MB08LCQrPhAr/XcRyIkAOV
      DFYR9EuEP6N1cQEVsqWPBsY1EOLNDlosdoQNvw+AQxK8gBsCRAgJhUJLS0upVAqqSGEh8jwv
      y/KJEyeaU/ggkLS8vOw1QTrkODYDmOWxsTGI/G/nTnvYMjgFNB3DMOVyGTYjeK8rKyvd3d3Q
      RQRkCxx4eBbscd7SBD0EIX3sIIyxjRxgGmGQm0cCbDVQ3i2dlSNBgazKVJHoQcJNNymPcDgc
      j8dFUYxEIpRSiqk0JOHE1kLqdWZtLnpvFYB0np+fh5tD+HOzw0ybuj5sdx9d16PRaHPcFCFU
      qVQKhcLx48fj8XgikYhGo/CyvdxLuKef972z5/aEHIVYSoQLfPUjn/nOx/96INTlOA5IG2x2
      QEbTpqwx6BHz8lTEHhI2si5x58q4QNG+43EbicRIJLK0tNTX1+e6rnvCTf5Cklp05lMzm98c
      tJ+CECa0HYVi0H0dGr0DoDYIovoIIQhUeV0fvGGgpqD3lsoAIQSNs1ZWVpq1VKFQ8OpPent7
      fT4fSAMc5gg3/6N3/pufPXnfTGnx3X/3Sw3HHIr23hIfRAi9JXPr5efHPZkeHBw8ceLE+fPn
      p6amwJxiGGZwcBBaBLdqQo4OUSPFWMI16UKX0x939kcubFEXBtm48Xh8RVrBBCMWYfaGJ1Kt
      VjVNa2trazQalmVNT0+Loui4VOVCbFsGzc30xeTDF2NQSpeXlzHGGYROKP6ndK3iuo5lhRhG
      pdRpykMCcx4YLPgvWEVgo0CydqFQ2Owzw14GgdJyuQxUFsY4kUiAza7relD0I4QUXmYIgxz0
      0vLoI+NPB0Tl0YmnYZ/iOO6ee+7p6OgQBOHtb3/7zMxMLBaDIC7Ypx6HfsgJOVKYKmIrbRnm
      TbOdL+pE69QHGB6TvTVg2LpFBkIoGAzOPDOzZC7Zqq1P6yVcisfjuVxugS4IncLa6NpQ99Dq
      ao4OvJP2vcmcfC7Y9xNS1ymrtDz3wB+cPKgAQXZzMBgEg4N1nD9Pd2Z4/vFa7TeXFn8/FvvZ
      YOgJTfvdtTzFmFI6hMmwIj2iqtX11jOQWAJ/pk112RCx93q5AzENRgx02fHGQAgZHBysVCoj
      IyOffPQz5xYuvrh4RbPqkiTFOjs++exnXddlFZaWKcdxbW1tt99+O8Z4bGysXC7zPN/b2wtq
      aWFhQRAESZLGx8ehBOxgc3JAWPoPz70QbO863p/Z9VoxjMQwDtj+UP2tY4EXrqCXOmdPsoRl
      RcSKmBERwyMoI9yMbY1fhmFODJ5YuLZQKBQwxdPT00tLS3bA7vvjPsKR4uPF5ceWi2o9+P4P
      MXLQqd5ogQi02wHmK5/PJ42JtyfIgxMs19YVLpd/MhBgPC+J0tOSzBNyQhQZx3F5njPNv850
      +RnmVkn6vZWVfxEMvS8QeKBSflDTKKXv9vk+Ho48Uat9vlTEhFQqFSjqsDXt/kCg5rgP6xpm
      GJ/P19vbu0FDwL5MCFmu5T///FcRQoIgDA8PS5LkeVJra2uWZYVCoWq1KknShQsXVldX+/v7
      vX7Trut++MMfJoQ89NBD5XJ5Q/vsIweljuMWV2ZGWXa4J7nztfDzMYckjj9pn530X54LnBvQ
      zrC6ZBvUqCDHRISjjIBYETMCYgSEyfUv7uQ9wXrKZDLQESFXzUXeEaE2pSxl/Wwe5d06Mhau
      iF2n7Uqu9tJ3tGgXWpvOdqZgZYN5sXftXV2de/Y3pICAb41bv/zgtU8OBrMZ55uTucUV8pSm
      Mxz3ueLah1K+c0bdwIg4DkOpSSmltOFSAaGPh8MZnlcI+bammZR+PBw5LUkZjvtipdwgpFgs
      Qu7i+wKBT3bEXUrzC/NqdzeYcZsHIwiCLMvALweDwd7e3g1JF8lkslQq3XXXXaqqPvPMM/l8
      3jRNjxAHcwo2Uy9A+/LBrv/g+/94tch2Z1K7Ss8GEESy9slFZnpEeXZQOO2nIYwwpdQxkWMg
      p0FNFTkWIgQRDhGO7u5+sywLeRqV0QrmcX2q7jZcs2AqtynVp6ruDz5ffBxH/GJvvM1xcnJX
      DGjc8fkVkwv47MpAb9cenXyKiWpQP4/KDYqJe//bzePtTF/G/fVvafUGdSzclmn8ygfxO0ru
      zHfQdMmeraJfmp/rE4RzhuEwzFOa9h5CntRqlutSSp+o1TIc97Su1V2XYVnHceLz8++VJAMT
      l1KTUouQHVrDYozb29shWSUajW6O1YCHNT4+Ho1G77rrrnvuueeBBx4oFoswV9Bj+ktf+hI0
      GhjY6rjaIwQr3fmOd3GXlzPpgxythxFOOT0ila9yL/XYQ1E3gTFmBcQKCAXWS01s5FrIMfdz
      3FN3snvy8cnkbyRdy3V0J3A6gAm2n7CP9/dhjPP5PNgcgUBgem5efu9/DMf7a5ceXbz8QFdX
      1+53RyiW7n3Pl8e7/falqj8U9uX0+nGEDId+52Py9ybsX/pGoyfMIoTGCu7DPycX6/R3Hmq8
      JU3+5iWt1mBESfpUPveZtXwdY5bjHMf5m1Lxi5WyiTEniq7r9Ejuf4lmwgzzZK32K/Pzderm
      gsF+YadjbKLR6Pz8PBS8Yoyj0eiG+EMymXzuuecikQj0SAiFQl6hIMgf0K0+nw847u0e5Lou
      dOCLRqPCjkPaBxhp/ur5QrU72XGQiBtGOOrGBUu6xp3XHa3T6SNNjA/GmOEQwyFO3o8ABYPB
      LM7O/9m81tA6f7eTb+eDbw6qkjr28JijO2D6WJbFs2x7OGL7ItR1iLiPdPpgMGjJp1ZsOx0T
      NE37re9efm/Wvn+Q7fCRriD59HsEmcVfuGDJPGYIDkvow8e5nx7kesLkA1+zEEKIEMq4d2fI
      QtWeqHKY4xyMkeNgjG+JOp++W6w9bYcRs2BZ5xp1jHH/bmcGgI1sluu/ectHq43a1yYf7uzN
      bNBYsiwbhvHII4/4fL6JiYm+vj74nFLqtY5ECDUaje0EiFI6PzffH7k9Fk0+PfatZHe0NW6/
      WaF87JAnzflp8KR59hr3Up3U+q2TzFbSsj8GORAIHA8cX11drTxdQW9FrumGbg8V/6kYQGzA
      J65Ua67r3t6duvf4wHev/T+OoISRe55F+dlp1h8MhcO72kOQvo4QUhSlGB14ZHo8FXBYgseL
      7ifOCpTSr43YA23kW9es86vucJRcyTmVBj2bcEeLhsEw/+EO9g/v5MsNNPy/tELjRltZnkG3
      JMljt+R//iFnpGGKoigIwg7Nuev1ulsx/UjiXfbeoXf88m0/Qyl9bvFi3TQ3lPwBo7GwsKDr
      ejabBRUFJBk8Bbpmh0Kh7ShpSqmlkfvv+zWCScPUrxQf83LJDwU+mIqxSmyLDjv7goDE49ab
      J9krF7lnj1lnBLQx+/YgIYj29nb/qn/iLya42zhrzcJrzr9+z52KwD87Nf/1Fy/rpkUwzpqL
      PdGwGA4H2WxIFr/2wuWGJO09+RcozQLt++rI5C+fJpZLn5i1dRPNlN2uILlacL897v7xD+yw
      4E78lvKRE+z/fNb8nYfNgs65FFVNarlIFEWj0bg9STuD1rfG3Fs/p9VMVLI5wvOO40BK9XZP
      X5iZ//IH/rSvLfO9sSc/9cTnnp2/UG2oc/pKkrtBsum6PjMzI8vyRz7yEZZlH3nkkWq1Cq5W
      uVxeWlriOC6bzSqKMjg4uMOzMMaUM5+f+H4skLyy8Gwgfqie6zdA+FDIv5zPocFuhBCi7vz8
      kl5ZXq2RO86eYbbxybcEg5h+++QiM3WB/9GQdWuA3tQ+9SACBPk3x3uP58fy+XyeYMICTcwy
      HMedX1y9tpo3LPvO/p6BeFQ3zUxbCFMKBeT7ekpbW7SA8Im/niKI1tkgy3KEIX96oUEpJUbl
      V08z8xUsMAhjLHGYZdm/esn9xrVauUHLDUSI3hNCD3/cJzDos8+Z3SHyhYvW16/ahJCBgYFd
      QlQUCSyPEBJZoYL1337svxLCJLuSzXIgy3IsFiuXy0CRQ8UFMKuQKZvJZDz2HDyyLcUIY9zT
      2/X4+D+YltnR0dGyBHvHqGiNWPR666alydFnrk53xzo7Q0xZN9sUAXJ2N/d+2A596FiYRK+Q
      F/qcY0mmCyNMEa3Yxf0JkFccjhDCGKul4k8N90o8+8CLl0WOu7y0CuldJsKG4z48Mv7IyPjp
      TPL5mYXxfDEjKdtN4nYA03Uziby4uPh7x7VfO8P/aN7+5pjNYvT8kkMpdSjKRsh/ukt4cdn9
      /e833pzi/uGSdXcPOxRl7u5lk37yzXFzYGjYI8rpep3Xhrh0LNn+G9/85K3x4Sfnn4f0nS2H
      5/f7S6XSl770pUAgsLS0lM1mL168eMcdd5w9e3Z6evob3/gGQghOOmtra8vn880nFjbfh2XZ
      ru49+Rn7AMti0yyXywgh6tqXRq9VC+Wa0kYQDROCEHJdF1I39370hw8Fj+M3jXAvluw1Bzll
      ssYQZt8C5EmAYRgRnj3VmUAIXVtZ++HUPCEEY+T18wZ78/z8MkKI5/nV1dXV1VW/39/Z2Qk5
      FQcm+DHGuoUopUs1+jPDLMFYt9HfXbQcx/nVM+IdGfaODPrhgv3bb+YaNvq3DzXaffjWOPmn
      KTuRSnvS47ru4tyM31pVbT6U6vc3NbgIhUKmbL6oT8Sz27YjRgiJotjd3X3x4sW5ublsNkvX
      j/5E65kb4NXDAohGo7quQ3d2yIrheb5er4dCIRDQFkc8GmVD6qBmGSGECfvun/pgtVJxDXVV
      w0H54Ka1jwZOmW+ZYyf8NJSxsqJ31MEe0TybHMeVDWulogosO50vovVM0A2zgNfbBQO3Bh19
      CCFQfHiwU0La29s/fb741FxtsoyfmXdOJ5j/8SMTkjgenrTv6mJG19zeELk9zSKEnph1llR3
      8LO6HI5num+wasVi8UOd+T+5W1pW6dm/H/cfv635EXsMgvI8393dPTExsbi4qChKIpF48skn
      T58+PTU1FQwGIW4IdZiwx4HFXS6XHcc53nn7sfjZF2cei6UDcDqbV+l8aNBKnXTHOFY57n1+
      QQu/AAAPQklEQVQUCAYRCh7+tDoeCVn7xm0PnsfDsqwQCH7m0acJxpbrQhHMXvI6wOEvFou1
      Wi0ejx8gt5xl2VTfsal6nUuz3y5V//LivONwhLiU0r+/4Hx9VKtb6JZ2/AunHdNB782yZxLk
      SomiRE+zE24YRl+YEIw7FCTgg5/gFI1GCSEQ2ZBl2XGcc+fOBQIBYPBt256cnPT5fKVSqaen
      JxQKaZrW3t4+OzX/sbf/O0UMxsNd37jwF4FAAM7IgrO2DjyY62gUz128FgwF39wX3v3iw+FQ
      iWAQuIasZIhd4KYGQs1X0vWzI5tNKNM0oafOAVQ3IQQmOhaLNRqNubk5qGhGCGmGQRF9cZWe
      +Xz9nw0y//t+sWKgvGr6gjp08mpvb+c4LhqNfvallbptjK5R6t8f378BkUhEkiTo0d5oNKCZ
      P4jC5OTkRz/60Wg0+sILL1y+fDmdTgOpzXJLql5SxGCxttpoNLx4HHSBOSwVRHhqabmF0iM1
      /Z63vflQt9oNhxIghmF6enpUVeUwyrZHlitqqW5AH53mvYxSymD8zmPZkCQ+OjpRrhuQ8Ykx
      9hpuHAbwSsD2gtRBCD/ZiPm/I8ZKzZ0t04kSTdhX/+AtFCH0314opLInBEHAnSf/cqooCEIq
      fVjVLkkS9G/waoOgaz1dr1xWFMXLM6GU9mZ7/vaxP5KYgIErkMqdyWRgC2tBdh7vv/eeew97
      k73hsKmokiQFAoF7+9JnulJFTf+zR542DAMyJZpz0OJB5e7hLMa42jAeujIOln8sFtt8qsYB
      0Nz+wXEcliFRiVYM5Dj2n90j/twp7sFRy3BQoe7+qzfxCKFnF/VzhUI0GuV5vjWs3TpAv3qG
      HTRwefDBB1Op1NjYGMdx4+PjsiwHg0FFUeLpaLVa7U32oJvPNW9N5NVSH3jg+9G+zp9805kW
      3G17tGCskiRxDIMQ4hjGdd2QwJ9Jd4RlsfkQkGrdqDYMx3WXy9cPouN5vq+vryV+R3MvWNd1
      P/EmNPMJ3+M/LwjEeUcPExTwnV3s2RRzqoPRLaRZ6OoahVNaDv/onQE0RDAYvHjxYjQazeVy
      +XweOgsghAzDWFtbA3W1ZQ88tN62Af68trZ2+cLolYujXt/S5hqsjaCuXl1bypWP5Ic1oQXJ
      8IlE4ntXx8Zza3OFskvpz73l1mQoMFsofe7Jc95WpRrmn3z3CY4hddNC6w0JWrLULMuChHm0
      Xm781k5GZPEtcUbm8KeeMn/xFPfckvPrt/FPzFq/+E3Tth3VQphsXdDecliWlc/nK5WKqqp0
      vZVHLpeDnuK1Wm1qamp4eHi7r8MpgNDHwiiTP/zQ3yOEPvvdf28oBpROb/tgTjl5ajBnHnk2
      bQsESBCEvqFjqqq6ksXodctxEEKW4zqOK/ICNO3CGDuUOrZD1o9eb2Gm8PUmw9RGiGCG/e8/
      NClCT885hTr64mXnyyMUIfrp5zGnhNvSwTcLk584y//juP23U7nOTKvpu02YnZ3N5/O4qTqR
      UprP571DfWq12g78qrcbmqYZ86d4VkAIRf0p08zvErc3yioO3XZi93TEQ6I15TgMw8D5XIVC
      4f/86KVMW2i2UGZYFt3ccKhZ30LezOEBfXe6yMqf3yctVN3//IRxXz/35UvWV0cdhDB0+unt
      7YUo1djY2L98P38mwaQD+K8uFhHqaubWWwjbtiuVSqlU2vI0U7zeVwQSq69du5bNZjevKOhb
      Cnra5/NNLV75wcg3EUJzpZG+WPcuI8Bk9trFYqX803e/rRU/aFu0sp4LVEuDomv5EsMwjmPC
      0Sq6rjfbKFDC18IUT5/Pd3+GPZNgshHCM/g9WdZy6PdntBoV6XqnR7hSUZSvj5TSfvzwpE2k
      CAKju9VFbZVKZXp6eo/nsyKESqXS3NxcT0/PZj1UrVahTJsQ0tXX+cLydxBCPdmNWSVbgJWz
      vV3Y9+rmgTYASjnhncFBTNANA1pIo/U0q/b29tYWh/v9/u9N0ff1O9Nl91rBvbePyetUt6jh
      GF6rb7gyHA5/+tmpvz3vBqLxdGcn2uZE6UMCOojvXathjHO5nM/n21AnDmy4N3iO45qT/3eB
      pc7Ol9u6Wv/rNqCVAgQOPHg3UNUL9DR0KaCUZrPZoygOl2V5bCX6ps8vU0x4lnzlir6sUt3G
      GCOGYTo7O71MeFEUe/uysiwf8qT6nUG2Og9vZ1BK5+bm/H7/5kY5B5wuXvEzumUdeTlRK5O9
      6/W6p1q9kk3ouwMd5kGSWvhED9FojDI8xYxFmRdX0FINeTH25oaNGON4PH6k0oMORORA7j0E
      z1uDRqWCRZ945F5YKwUI2vB4f4VJgVYHcM58yxJ+N8Hv90N9hcfuyLIMGaUvf2HogcnJHWq0
      9we7/oOnz5mmUaqou198OLTYiN5Aw0POBhCy0Lu+hY9rBlSUNrs8pmlKktTd3X1ET9wBfr/f
      M/vQep4GZLB4Paw2A2PcsuPVWOnOO97CT5ZCsGBd64nvP1ptEIm3ayZ77713y3zLDNCWvVGI
      sW8gPCBrSZKkVCp1dOoHAJXqXhM7v9/f19d3FDbyrsDrnchhv4bIvN/vxxgbhjE2NgZtQ5u/
      QimNRCKtbOUhhvSFJ4pyz+AAQoS7486fvDQ6YpvyYJDohiXzzH4zErdDywRIVdUNHV5hHmFe
      vEPjjw5wiDqlFF4V/PeoH7olKKWQJhaPx4HI8F6SKIpdXV2FQgHSP7wRggbdYcBwAsle06dc
      2zCtM3feRx1oFeo8+p0HnUBnkK1cKJG7ewfRgTISt0TLBGh1dRUUQPOHhmHAQeCtesoO8NpC
      vOKAs2a2S1OBPjKCIMzMzMAn0Bxi50aloijmcrlYLLYnhaHlHnlxgVaWHM73gfvuwZh5zwc/
      dpBfsge0RoAwxsAWerMG6kfaTyXG6ww7qBNCSEdHh6Zp1WoVKpkSicTOkgHNr0ZHRzs7O3c3
      lXyxk12G7bQh7iAJn/tCawSIrh+P5f01GAzCubKv0V7aRw2WZfv7+70zEnYNp0A2MF0/n2UX
      EK6ru6dlY90RrREg6C5N15vJt7W1QdZfS27+egVkcczMzBiG4R0gvyUopdPT04IgJJPJvXqy
      jeIjT19EgnzUGYmtUQ+2bTdn/1BKXx6753UASZKarenNoJSurKxUq9V0Ou2pn+Z2eluDsKX8
      6k4XtAgt28Lo+mFYhBAo3GnJnV/3aG9vj8Vi2wkQpXRiYqJYLA4PDzdHSKA52rY3tRtLObW9
      I3rkKXOtEiA4Ahy2sK6urhbUFfzYYGfrR1XVQqEQDoc3sBK70OusmEynkumXwydtzRYGaSvA
      HJZKpZY3bf2xhaIox48fz2az++K0XEObnFlYmB79xsNPHN3YAK3RQHDUN5BA0CK+Jbd9RQC9
      xqFp6ys9FgQVmPv+Fmv/4xf/QUnF2WCKInSkP6NlPBAYPT6fL5VKvRqm/jBoWVDzlYLLDJwa
      6r7lbZJRMRE60hBSawRIFMVisQin13rGXalUsiyrVamrLxsYhnlNtJffCZzy7vfdjxBCaNse
      SK1Ca/YaOJcUei57H4qi+IYz/7pHawRIkiRI1KrVaqurq7AFSJK0Q/CPUlqpVF4TJwG8bjB6
      /pnHnj5nu63coFtm7XZ0dCQSCUmSDMPYywlCkCv9hr/2MsLQDLmnTanouxyLuy+0ku5TFMXr
      tL0XvPoPkXh9gTGN6moRhbv6W3jTFvPFr2kH/vUO9sTx7FodB6RWxijfCDj8GCHQdlMLz+aC
      pwPjDYXxY403BOgNvMI4WgHa9ZzKN/AKIr80W6lbxZW5seklrZQ7f2XMaqgvXBjZl2N8hDaQ
      qqrQM/AAlZpv4GUAxxhLuerq+GQ4yL84a0zNrhUKy8d62q+MrZwc2Gtp200aaIe37LXt3SMg
      PWh2dlZV1daSPW/IYqtAGAYh9lg2dn66zAjCu8925zXS1tZBDX3vN2k6tZmTMolIsdoQWFSp
      1gIBpaaqlk3bOuKN8opB+Xh7tFAsEuSKvqCpqy7CFDOO2ZAksVbTbIqRbfCyX+CYhl5bKaiO
      Xkl1ZiIBhRVkx2rU9IbAcwRjlucc23ZchJGLMXEcJ9rRoZbKBDuCL+Td2TUbgiRqNc1BiGd5
      BruElxzLjCcTlqGvruQxxoTlBBbVLcQSxDKkXK4owbBjNmSfrGu6IAgUo2q5GolGbbOBCdF0
      wycwJmV44jZsFA4q1apGMA2HAoWK5hha3ThIDtar/1DLLcGJgRDmccP/gZ+6tzhz5dKCesex
      xOM/fOns296+95s0nRsfDBKW94l2uVrv7U5MzRba2yOlYh05hmFYhmOpKk8YPuwX9YbBiD7W
      dRWfWDd4TpQEBpUtQlVDlniMiUsxctwTt5xxXAMT3qXUsBuI0nBblGVY6jQoI2FDtVmfyLil
      UqFe0wjLBf3+hmGxouzaTiCo6DrPC4LAMDXHESm2GZ6xVU72F1ZzmEHhWIxgxjU0QZbZmo54
      kXEtQXZExrZ9SrVaT6ejxVIdOZY/oJimGQ74y7oekCQl6NP0ho2YiGjrhinwgigSVdNFUeJE
      tp7bop3PDnBd12siBp9AcKaFvUeODpISkxSEUBdCKDh8umcYIYQ6u7L7uskNATLr1aniWjgU
      UHzC3EI+GJAKa1W/ImuaznAccqx6vcFwQq1WczCLHV03TJe6lmWKrtuoWz5ZKrlIq2mmZU1M
      TkbbOqqVSigWqZXLhBcJYRCiqqoSROuGJbE1zCKKrJqLECWubXEsp9U0B3GE1rWGSTGyTYNS
      p143ZJ/Y0E1s14goN2oV13U5QbCrVYSQ4yLZdXWtbmkNv8iwGNlYsBqNYFDKrRZMm2LX8fnl
      ckXDrqVbtsSJWk0jvIT06vhqwdLLJhU6E1FBlqljm3tQ3V51hGVZcCTP/Py8aZrekQyjo6Oi
      KPb390N+C9TvOY4jy/Li4iIcGMLzvKIozQWHr11cFyCWZaNtN46kgGIuSZIRQqK08bA+wHrG
      g4wQkkQJISR1ZqA3e09XVzqdZhiWYUgwDI2k5EDoenHqbjWqsgJslw/uLCOEROF6cZlvqyoz
      Sb5eknc9kRa+2HSlogQQQuvFVBghWrNd1zYp4QWCMcP6FT/DMEiRw23bUiOaptXr9UqlAq4l
      VAO6ruv17LEsi2XZnp4elmUVRREEwXGcSqViWRYUlfr9fi9RxDsSNJFIvKbzx/Ho6OgrPYY3
      0AI0dyV4OfEGkfg6wSuVRfmGAL2BQ+H/AxXT8l81kxhAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Trends Trop vs World' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAclUlEQVR4nO2dd3xTZ5rvn3OOdNSs4io3XOVuMNj0zgADSUiA
      LKSRxiQ77d7Z2bu70292JpP7uXdn787du7PZ+ezcnSEbCEMJCS0EEjoBE0w3rnKRe7clWf20
      9/4hIEQIZMsHWce83w9/yEfW45/O++Ptz3kJhBBgMGFBTrYAjITB7sGEjyy8j3EcNzIyQtM0
      APA8T1GUiJoet4BRLu8hAcN0DwCo1eqYmBiEEMuyfhuJBcMwj1VAhmHkcjlBEFEbkGVZmUx2
      f0DccmHCB7sHEz7YPZjwwe7BhA92DyZ8sHsw4YPdgwkf7B5M+GD33AfPgbUdeBbw+nEowp9r
      npo4++HoT6H2Y0ieDoXroOAJMJYAie9ScELfFySwNrvHYNC6Rq1eQRZv0Ik3Ax5NIAEs5+HT
      vwVdGvzlKeithroDcPlPoEuFwnVQvB5iM0GmmGyV0cUY3MO7D+w7tuXVJw4eOsix7KrNb6Rp
      xVyBiwo4H5z7J7j8HzDve7DohyBXQloFVLwOtnZoOg4Nn8CFf4akYihcBwVPQkLeZMuNFkK7
      h5THpCfH8QLivW6HQBMca7M5BEEgSZJhGADgOE5cTREOSAyZZZ//FJwD7MZtkLkIEAEMc/s9
      TSrMfA1mbIHRHjAflTV+Ql78VzBkEoXrmdxVEJsNlAiNGsdxCCERFzV5nhc9oCAI9wcc65f3
      ua0JWbPnxLmGR9ypuXEcx3m9Xpqm/VsTxV3BjlxAJEDtATj2U8haDJu20TFJD/o0KE2Q9ANY
      +H0YboLmE1T1h+T5/w0pM2H+98C0CigaJlZUEl1jJ8awM1Xo7uhNmZZSe/FkJxu7ZulsigC/
      e6S9Q8M1BCd+CY3H4Jv/A8qeB2Icw0+GYWhXD9Tuh+s7wD0Cxeth5kuQVhFe/1q6OzTG4p4g
      SNs9SIDuq3Doh6CIgXX/DEnF4605vgrosUL3Vbi2A9rOQ1IRVGyF/DVAa8YVELtHOu7hGah8
      Fyp/BxVbYenfAa0RQSFCYO+A6zuhei8gHmZugRnPQVzO2KNh94jGI3TPiAWO/hiGW2DtP0De
      qnG1VqEVIgS+UWg+AZf/CENNkLMcKrZCWgXIlSGjSdQ9j81cM0JQfxjeXweUHF7/BPK/GbZ1
      HghBgFIPpX8Brx2GF3eBTAm7X4L318G17eAdFflvRQePR91j76crfwu39sHyn0HF60DJJxpw
      LAqRAK4huLkLbu4C9zCUvQQznofEAiADZ8ukW/dMdfcgBN1X+cP/jQIB1r8LKTMnOLT2Mz6F
      PgdYvoCqP0DvTchcCLPfgOylQMruKsHuiT73+Huy5/4J6g4KM18mV/wMFFox1AGEpxAhGGyE
      K9ug/iAoDbDql2D6pn+yEbsnmtyDEDAOuPo+XPw9GItgxS+YhFJaIeYSVfgKEQJnP9zYCV/+
      O0ybC6t+BfEmhmWxe0RjQu4ROGg6DifeBiTAip9D0TogZdGYzzXcAmf+FzSfgHnfZSrelMfE
      Y/eIQ5hlgwTor4GT70DvTZj/fZi9FZT6CQUUXWEAAgetZ+HkrwWfk1j9KyJvDcjEERkx90yV
      nSvuYfji/8D1HVD4FGw9CvG5ky1oDJAyMK2EaXOgahsc+ivImA+r34EE02TLGgfSn+9hnHDl
      Pfj9Aui5Dls+hPX/Jg3r3EWh4+Z9H75zDpR6+NMqOPkOuIcnW9NYkXLLJfDQfgFOvA3Ofljx
      cyjZAHL1hAKKrnDM0eRyOYEEaD0NJ94Gzgsr34L8J8Pe/oFbroeCEAyZ4exvoOUUzH4DFv5X
      UMVOtqYJQ1JgWgWZi+DKNjjyd3D1fVj96zBWcCPJZNc9PAs1H4N7EOQaoORAyYGUc4iQ0ao7
      P8r8F+++C4Dg5m64sg0yFsCKn0NiYcj7K4265+63QAhs7XD2H6Hpc5j1Miz8AajiJnfRPirH
      XDwHp34Nl/8IabNB4G7/4zmBZ0jE33vlzmsWBA4EHoylsOqXkLPi/ln/oEjMPX4QgtYzcOod
      8Fhh+c+h+Jmx76p+DNzjHYWjP4bOS7DxD5BWAYAAIQAECBjGR9Py2wkx/otfvUCAAGSKcW1Q
      l6R7/LBuuPYBVP4OSBmUbISipyGpCOSq8AOGRTS5ByHwjMD+74K9E57bcf8m8ygvbNEDhi5s
      Rz+0nYPqPdB+EeJNULQOSp69vX8o2KeiyD0C72tp6s4pzKEA7DabzmAgJuieEQvs2QIxRnj2
      P0CTcP/7UV7YogccR2G7h6HuENTth66rkFgIpRshbw3E5QS04FG0v4cgiLor1xgAxt519nL9
      hFQgBN3XYOcmSCqBTe8FtQ7mYajjYfZW2PIxfOcclGyAmo/hvSdgx0a48h44+0HgIywn9Iid
      IGUGfQwI7MG9+4YV6UMORs67w8nIQYhoPS078gOh+Fl+xd8DJf8q8eXrSD3FJ4xo406g0U6D
      2d+Bim/DQD1pPkJdfY84/hbKXMwVPoOyl/HKuOjKyAHeR8Rll+qonkF7WU7iuDNyBB6qd8Pn
      b8GSv6XmfpsKtT9Lqik+4RJ+QzNtJqSXwdK/gYF6ou6A/MJv4fTbfPp8cvFfEanlYs0VTaTX
      jKyDI7rEOGtXi2WYL59RMO6MHEGAC/8XLv4rrP0NTN8s9ekZ0QOK2U1hPdB1Wbj+AdF8glj9
      Dsx8SRQDTd6Yi3HBibeh4TBs/ANkLRnLl4nywhY94CPYHeaT1x8gPv/vUPY8LP8p0DETDDhJ
      KxWMEw58H/puwUt7wVgazZPuUwsCZmyGBBN89CYMmeGZd0GT+Chu/qNcY7d3wQebwdEHrx6C
      5OnYOpGFgLQK+NYxAAK2rYHuq4/icUSPxj0IwWAD/Pl5UGjhxd1gmPZI/gomJDFG2LQNCp+C
      3Vugeg8IgrjhH03L1XkJ9n0L8lbDmv8ZXrImRjRoDax+BxIL4djPYMgMS38UcqFj7Ihd9yAE
      tQdg76tQ/go88Y/YOlEBQcDMLfDyR1B3ED58DRx9YrViYruHZ+DYT2Dpj2DZT/CTtqIIgoDU
      WfDqQeAZ2L4B+m6JElVs91A0/LAa5rwpfp4vZoIQBOjT4cXdYFoJOzbCzT0Tr4HE7vcQBK5y
      ohqZEla/DQn58NnPYKQFFv9NyIc0PARcQzx+kDKoeA1e2gvVe2DfVnAOhB9JRFUYKZE+G147
      DJwXdmyA3pvhtWLYPY8xhgx4/gPIXAQ7N8OVP4HXPt4A0sypwIgFrYG1/wApZXDhd3DmN2Ba
      CTOeg7TZoNSN5dPYPY89JAWzXoaSDdBZBTUfw4dbQZMIBWuh7AVIKgYgHrLENNkZOcGI8iVx
      0QNG1xNYGDeYj0HNPmi7APo0mPEC5K9l9ZkyOR0du+JDEeWFLXrA6HKPHySArQOajsPN3WBr
      FxKLiFW/ItIrAn4Lt1yYYBAkxGbB3L+EOW/AQD3UHgTOe/9vYfdgHgpBgrGEj8uXyYJYBY/Y
      oxHHgGXn++/95/YdVxu673+36vLFr/3ss1+sbgAAZ2/du//2ft+oFwCAdXy8a/vnl2rv/3j1
      9Ys93a1NLUMhRCDuo117vAiGW6uOVDYAcDXVdQG/Erru4X3D/++Px978L1vkiD344ZE1z20I
      f2YbMza+uHjt6Rde1coJnudrq85cbxlcumptQ+WBQY962aJZ+w8eHrUPE3SS3N3TZXXm5M8Y
      cnoBAHEeHw+8IACQgARSHVtenNtvqf3sXFXW9EWxSnZ6cX7N9YbjB3eVrdrUfrO5Lr9oeXnG
      8WMn43PLDfLhvkGP22lnKf0zT61W05S1s97H289eaZOZzwyrZmzbZc435XSbb5z+sjqvYmkS
      Gjh3tSG0eyiFwZSRBAg1XD7b0ucEhGx2+1Q6I2fSA96fkYME4DiWAYJxDO87eCjeOK3yWq3P
      zjyxemZNI7dg/pyBzvbSkvg+hemJAsfh6wNavZphmPrmnpREWeOtm3TZTB2tXL5g+ucnzpLc
      8PpNz104+Gmbls7PTbO09c1asCLVQHOFc3R8455dVQ6B6ug/o9ErVy6Ze6qGXpooax0czk80
      nDt5otNGWvo/e3ZBnp7Wn2uNsfW2Xmjn12/a5LQ7zp81b9r87Fj7PTzj+PzUxe4eV9eQ05Ro
      mCJn5ERNwIAh0pKFM/fv3onk8pKKJUsWLLAMOItMmd5YpNXFxscSGrUx2WgsLi1uOnBgf/Vo
      Uv6iOIOapmmO9bECMdTXw5SUITT62bFT6oyyQq3qw927E7NKlyZw72/fWzR/jZ7t1sYm5ah0
      pNuxNDX3QtWNmPjM9DRNVnJiKaszkG6fWkXLGG3mgp9snW++fsnuGdXrDPNmGeUjpFpw7duz
      J71gdk5K7K5de8Z0Rk5TfUtOUR4F0FJvzizKl+ER+5QfsX+dieRUkHlFtx9UkFuUL5YgzBQA
      j7kw4YPdgwkf7B5M+ARxj38AGXkpGMkRxD2Wuqr9B4+09dkirwYjLYK4Jz4hyTHQfuLooQvV
      rZEXhJEQgSP2q+c/23v4+IzyuQkpuYtmjPVkTczjSaB7imctelYRW5hfQIp04gZmChPYcqk0
      Mb21l3bs3vvpF1cnRRBGQgSZa356yxttXf2xhsTIq8FIiyDu+fLsqQEPTcqa1z+xOvKCMBIi
      yJhLKYOm+lsuFj+sCROCIO5Rx6hTMnK+sWRB5NVgpEUQ9xRVrChPJ7cfOB55NRhpEaTf03D9
      i34q669fKY28Goy0CFL3aOTyltrLJypvRl4NRloEcU9Ne/+Lr7ziHgmymx+DuZcg7lkyr/zw
      3r1502f7f0SIt9tGEYDP7Ry2jgp49R1zh0D33Dh/dN/RyidfeKUsN8V/BQm+Q7v2e1jXkYMH
      jh0+aO62RlwkJkoJ7DU3dA6UpVCnLpvLMvQ56UYAICllRrqRkKnWbXqu8VqlWkHbbDackSNu
      NNGPtJmcM3IqZpT2jbgT+P4hG+F3z20IoqvhskebMz1RA3dyKnBGjlhMkZyKvJKKwIMegcib
      USLjmObm9o6RZoNhfX6qQSxZGEkTJJ+ro+bSmbrejLT05YtmP+hjOJ8L53NB0DFXnaU7LSGu
      f7BXrL+NmaoEG7EvnNNtaSopmxt5NRhpEcQ9As/H6LXtnZ2RV4ORFkHWuaqu1Sz6xhq1Au9M
      xYQgSN2jkzMffYh3pmJCE6TuGRq2Z+cXJCYlR14NRloEqXvKysvaW5pHhh2RV4ORFkHcc6ux
      o9BU5Hb1RV4NRloEcY8pJfbc2RNAx0VeDUZaBOn3uIiYH//iF0oZfrwGJgRBLDI60PbBf27b
      c+x85NVgpEWge85/9vG+zy+IuESCmcIEtlyL1zybnp2vT83usHRNiiCMhAjSciXEqn/zq7c8
      spjIq8FIiyDuGRga/dHfvy3z4qc/YUIQ6J7PTp4gbf02Ujs8jOd7MCEI7Pf4htqOdFvRrS5K
      mzQpgjASItA9zzz/5qTowEiRoPt7OJfT4fLcPs2L9428/97HDOP+aOcft+3YO+oTIqsQE70E
      mWuu/OKk3e5Ahqx1y2YDAKXQpyZoHfaepJzFc+PdbR2Duakx/pwPlmUBgOd5/wuxeNwCCoIg
      boqP6AF5ng96PdhKRVdTnV2eofjaDg2SoFjW5fN6CA1F07T/9lEU5dfqfyEWj1tAf3KciDO0
      EQt4XzbgrTpjXlFcTds91whjqlEbmybYqy4P6zc8HS+XEQRBcBxHkqQ/64wkxVwUe9wC+qOJ
      WNiiByRJMmhAfCby5AeUbkZOkJYLISQIAhAEJer/V8zUI4h7rpw+Ut89pDLmb/7mwsgLwkiI
      ILULCZzTzQoCHpljQhDEPdMyc9S0LDkxIfJqMNIiiHuu1ls2v7RlqKsp8mow0iKIe+aW5u3b
      9efkrKLIq8FIi0D3NNyqq2lq5Hi+qxevsWNCEOieoZ6G/ce+mBQpGMkRZGdqZm5+c+egMg73
      mjEhCNLvMdfWaBMSa2/VRl4NRloEcY9Br201N6q0usirwUiLwJarr8uiMWZnKkf1yRmTIggj
      IQLd47Rbh6xuAHA43ZOhByMlAlsuU0m5Qe5rbDTfrGucFEEYCfHAVXS5XB5JHRgpEmSNvWjm
      PLuHMs2aF3k1GGkRpO754uRxQ1r66ZMnI68GIy2CuMc13HXu/Pnqa1e+rG376ioSmm5Wnr50
      i8dn5GDuEKTlWrnx5br65qeffDre8NWUj8A4rtS1EZynt6g4XSfmDnOMdAninhtfnvcqYxsv
      Xnlxw5q7F1mfT04pFGqacbltAo/PyBE32hQ5IwcACIJgWRa+/psC8DzHCXICARgMBnxGDj4j
      B+53D+vz5JcvtI2MzE/NvPe6Spu8euUip6CYlqwVSxNG6gS65+SnH9ls7nmbvq1Vff0Ngogz
      puMHYWLuJXDM1dfXax/p2bntT/i5hZiQBNY9r3/vR5OiAyNFAuuemvq6W3V4Zw9mTATWPY6u
      hj3Hzk8vLolJK3h+7eJJ0YSRCoHuWbD62fy8wk/OVKWn4FNOMCEIslJRVdO06cWX+trqI68G
      Iy2CuKeiKHvvn3cmpN93NjIG83WCzDUn5c7Ymjsj8lIwkiNI3cN5rPv37G4bxOdzYUIQxD2n
      jp9a/ORTl87i/T2YEAR7hkaS/sCePYQmPvJqMNIisN/T2dZBxyZkTONV8XhRCxOC++oegTG3
      dmq1Wo1aORl6MFLivrlm20B37wBFKTiFYVIEYSREYN1TXL5wVmZcU2trfXP7pAjCSIggvWYr
      r3j9W99KicHHA2JCEMQ9hanxu7Zvl+uNkVeDkRaB7umov3zR4nz5tVdyU4L0e1iGxQk5mLsE
      uudma/+SdN/vP/iUozQBbwne4U9PVmL3YO4SOObSCI5PqmwKRN1qMBdn3XPAG+I/3b2jm85z
      +3jO48AZOeJGk2hGzpjPqWBGPzz6ZUky6Y4tnZ2fjM+pwOdUwEOeoRGIXDsnV99kU87Ixb1p
      zG2C7NAIDkFklc7LKn2UWjBSA5+Cgwkf7B5M+GD3YMJHfPf4h4uih8VEIWPuNY8NjuO2b9+e
      nJxcVFSUkZEh7lmymGhDZPdQFDV//vz6+vr9+/fzPJ+fn19UVJSWlqbRBM5cY6YAj+RUW4SQ
      2+3u6upqaGhobm4mSTIjI6OwsDAnJ0epVIacxYryyT3RA0p3tvCRn4nMsmxnZ2dDQ0NLS4vL
      5crOzi4oKMjOztbpdA/6elFe2KIHxO4JcSsRQgzDDAwM1NfXNzU1eTweo9FYWFhoMpl0Ol1A
      9yjKC1v0gNg947iVPM/39vY2Nzc3NjYODw8bjcaUlBS9Xq/T6XQ6XUxMjFKpVKvV4t5N7J6J
      EEXu8eM/9d1qtTY3Nw8ODo6Ojo6OjjIMw7Isy7JKpdLvJ/0ddDqdUqlUKBQKhYIkyXHdGuye
      CTLW5xZGDIIgKIpKSEhISLh9jJwgCD6fz+v1OhwOn89ns9lGR0ftdntXV5fdbnc6nTKZTKFQ
      KJXK5OTk6dOnZ2VlURQl4j3CjJdJc8/9kCSpUqlUKpVGo7n/fzbP806nc3R01GazWSyWQ4cO
      CYJQVFRUXFyclpYm+iNRMWNh0lquhxCyXUAIeTyejo6Ompoai8WiUqkKCgpKSkqSkpKC1ka4
      5ZogUdTvQTzPW63c0BA3NMT19npuVtOmXEV2tiwlRZ6cTGq14wrocrlaWlpqa2vb29sNBkNR
      UVFBQYHRaLz3q2L3TJCIugchhFgWeTyCx8NbrWxvL9vdw/b0sL09bHcP198PCAFFETIZFRdH
      kCTIKK5/ADEM4nkqJkaemanIyqKzMunMLHlaKqnVkRo1SdPw4NshCILL5TKbzTU1NYODg3q9
      vrS4uDAvT6tWExznc7mUsbEETYNI/STsHj8iuwdx3MBvf8tY2rjBQd5q5Ww2EHiZ0ShPTpGn
      JMtSUum0VFlKiiw+noqNpQyGu54QGIYfHuYGB9meXk9zM9/dzXR0sJ2dvNVKxcbKEhJkqal0
      ZiadmUlPSyeUKuTzCm634PYIbrfgdgku9+0XTtdQd5ett5dgOQVBxMXEgNcruN3ypCRSrSY1
      GlKvp/R6Sq+j9AZKr6d0OlKvo7RaSq8ntVpSoyHI0CvH2D1+xucen8cjV6nIh7iH5wf/5Xek
      Ri1PTfX/o+LjCZIEkgSCGOP38X95QAh4XvB4mPZ2pr2DaWtj2tvZjg7OagWOA7mckMsJmYxU
      KUm1htRoSLWa1Khvv1BrSI1aUCgGHY6G5mZrVxepUCRrYjIT4vUUBQ4Hb7fzNjs/akcer+Dz
      IYZBPh/y+RBClFZLxccri4tVpSWK4mI6JZWKjyMe5XzmY+EexDl//+6f3/jrbysnr9eMBEFw
      OhHHEXKaoOWE/x499DZxHNfT09Pe3l5fX2+1WuPj4wsKCgoKCuLj40mSRCyLvF7k8wk+H/J6
      BY+Ht9u5vn5vfb23ttbX0kKq1bKkJGVJibKkWDV9Op2ZSdA0y/PYPTAO9yDhwmeHmgaJF15+
      xmu3+zNy1Go1AHAcJ5OJOfJ/dAFHRkaam5tbWlp6enoMBoPJZMrOzk5JSXnQMZqC1+trbvY1
      NLJ1tWxzM9PegThOkZcnLyxQFBfTJpPCZCImbCOO48SduOJ5frwTquEFHKt7eJ9jzwc7rt3s
      +O5bvzAlaiWdkcPzvMPhaG1tbWho6OnpUSgUubm5xcXFycnJCoXiQTcdsSw/Osp2dXtra503
      b7D1DbzVSmo0ivx8ZUmxIj9fkZdH6fWkSjXevvljUPcAAMBQ/2CsMZGa7PkesQIihFwul8Vi
      MZvNra2tMpksJyenoKAgKytLqXzY44v8xcMPDXluVntqanz19Ux7O9vTQ8XF0dOm0aZcZV4e
      bTLRmZmyxMSQ3fDHxT13mRruuQtCyOfzdXZ21tfXWywWlmVnzpxZXl4eGxsbtAwCAiJBQAwj
      uFyMxeI1m32NZl+TmesfELweUqFU5OUp8vMUBYWK3FxZYgKl1xNfbyixe6Ttnnvxer3t7e0X
      LlwYGhoqLi5esGBBfHzgIxzHYkfB4eD6+5nOTp/Z7Gtq8jaa2Y4OUqeTG420yaRdtkyzeBGl
      0wF2z1RyDwD470lnZ2dlZaXFYjGZTAsXLkxJSSHvtEHhBUQMw7S2+hrNnlvVri8vcb29qooK
      7cpvyMvLNTk5hHgDBeyeqAgoCEJvb29VVZXZbJ42bdqiRYvS09Mpipq4QsHl8rW2Os+ccZw6
      zfb1KbKzYpYu065aKc/IICZc8Ng90RVwaGioqqrq1q1bRqNx3rx5WVlZKpUq9MfGABIEd0uL
      90Kl69w5T3W1PDVFs2RJzPLlqtJSMtw/gd0TdQERQna7/erVq9XV1Wq1ev78+YWFhTRNT7yQ
      bs+t8zw3OOS69KXz5ClPdTUhl2kWLor5xgpVWRml149l/SQgIHZPNAZ0Op2XL1++ceMGTdNr
      167NyckRvaHhRkY81687Tp5yVVYijlPPmaN78gntsmVjnJnE7on2gAih6urq8+fP6/X66dOn
      GwwG/65ZiqJkMhl1B5lMFnLa90GFjRBCXq+3tnb02DHnmbMAoN+wXvfUU3Rm5sOrIuweaQQc
      GRm5du2a2Wz276nlOI4kSb97ZDKZ/4VcLqdp+u6mbIVCoVars7OzExISCIIgCCJ0YSPE2WzO
      s2ft+z7yms3quXMNm/4iZvHiB01qY/dIMqAgCAzD+B6M1+v1+XxOp3NgYECpVObm5ppMpqSk
      pLi4uLEUNkLIZ26y7dvnOH6ckMsNGzfqnnpSnpER8FnsnqkcUBAEh8PR3d3d1NRksVg4jktK
      SsrNzc3Ly4uNjQ1aTveCEOKtVufpM7aP9jHtHeqKcsPmzerZs4k7eboRc8//B+0N3A1DwMZU
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
      aVqF11fnLP8NrOoI77BbswoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 6' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
