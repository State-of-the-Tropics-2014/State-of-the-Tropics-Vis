<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0510.1702                -->
  <repository-location id='Extreme_Poverty' path='/workbooks' revision='1.0' />
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='World Indicators' inline='true' name='World Indicators new' version='8.2'>
      <connection class='dataengine' dbname='C:\Users\John\Documents\GitHub\First_Draft\Extreme_Poverty.twb Files\Data\Tableau Samples\World Indicators.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[World Indicators new].[avg:H: Life exp (years):qk]&quot;' value='Life Expectancy' />
          <alias key='&quot;[World Indicators new].[rank:avg:H: Life exp (years):qk]&quot;' value='Rank of Life Expectancy' />
          <alias key='&quot;[World Indicators new].[rank:sum:F: GDP (curr $):qk]&quot;' value='Rank GDP (curr $)' />
          <alias key='&quot;[World Indicators new].[rank:sum:F: GDP per capita (curr $):qk]&quot;' value='Rank of GDP per capita' />
          <alias key='&quot;[World Indicators new].[rank:sum:P: Population (count):qk]&quot;' value='Rank of Population' />
          <alias key='&quot;[World Indicators new].[sum:F: GDP (curr $):qk]&quot;' value='GDP (US $&apos;s)' />
          <alias key='&quot;[World Indicators new].[sum:F: GDP per capita (curr $):qk]&quot;' value='GDP per Capita' />
          <alias key='&quot;[World Indicators new].[sum:P: Population (count):qk]&quot;' value='Population' />
        </aliases>
      </column>
      <column caption='GDP % of Total' datatype='real' default-format='p0%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([F: GDP per capita (curr $)]) / TOTAL(AVG([F: GDP per capita (curr $)]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='GDP per capita (weighted)' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_1590906174513693]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([F: GDP (curr $)])&#13;&#10;/&#13;&#10;SUM([P: Population (count)])' scope-isolation='false' />
      </column>
      <column caption='Rate spread (difference)' datatype='real' name='[Calculation_8570907072742130]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([F: Lending interest rate (%)])-AVG([F: Deposit interest rate (%)])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Country / Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column caption='Date (year)' datatype='datetime' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' caption='Deposit interest rate (%)' datatype='real' name='[F: Deposit interest rate (%)]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='GDP (curr $)' datatype='real' default-format='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' name='[F: GDP (curr $)]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run bold='true'>Gross Domestic Product</run>
            <run> in current US Dollars</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='GDP per capita (curr $)' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[F: GDP per capita (curr $)]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run bold='true'>Gross Domestic Product</run>
            <run> per capita</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Lending interest rate (%)' datatype='real' name='[F: Lending interest rate (%)]' role='measure' type='quantitative'>
      </column>
      <column caption='Health exp (% GDP)' datatype='real' datatype-customized='true' name='[H: Health exp (% GDP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Health exp/cap (curr $)' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0,,,.0B;(&quot;$&quot;#,##0,,,.0B)' name='[H: Health exp/cap (curr $)]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Life exp (years)' datatype='real' default-format='n#,##0;-#,##0' name='[H: Life exp (years)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Population (count)' datatype='real' name='[P: Population (count)]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Subregion]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value=' ' />
        </aliases>
      </column>
      <column-instance column='[H: Life exp (years)]' derivation='Avg' name='[avg:H: Life exp (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country / Region]' derivation='None' name='[none:Country / Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[H: Life exp (years)]' derivation='Avg' name='[rank:avg:H: Life exp (years):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[F: GDP (curr $)]' derivation='Sum' name='[rank:sum:F: GDP (curr $):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[F: GDP per capita (curr $)]' derivation='Sum' name='[rank:sum:F: GDP per capita (curr $):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[P: Population (count)]' derivation='Sum' name='[rank:sum:P: Population (count):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[F: GDP (curr $)]' derivation='Sum' name='[sum:F: GDP (curr $):qk]' pivot='key' type='quantitative' />
      <column-instance column='[F: GDP per capita (curr $)]' derivation='Sum' name='[sum:F: GDP per capita (curr $):qk]' pivot='key' type='quantitative' />
      <column-instance column='[P: Population (count)]' derivation='Sum' name='[sum:P: Population (count):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Date (year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (YEAR(Date (year)))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[[Exclusions (Country Name,YEAR(Date (year)))]]]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country / Region:nk]' />
          <groupfilter function='level-members' level='[tyr:Date:qk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[Region]</field>
          <field>[Subregion]</field>
          <field>[Country / Region]</field>
        </drill-path>
      </drill-paths>
      <folder name='Financial' role='measures'>
        <folder-item name='[Calculation1]' type='field' />
        <folder-item name='[Calculation_1590906174513693]' type='field' />
        <folder-item name='[Calculation_8570907072742130]' type='field' />
        <folder-item name='[F: Deposit interest rate (%)]' type='field' />
        <folder-item name='[F: GDP (curr $)]' type='field' />
        <folder-item name='[F: GDP per capita (curr $)]' type='field' />
        <folder-item name='[F: Lending interest rate (%)]' type='field' />
      </folder>
      <folder name='Health' role='measures'>
        <folder-item name='[H: Health exp (% GDP)]' type='field' />
        <folder-item name='[H: Health exp/cap (curr $)]' type='field' />
        <folder-item name='[H: Life exp (years)]' type='field' />
      </folder>
      <folder name='Population' role='measures'>
        <folder-item name='[P: Population (count)]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;The Americas&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Middle East&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Region:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Europe&quot;</bucket>
            <bucket>&quot;Middle East&quot;</bucket>
            <bucket>&quot;The Americas&quot;</bucket>
            <bucket>&quot;Oceania&quot;</bucket>
            <bucket>&quot;Asia&quot;</bucket>
            <bucket>&quot;Africa&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' inline='true' name='excel.41812.931655914355' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\Society_Poverty_$1.25 per day.xlsx' header='yes' imex='1'>
        <relation name='&apos;Tropics-Tableau$&apos;' table='[&apos;Tropics-Tableau$&apos;]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Date (year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
        </groupfilter>
      </group>
      <group caption='Action (Major area, region, country or area,Year)' hidden='true' name='[Action (Major area, region, country or area,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Major area, region, country or area]' />
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (YEAR(Date (year)))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[[Exclusions (Country Name,YEAR(Date (year)))]]]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country / Region:nk]' />
          <groupfilter function='level-members' level='[tyr:Date:qk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\John\Documents\GitHub\First_Draft\Formatted_Excel_Files\Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx).tde' schema='Extract' tablename='Extract' update-time='6/22/2014 12:21:39 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_0660622222907366]' formula='DATE(&quot;01/01/&quot; + STR([Year]))' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='846' timestamp-start='2014-06-22 12:21:39.422000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[sum:Ratio of Population in Extreme Poverty:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>0.085900000000000004</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.16949999999999998</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.24640000000000001</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.32280000000000003</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.3795</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.40720000000000001</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.44750000000000001</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.47470000000000001</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.5171</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.56279999999999997</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.60599999999999998</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.63790000000000002</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.67610000000000003</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.72219999999999995</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.76659999999999995</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.82239999999999991</bucket>
            </map>
            <map to='#17becf'>
              <bucket>0.8649</bucket>
            </map>
            <map to='#17becf'>
              <bucket>6.4365000000000014</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.0154</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.087100000000000011</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.1779</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.25879999999999997</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.33409999999999995</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.38439999999999996</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.40899999999999997</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.44789999999999996</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.47770000000000001</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.52110000000000001</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.56359999999999999</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.62070000000000003</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.64319999999999988</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.67689999999999995</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.72750000000000004</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.78010000000000002</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.8236</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.8427</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>0.86569999999999991</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>6.6151999999999997</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.0046999999999999993</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.099900000000000003</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.20610000000000001</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.26419999999999999</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.34610000000000002</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.38799999999999996</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.4229</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.45150000000000001</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.4829</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.5363</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.57489999999999997</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.62340000000000007</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.65269999999999995</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.68510000000000004</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.7339</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.79799999999999993</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.8306</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>0.88659999999999994</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>1.0462</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2.4455999999999998</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>7.444799999999999</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.063099999999999989</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.14859999999999998</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.23860000000000001</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.30649999999999999</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.36759999999999998</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.40100000000000002</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.44409999999999994</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.46649999999999997</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.50319999999999998</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.55330000000000001</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.60150000000000003</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.63470000000000004</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.66760000000000008</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.71340000000000003</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.75280000000000002</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.81290000000000007</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>0.85489999999999999</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>1.4887000000000001</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>5.2378</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.029700000000000001</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.12369999999999999</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.23050000000000001</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.29820000000000002</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.36009999999999998</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.39810000000000001</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.43680000000000002</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.45929999999999999</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.49840000000000001</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.54289999999999994</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.5958</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.63090000000000002</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.66520000000000001</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.69709999999999994</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.74209999999999998</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.80540000000000012</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.84650000000000003</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>0.92290000000000005</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>1.3673999999999999</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>4.4786999999999999</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>8.4655000000000005</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.023599999999999999</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.1182</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.2223</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.2873</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.35600000000000004</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.39280000000000004</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.43140000000000001</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.4582</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.4914</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.54100000000000004</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.59209999999999996</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.62690000000000001</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.66269999999999996</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.68930000000000002</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.73959999999999992</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.80279999999999996</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.83760000000000001</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>0.9052</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>1.3311999999999997</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>4.1093999999999999</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>7.9171000000000005</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.0054000000000000003</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.1038</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.2072</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.26839999999999997</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.34990000000000004</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.3896</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.42320000000000002</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.4536</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.48409999999999997</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.53639999999999999</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.57869999999999999</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.62529999999999997</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.65359999999999996</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.68530000000000002</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.73680000000000012</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.79959999999999998</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.83069999999999988</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>0.88919999999999999</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2.9300999999999999</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>7.4597999999999995</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.086800000000000002</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.1772</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.24879999999999999</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.32329999999999998</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.38329999999999997</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.40770000000000001</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.44780000000000003</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.47720000000000001</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.51939999999999997</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.56289999999999996</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.61219999999999997</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.64060000000000006</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.67659999999999998</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.72489999999999999</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.77249999999999996</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.82319999999999993</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0.86519999999999997</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>6.4406999999999996</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.0022000000000000001</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.092499999999999999</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.19879999999999998</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.25890000000000002</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.33610000000000001</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.38520000000000004</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.41060000000000002</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.43409999999999999</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.44829999999999998</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.47970000000000002</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.52459999999999996</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.56369999999999998</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.62119999999999997</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.64390000000000003</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.67810000000000004</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.72809999999999997</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.78220000000000001</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.82620000000000005</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>0.87150000000000005</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>6.9007000000000005</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.070900000000000005</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.159</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.24239999999999998</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.32119999999999999</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.37560000000000004</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.40579999999999999</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.44600000000000001</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.4703</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.50729999999999997</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.55899999999999994</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.60489999999999999</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.63739999999999997</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.6734</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.71889999999999998</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.75749999999999995</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.81930000000000003</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>0.86150000000000004</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>5.7900000000000009</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.039199999999999999</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.1336</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.2334</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.3019</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.36180000000000001</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.39939999999999998</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.442</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.4612</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.49930000000000002</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.54390000000000005</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.59999999999999998</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.63119999999999998</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.66590000000000005</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.69769999999999999</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.74450000000000005</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.80579999999999996</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.84909999999999997</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>0.96599999999999997</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>4.6518000000000006</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>8.7788000000000004</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.024900000000000002</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.1192</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.22649999999999998</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.29520000000000002</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.3599</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.39779999999999999</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.43369999999999997</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.4592</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.495</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.54249999999999998</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.59229999999999994</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.62829999999999997</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.66459999999999997</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.69370000000000009</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.74049999999999994</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.80519999999999992</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.84109999999999996</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>0.91870000000000007</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>4.1894000000000009</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>8.1682000000000006</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.065000000000000002</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.1532</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.2412</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.31480000000000002</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.36820000000000003</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.40259999999999996</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.44530000000000003</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.46679999999999999</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.50460000000000005</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.55549999999999999</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.60409999999999997</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.6361</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.67120000000000002</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.71620000000000006</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.75370000000000004</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.81299999999999994</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>0.85560000000000003</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>5.6956999999999995</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.011699999999999999</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.10550000000000001</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.2102</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.27649999999999997</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.35259999999999997</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.39169999999999999</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.42349999999999999</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.45520000000000005</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.48770000000000002</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.53659999999999997</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.5887</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.62580000000000002</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.65879999999999994</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.68540000000000001</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.7387999999999999</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.80040000000000011</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.83629999999999993</bucket>
            </map>
            <map to='#d62728'>
              <bucket>0.89029999999999998</bucket>
            </map>
            <map to='#d62728'>
              <bucket>1.3129</bucket>
            </map>
            <map to='#d62728'>
              <bucket>3.2309000000000005</bucket>
            </map>
            <map to='#d62728'>
              <bucket>7.8812000000000015</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.074700000000000003</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.16839999999999999</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.24460000000000001</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.32179999999999997</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.37840000000000001</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.40630000000000005</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.44740000000000002</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.4718</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.51700000000000002</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.56259999999999999</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.60509999999999997</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.63770000000000004</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.67430000000000012</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.71959999999999991</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.76200000000000001</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.82069999999999999</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>0.8619</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>5.8085999999999993</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.044999999999999998</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.13800000000000001</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.23699999999999999</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.3024</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.36479999999999996</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.3997</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.44209999999999999</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.4632</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.5</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.54830000000000001</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.60070000000000001</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.63170000000000004</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.66700000000000004</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.70040000000000002</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.748</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.80590000000000006</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.85010000000000008</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>0.98159999999999992</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>1.3718999999999997</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>4.7363999999999997</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>9.3323</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.048399999999999999</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.13880000000000001</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.23749999999999999</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.30469999999999997</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.36700000000000005</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.39979999999999999</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.44380000000000003</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.46509999999999996</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.50309999999999999</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.55169999999999997</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.60089999999999999</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.63219999999999998</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.6673</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.70599999999999996</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.74870000000000003</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.80689999999999995</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>0.8529000000000001</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>5.1676000000000002</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.0032000000000000002</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.093100000000000002</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.2036</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.25920000000000004</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.33990000000000004</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.38740000000000002</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.41999999999999998</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.44909999999999994</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.48109999999999997</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.53369999999999995</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.56430000000000002</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.62149999999999994</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.64410000000000001</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.67830000000000001</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.72930000000000006</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.78659999999999997</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.82629999999999992</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.87260000000000004</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0.89159999999999995</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>1.4351</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>6.9998000000000005</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.0178</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.11689999999999999</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.2198</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.2828</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.35320000000000001</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.39250000000000002</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.42380000000000001</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.45659999999999995</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.48899999999999999</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.53759999999999997</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.59119999999999995</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.62609999999999999</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.65989999999999993</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.68659999999999999</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.73950000000000005</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.80120000000000002</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.83709999999999996</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>0.9012</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>3.9104000000000001</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>7.8877999999999995</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.0045999999999999999</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.096000000000000002</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.20399999999999999</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.2606</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.34210000000000002</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.38750000000000001</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.42119999999999996</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.4506</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.48200000000000004</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.53620000000000001</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.57369999999999999</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.62209999999999999</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.6520999999999999</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.67980000000000007</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.73319999999999996</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.79379999999999995</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.82840000000000003</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>0.88190000000000002</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2.0067000000000004</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>7.0269999999999992</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;South East Asia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Northern Africa &amp; Middle East&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Central &amp; Southern Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Major area, region, country or area:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Micronesia (Fed. States of)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Online' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Extreme Poverty in Tropical Countries ($1.25 a day)' type='sheet' worksheet='Gradient Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Extreme Poverty in Tropical Countries ($1.25 a day)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country Trend Lines'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Avg' name='[avg:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0660622222907366]' derivation='Year-Trunc' name='[tyr:Calculation_0660622222907366:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Major area, region, country or area]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central &amp; Southern Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='Ratio in Extreme Poverty' />
            <format attr='subtitle' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' value='Century Gothic' />
            <format attr='font-size' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' value='9' />
            <format attr='color' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' value='#000000' />
            <format attr='font-weight' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' value='normal' />
            <format attr='font-weight' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='normal' />
            <format attr='font-family' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='Century Gothic' />
            <format attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='#000000' />
            <format attr='font-size' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='9' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Select a year :'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='16'>Select a year :</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' />
              <text column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Major area, region, country or area:&#9;</run>
                <run bold='true'>&lt;[excel.41812.931655914355].[none:Major area, region, country or area:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[excel.41812.931655914355].[none:Year:ok]&gt;&#10;</run>
                <run fontcolor='#787878'>Ratio of Population in Extreme Poverty:&#9;</run>
                <run bold='true'>&lt;[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]</cols>
        <pages>
          <column>[excel.41812.931655914355].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' line-pattern='line-pattern-dotted' line-stroke-width='1' lines='true' mark-type='all' marks='false' />
      </table>
    </worksheet>
    <worksheet name='Gradient Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>&lt;</run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>Page Name</run>
            <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='18'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Avg' name='[avg:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel.41812.931655914355].[Latitude (generated)]' included-values='in-range'>
            <min>-22.125999999999998</min>
            <max>35.175300000000007</max>
          </filter>
          <filter class='quantitative' column='[excel.41812.931655914355].[Longitude (generated)]' included-values='in-range'>
            <min>-101.67999999999999</min>
            <max>177.18599999999998</max>
          </filter>
          <filter class='quantitative' column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>0.98159999999999992</max>
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central &amp; Southern Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</column>
            <column>[excel.41812.931655914355].[Longitude (generated)]</column>
            <column>[excel.41812.931655914355].[Latitude (generated)]</column>
            <column>[excel.41812.931655914355].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='font-family' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='Century Gothic' />
            <format attr='font-size' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='9' />
            <format attr='color' data-class='subtotal' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' palette='area-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='Ratio in Extreme Poverty'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='12'>Ratio in Extreme Poverty</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[excel.41812.931655914355].[Longitude (generated)]' value=' Longitude'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'> Longitude</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[Latitude (generated)]' value='Latitude'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'>Latitude</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[none:Region:nk]' value='Select a region of interest :'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='16'>Select a region of interest :</run>
              </formatted-text>
            </format>
            <format attr='title' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value=' Ratio of Population'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic'> Ratio of Population</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Year'>
              <formatted-text>
                <run bold='false' fontalignment='1' fontcolor='#000000' fontname='Century Gothic' fontsize='16'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' />
              <color column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' />
              <geometry column='[excel.41812.931655914355].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[Latitude (generated)]</rows>
        <cols>[excel.41812.931655914355].[Longitude (generated)]</cols>
        <pages>
          <column>[excel.41812.931655914355].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Region Trends'>
      <layout-options>
        <title>
          <formatted-text>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0660622222907366]' derivation='Year-Trunc' name='[tyr:Calculation_0660622222907366:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Major area, region, country or area]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central &amp; Southern Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='Ratio in Extreme Poverty' />
            <format attr='subtitle' class='0' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' value='Century Gothic' />
            <format attr='color' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Region:nk]' />
              <text column='[excel.41812.931655914355].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='None' name='[none:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Sum' name='[sum:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Major area, region, country or area]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' direction='DESC' using='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]'>
          </sort>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central &amp; Southern Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[none:Year:ok]</column>
            <column>[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='124' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='Century Gothic' />
            <format attr='font-weight' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='normal' />
            <format attr='color' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='#000000' />
            <format attr='font-size' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Avg' name='[avg:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Major area, region, country or area]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' direction='DESC' using='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]'>
          </sort>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central &amp; Southern Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='Century Gothic' />
            <format attr='color' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='#000000' />
            <format attr='font-weight' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='normal' />
            <format attr='font-size' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='9' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' num-steps='10' palette='area-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' />
              <text column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column datatype='string' name='[Major area, region, country or area]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Kinshasa)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[Year]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[Major area, region, country or area]' derivation='None' name='[none:Major area, region, country or area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='None' name='[none:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central &amp; Southern Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='Century Gothic' />
            <format attr='font-weight' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='normal' />
            <format attr='color' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='#000000' />
            <format attr='font-size' field='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</rows>
        <cols>[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tropics-Tableau (Society_Poverty_$1.25 per day.xlsx)' name='excel.41812.931655914355' />
          </datasources>
          <datasource-dependencies datasource='excel.41812.931655914355'>
            <column caption='Proper_Year' datatype='date' name='[Calculation_0660622222907366]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;01/01/&quot; + STR([Year]))' scope-isolation='false' />
            </column>
            <column datatype='real' name='[Ratio of Population in Extreme Poverty]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Ratio of Population in Extreme Poverty]' derivation='Avg' name='[avg:Ratio of Population in Extreme Poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0660622222907366]' derivation='Year-Trunc' name='[tyr:Calculation_0660622222907366:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Major area, region, country or area]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel.41812.931655914355].[none:Region:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central &amp; Southern Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.41812.931655914355].[none:Region:nk]</column>
            <column>[excel.41812.931655914355].[Action (Major area, region, country or area,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='Ratio in Extreme Poverty' />
            <format attr='subtitle' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='Century Gothic' />
            <format attr='color' field='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41812.931655914355].[none:Region:nk]' />
              <text column='[excel.41812.931655914355].[none:Region:nk]' />
              <text column='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[excel.41812.931655914355].[none:Region:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</run>
                <run fontcolor='#000000'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</rows>
        <cols>[excel.41812.931655914355].[tyr:Calculation_0660622222907366:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
      </zones>
    </dashboard>
    <dashboard name='Extreme Poverty in Tropical Countries ($1.25 a day)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>&lt;</run>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>Sheet Name</run>
            <run bold='false' fontcolor='#000000' fontname='Century Gothic' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#fff8de' />
        </style-rule>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='21' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='7472' id='20' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone fixed-size='61' h='8764' id='22' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='7472'>
              <zone h='8764' id='23' type='empty' w='9979' x='0' y='7472'>
              </zone>
              <zone fixed-size='387' h='8764' id='26' is-fixed='true' name='Country Trend Lines' type='currpage' w='41710' x='9979' y='7472'>
              </zone>
              <zone fixed-size='355' h='8764' id='13' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[none:Region:nk]' type='filter' w='38331' x='51689' y='7472'>
              </zone>
              <zone h='8764' id='24' type='empty' w='9557' x='90020' y='7472'>
              </zone>
            </zone>
            <zone h='83189' id='19' type='layout-basic' w='100000' x='0' y='16236'>
              <zone h='83189' id='5' param='horz' type='layout-flow' w='100000' x='0' y='16236'>
                <zone h='83189' id='3' type='layout-basic' w='77719' x='0' y='16236'>
                  <zone h='53546' id='1' name='Gradient Map' show-title='true' w='77719' x='0' y='16236'>
                  </zone>
                  <zone h='29643' id='10' name='Country Trend Lines' w='57233' x='20486' y='69782'>
                  </zone>
                  <zone h='29643' id='27' name='Sheet 3' w='20486' x='0' y='69782'>
                  </zone>
                </zone>
                <zone fixed-size='211' h='83189' id='17' is-fixed='true' type='layout-basic' w='22281' x='77719' y='16236'>
                  <zone h='42599' id='4' param='vert' type='layout-flow' w='22281' x='77719' y='16236'>
                    <zone fixed-size='52' h='8621' id='6' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' w='22281' x='77719' y='16236'>
                    </zone>
                    <zone fixed-size='77' h='9410' id='14' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' type='filter' w='22281' x='77719' y='24857'>
                    </zone>
                    <zone fixed-size='97' h='9410' id='15' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[Longitude (generated)]' type='filter' w='22281' x='77719' y='34267'>
                    </zone>
                    <zone fixed-size='170' h='9410' id='16' is-fixed='true' name='Gradient Map' param='[excel.41812.931655914355].[Latitude (generated)]' type='filter' w='22281' x='77719' y='43677'>
                    </zone>
                    <zone h='5748' id='28' name='Sheet 3' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' w='22281' x='77719' y='53087'>
                    </zone>
                  </zone>
                  <zone h='40590' id='18' param='vert' type='layout-flow' w='22281' x='77719' y='58835'>
                    <zone fixed-size='456' h='40590' id='11' is-fixed='true' name='Region Trends' show-title='true' w='22281' x='77719' y='58835'>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Gradient Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41812.931655914355].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.929562673613].[avg:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41812.931655914355].[none:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:ok]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel.41812.931655914355].[none:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:ok]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
          <field>[excel.41812.931655914355].[yr:Calculation_0660622222907366:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Country Trend Lines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Major area, region, country or area:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2008.0</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
          <field>[excel.41812.931655914355].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Region Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41812.931655914355].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel.41812.931655914355].[none:Major area, region, country or area:nk]</field>
          <field>[excel.41812.931655914355].[none:Region:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Extreme Poverty in Tropical Countries ($1.25 a day)'>
      <active id='27' />
      <zones>
        <zone count='1' dropdown='0' name='Country Trend Lines' name1='Gradient Map' playctrls='0' trailctrls='0' type='currpage' />
        <zone mode='dropdown' name='Gradient Map' param='[excel.41812.931655914355].[none:Region:nk]' type='filter' />
        <zone name='Gradient Map'>
          <viewpoint>
            <current-page>
              <multibucket>
                <bucket>1996.0</bucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Country Trend Lines'>
          <viewpoint>
            <current-page>
              <multibucket>
                <bucket>1996.0</bucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 3'>
          <viewpoint>
            <zoom type='fit-width' />
          </viewpoint>
        </zone>
        <zone name='Gradient Map' pane-specification-id='0' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' />
        <zone name='Gradient Map' param='[excel.41812.931655914355].[sum:Ratio of Population in Extreme Poverty:qk]' show-null-ctrls='false' type='filter' />
        <zone name='Gradient Map' param='[excel.41812.931655914355].[Longitude (generated)]' show-null-ctrls='false' type='filter' />
        <zone name='Gradient Map' param='[excel.41812.931655914355].[Latitude (generated)]' show-null-ctrls='false' type='filter' />
        <zone name='Sheet 3' pane-specification-id='0' param='[excel.41812.931655914355].[avg:Ratio of Population in Extreme Poverty:qk]' type='color' />
        <zone name='Region Trends'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel.41812.931655914355].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Gradient Map' width='191'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO3dd2AT5+E38EfS3WnvaUke8t7bBmMMZthmTwcI
      CQSSkDRpmiZNM5v01yZvRpM0CVkNGZDFDAFS9p7GTA9sjPeWLMvWsGVr6/T+YWMMlVK5BxjI
      8/nr4e7R6ZH1RXf33HPPkTweD4Cg/xV5tBsA3d1ggCBCYIAgQmCAIEJggCBCYIAgQmCAIEJg
      gCBCYIAgQmCAIEJggCBCYIAgQmCAIEJggCBCYIAgQmCAIEJggCBCYIAgQmCAIEJggCBCYIAg
      QmCAIEJggCBCYIAgQmCAIEJggCBCYIAgQmCAIEJggCBCYIAgQmCAIEJggCBCYIAgQmCAIEJg
      gCBCYIAgQmCAIEJggCBCYIAgQmCAIEJggCBCYIAgQmCAIEJggCBCEK9LTSaT0Wi8zU2B7kYk
      r0/rcbvdOI7f/tb8RqjVarFYjGHYaDfkJvD+C0ShUCgUym1uym8HiUSiUCgoio52Q24CeAwE
      EQIDBBHifRfmjaNH067RWxGePEjJp5J81nOZta39VLmQQ0PhTtAvLtyl7e3wtVbEFNFQ+kBZ
      bWrHfTxhkkvncmicgXKnudPusnutxsSYQqZwoNzdrzfbzV6rYRRMwZUPlHttvd39Bl/N8ztA
      fZUb3/9o50U1I3bWk//35CQZ1WfFyztXlwc+s3CiSkT3d+O/bT3Wntf3vuZr7VMTnklUJA+U
      3zzwutVp9VqtMHnRzLjZA+Uvir6o6arxWm1cyLincp4aKG8s+2n3lX1eq4Xwg79YuHqgfKTh
      5EenPvfVPL8D1Hr2GOOBdftyeva+v7umN4vtbmvEAxPkNACser3Z6QTAbreau3UeFi9zeYFS
      gnZfKLdy7G2NXQ6qJDIlOYyHelxWk7q+qq69B2eIRWyMI5HKGI4us0Pfqu4222gBMRkxzJaL
      JW1mRBCRlBLGJzv6Optrqxs7bWSmJCQiIljKocJftTuL3wFSpOQKqk8euzJ+5qvPUO3qhv0b
      P3M8+sUiOQC6ysoqvR6AxrPHjl9oi5s/3nKYseCNMQ1v/qUoNMjZ1Q+YgUlG2mPzIj0tpQc3
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='156'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country Trend Lines' width='192'>
      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
      tsZ4QpeyY2VEDCIRQmpjmiCSNAkgiTFJN+q6NmYbAFzjsuzTbdsKIZRRbdMmya0QAnk6q9nt
      vplMBr7xh5uddhr/0c//9gc/e/jrv/I2u/L/+/GHv/O7v5Mq/BjxRL8Mhj7xj/OxqQv7mBr6
      xD/Oyx02fYWXHq8c6BUuhVcO9AqXwisHeoVL4ZUDvcKl8MqBXuFSOPdZGBEtFouDf65MIT3+
      4ZrNACCEcJwwe/1ff4GGPr6Pc1Ie8PHPj1s5dxzoCLqus09TPcQYmfmImePNAMB7L4Q4Qp2/
      Ms608tcv+eGahmKMRHQ8xHK8ZQgBEdd5HO+9lPKIMuHzeRwiCmGpRH4A55x6urgFTniPx61c
      1oGuHM4581wS0Z+PoU/847x0DvQKHy+8JAll/M1/839+8atf/rff+O6NG9ce/OJv7PXP/E9f
      +dw3v/fT//FrX71CM1157xt/9vM7o+a9ew82N2/94Ic/+sy7bzTl4p2/99t/752rLCX7i29/
      Y/zGF//6W9+IxYb1s06Mfv+f/KN/+6/+/f/yT3//Cq34ZuePvvnDN6/RT96/q/Ibvp7mg6ws
      q7d/7Su/8dlbV2Ulhurf/B//GvPcVV2yseV3PsDxa7//337hG//hr/7J7/3OS7ILw1u3bshY
      bOrcAAABzklEQVRsa1PV09oNxzcyCf/6D7/ZtNOrNWOL0eYgu3Xnzt27D4MUn3vzVjba3rl7
      NxtccU7Z9Vs3BZjbt0b7ZXfn+uberPreN//o3rT0V1rko9PB9nhw4/ZrH919+JnPvLlz/97N
      T785vf+Rzc8hH34mpMq/9rXf3s6zd3/rK9cH9e3Xv/zGOPvDP/rGtJwxs/yDP/iDKzR2YSym
      e4Nrr7m2+wdf/sJ7P/47O9r87NtvzKvmM2+/daV24v5e/ek7k3T77ZtpeP/B/mc+99nR5p1f
      f+f2lVqBtl4IM1LUffHvf0WG9le/9FujIl1MZ+/8yrtXJOPRg/b3yk/d2bQbb3zuzesy2/iN
      X3mdzPjz7376ClO3Kbb//H/93/I7b+z//Mec32p2/65Wg1995415Wb/7ztuv1kCvcCm8JFPY
      K3xc8cqBXgA++OD9eu+jR+WlZGVeErxyoBeAOL//L/74u9rvfeOP/91HO9P/+0+++Wf/z1/8
      6f/1jVkTXvStnRuvHOgF4PXP/drbN2//5bf+5NF07z9979uf/9IXH/ziP886GL5o+bYL4NUi
      +oUgPLw/Hebiz7/9/S98+St/95ffybZv376xdWP7eas2XR7/PyuayVKPsojPAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Region Trends' width='192'>
      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
      xdrFQAtNLj4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Extreme Poverty in Tropical Countries ($1.25 a day)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOx9d5xeRbn/88yc+vbtNdn0HpJAICGhCMoFLOjF
      e716Bb16vf4Qu6CoqNiwIWJDrw2v2O4VGxZQadIJgRBISO+bbLa//T1tZp7fH++7m93Nu9me
      Ivl+8sln33Nm5sw553tmnnnaILl74DROY7xgJ7oDp3Fq4zSBTmNCOE2g0xgb8plMwRP9PyeH
      QE/e/+cPfuTm6264+bobbj6cVQNPZdu23/aTP0/KVfrxfz+640M33PzRT33t/nXbaALtuOnO
      r3znZ8OcpC/e8NHHtneWPbfz2aeuu+Hm933oMx/+xFfbs6JsmTKQztuvem9HXo5YcNf6h+68
      f9ORrhDt277llq988/qPffmHv7gn6476ioNAX//qbTm/74f03/GW97blgtHU7N67+fO3/xYA
      9mx5/p1vv/a6z9/Rk/MAYM+mZ7VxdWUodmx+7qr3XX9Ws3X0KRX4ven8pFylH5s2Hvr0tz4Z
      8pwbP3JTy+zPzq0uc93RgJTsSaaHOYlvufbaioaqsufmnrX61rOWfeC6r93y+evHcD1u3fjp
      62pCfMSCvptP56P9Px+793e/Xddx3bvf2lAVfu6JR6+78bZvffk6Uxvzx9/b06v6Pjhk+sc+
      fV1daFQEeOLBR5esvBzAveXrd11+yRqvZu6e1q6qhc2zlp41OQQCgq6OjkPMAkALcp/79j23
      fP7aH9566+LL/u3Rn91x33M9q5cvueu/P1/RtPgt/++/8ruf/uW9z1imXtkw80PvfuOedfd9
      6ZdPVljcKXhXXXXFA/c93NWVvOKqt15+7rwn7rvn539ab5l6oqHl+vf+uz34kTFNj4V0N1Dp
      ztYv3nKHh5rvy3e8550zzNT37915wztfA6S+fPNt13zkQ9se+9uddz9hWUasZtr173/zn3/w
      g79t71h25tl0aP2D923++YJ5O7bv/fTH34kA//u97y1+9b8vbYoCwK9/ctdl115zx9dvjetm
      T0H4ZH72Mx+osIc+sSfv/fVtv3l+0eIFH3/Xa7/+1e8cSvvC9y97/b++5oKlt3zmphwksoVC
      4AeXvO71V1y49Nvf/cmXbr3p8Nbnb/+fPxJiIODq/3rbynn19/z6rnue2GborDIRluasfz1n
      wFVk/s7fb/z2dz9jcgSAledftGz1+Rpnnft3fOG2nzHD9CV84Pr3NKlDN/9h7+ff9SoA+Mot
      X3/r/7v2+7d+jXQtlfU8wT950wf3rHvgvoc3eLfduTh8+PF9tHTFsoObn/7UZz/ZtnX9bT/6
      k2Wbmp34yIffST27b/j8j2NVdR+/8T01EaPYhef3d771ygYAxkR2Z2vXuauvPHthffHU5BCI
      iP76p3tfjGsAxjuuvfqKsyo++KHPVs5eds3S6cuufbt799ZXXbDoe7fit27+mJbZ/96/bv/u
      rTfpHDc+cu9P735qdbXP49O+cfN/Htq67m2f/d2ff/4F5vZ+4HM/u2C2+T9/2Xb7127SOb74
      +F/v+PUT737jecXLObnDN95wc9gwF6++bElD6DM3fOktH/jQoqZEIdV57ce/e8ftn/QP/q6r
      cDkdflFUzjFzB39w98bvfO0mg7Ot6x6841ePVLjp8175z/9x6RlOcsUh+u2bX3/JT2//1oZ9
      yTNqaEOb+Lem0qfvFhypqHBg36U3fP7ixY1P3/Or3z+49W2vWjrk3oXvzzvz3E9f+8qff+db
      8y9+3UfWzJOBe8N1n16+7LM97R1r3nLVFefOVcL78PtvXLHiS/m8Q8q95Ru/+tytN1WGDTfT
      u/VQpnXL+vu2ud/42qc4wt9/fedvtvmD3kuqXZs2v8ieInRdA+XffMtPPvaFT9bHrHTH/uu/
      9L3bPnR5wS3NR67jKCKnq/Wct1z3utWztj527133PPPeN15+yYNPXv/Bt/zmm585/1VvvOri
      ue9739+ll/3Sd+/++jc+GzF594Gt3/jur167yJy1+hXXv+k8bur9V3SzMhExAeCLX/n4jR/5
      xLe++s2ZX7x+fnPlpBEIGV71n//RP4Wdff551332x7dfey0OKDN99oyowXbt2Ll31+6PfvwL
      xYNnnn8RAJy9agUihKOxZUvmGBzBNLknD+/bvWf7rv6SK9a+rL8pO9Jw05dvjPX97PLlwqYE
      AIQStQ0apQivfv0FP//Nw+zQxje9410d+9bv3bX7Yx//YrHw0tXnA4QWzGka2P8r/+2KL/7o
      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
      vmu0FpvNvb/y3bt8Xn+/WIUucbWF5Oq1YGov19eyK+dL4we383MJL9XMQFnVmjvY77pQ2GUI
      7PZgAeuwGNy6LxNSpMIIgEUQwDI0U9fMhEUEgFBKgRopo2RplqQutcICIIjIoBAEUSCFkoAD
      NAzKxH513qVZqTZ7Hzv/BWHTwWdiclRJeurctceffnLvoZFzZz5thMFEf3HWz44e21shWcuw
      vnCNyruLqehGevETnBzBQo+5fkWSZnz+HBtrG8344w+3NavjwMjo3/2FIfzi0xpFhNdjyByL
      YUgtWycAwKwQea3d6SkhCKB1gmgwd5khWBZCLAU0VFKKwGUmbce2bloAQRRF5WKecJgfUCwr
      QGYRl0eoCXgAbQuFl38lvfJp+OK3v+jB3ju+WIYyFjn7L//NplPYNhja+hQGALb9/b98u3d8
      z3NPHLr9za1OYdt0LDGSWDZWEqtYDADk5lNmAQRN6CnUCjWiItAKHaMI+roj5hukhpY7AWUA
      ed4guizLms125kgpHfheECivK0pfOnQKCABACkWhKATCji/OCPzJnNdy+ETFndg2MeNhO4U9
      3GBnBY25Q62ubZBajo2khlMnCvNZA8tCAKWAIp+KPol4gd6SYje3NoiAdVDwb+VOcAJO0DhM
      08y0Yw0OmH1fF3srZaW778XNF/lbjhFRbtHNfITv+mu15fbYaL8ILc4vFnv7S5GftBM/Ch62
      spKbAsounz//2dza409+ZajnZmm+67NzE3vG8utrN+Ynx0eXrn1mSqONhZmpAwfr1dXhoV0o
      1Hp4El3LZRCMj6bXrqEC1T/iGg1d9NNka+Fgd/nTqwura+WR3SUWNpuJE4gC3VfQet2ZkTui
      WYAZmME4tEyddwA2vPrr3yvmq0XoCWJ+DoeMwTA4Y00c20wCTMIw6OktaG+3xZpugwikpvzq
      u+VWAu0Dl4P409Us9OelufrZlaWevZODvjDg4lrz6998qbf44H//XT3Imtdr8I2vPbs2f/23
      /8drJ04cn7mxfOTg3vffe7c0MD5UoMUY9472To6PvPqTt6lvwtQWzpy9ODW97+PTn1SGx21t
      fnauPTBSyJx66WvPBepOk4hUePQZ8k31lb/S43slHAunBrzeSrbWlOUr6aUrW3YTsR23R8fH
      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
    </thumbnail>
  </thumbnails>
</workbook>
